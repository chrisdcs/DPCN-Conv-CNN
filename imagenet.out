nohup: ignoring input
epoch: 0
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.6344), tensor(0.3899), tensor(0.5403), tensor(0.2232), tensor(0.4150), tensor(0.4315)]
sparse:
[tensor(0.6063), tensor(0.3083), tensor(0.5377), tensor(0.2435), tensor(0.4150), tensor(0.4315)]
[0, 4, 102459.5, 7400.228515625, 13359.349609375, 1839.201171875, 6888.13134765625, 930.2489013671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.5519), tensor(0.1695), tensor(0.4884), tensor(0.0606), tensor(0.3661), tensor(0.1244)]
sparse:
[tensor(0.5507), tensor(0.1619), tensor(0.4797), tensor(0.1047), tensor(0.3661), tensor(0.1244)]
[0, 4, 89507.3515625, 7242.0673828125, 18344.89453125, 1553.607421875, 3269.105224609375, 766.335693359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3744), tensor(0.2804), tensor(0.5235), tensor(0.0172), tensor(0.3935), tensor(0.1077)]
sparse:
[tensor(0.3863), tensor(0.1560), tensor(0.4873), tensor(0.0317), tensor(0.3935), tensor(0.1077)]
[0, 4, 110450.53125, 8343.6591796875, 67566.140625, 2001.755126953125, 2627.261962890625, 793.250732421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1706), tensor(0.1587), tensor(0.0658), tensor(0.0122), tensor(0.0025), tensor(0.0395)]
sparse:
[tensor(0.1838), tensor(0.0892), tensor(0.0682), tensor(0.0302), tensor(0.0025), tensor(0.0395)]
[0, 4, 100674.125, 15090.1826171875, 137937.140625, 3235.40771484375, 773.982666015625, 75.801513671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3229), tensor(0.1330), tensor(0.1837), tensor(0.1142), tensor(0.0334), tensor(0.0545)]
sparse:
[tensor(0.3173), tensor(0.0861), tensor(0.1845), tensor(0.0839), tensor(0.0334), tensor(0.0545)]
[0, 4, 83529.8984375, 8996.7880859375, 68023.7265625, 3796.939453125, 4961.5654296875, 367.49713134765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1251), tensor(0.0857), tensor(0.0322), tensor(0.0285), tensor(0.), tensor(0.0114)]
sparse:
[tensor(0.1343), tensor(0.1072), tensor(0.0346), tensor(0.0311), tensor(0.), tensor(0.0114)]
[0, 4, 38796.70703125, 12218.1962890625, 116881.390625, 2212.1025390625, 2410.1904296875, 14.36320972442627]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3470), tensor(0.1151), tensor(0.3613), tensor(0.0251), tensor(0.3626), tensor(0.1672)]
sparse:
[tensor(0.3313), tensor(0.1165), tensor(0.3629), tensor(0.0349), tensor(0.3626), tensor(0.1672)]
[0, 4, 51382.984375, 6555.16650390625, 51554.29296875, 1404.12109375, 9543.732421875, 921.3260498046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1428), tensor(0.1824), tensor(0.1215), tensor(0.0163), tensor(0.1060), tensor(0.1848)]
sparse:
[tensor(0.1487), tensor(0.1538), tensor(0.1213), tensor(0.0337), tensor(0.1060), tensor(0.1848)]
[0, 4, 37357.5859375, 9352.982421875, 108077.390625, 1338.1546630859375, 14257.087890625, 883.3151245117188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2376), tensor(0.1241), tensor(0.1720), tensor(0.0382), tensor(0.2953), tensor(0.0343)]
sparse:
[tensor(0.2508), tensor(0.0938), tensor(0.1692), tensor(0.0436), tensor(0.2953), tensor(0.0343)]
[0, 4, 82220.34375, 11085.9970703125, 101341.765625, 3106.2392578125, 12005.3232421875, 687.8681030273438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1394), tensor(0.1048), tensor(0.0376), tensor(0.0300), tensor(0.0041), tensor(0.0116)]
sparse:
[tensor(0.1623), tensor(0.1090), tensor(0.0401), tensor(0.0344), tensor(0.0041), tensor(0.0116)]
[0, 4, 42785.28125, 10799.734375, 85527.5, 4366.9541015625, 2881.880859375, 79.24116516113281]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2295), tensor(0.1665), tensor(0.2149), tensor(0.0201), tensor(0.1859), tensor(0.0608)]
sparse:
[tensor(0.2334), tensor(0.1075), tensor(0.2073), tensor(0.0465), tensor(0.1859), tensor(0.0608)]
[0, 4, 41360.109375, 10509.3740234375, 124021.859375, 2494.8466796875, 10713.7890625, 860.474609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2101), tensor(0.1581), tensor(0.0269), tensor(0.0449), tensor(0.0029), tensor(0.0096)]
sparse:
[tensor(0.2067), tensor(0.1195), tensor(0.0279), tensor(0.0443), tensor(0.0029), tensor(0.0096)]
[0, 4, 39875.53125, 9764.978515625, 95841.71875, 2733.350341796875, 1547.0491943359375, 38.87500762939453]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2657), tensor(0.1328), tensor(0.3715), tensor(0.0410), tensor(0.4646), tensor(0.1189)]
sparse:
[tensor(0.2664), tensor(0.0982), tensor(0.3570), tensor(0.0480), tensor(0.4646), tensor(0.1189)]
[0, 4, 76108.09375, 8906.1796875, 76816.015625, 2051.5859375, 26741.701171875, 895.9515380859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2170), tensor(0.1181), tensor(0.1300), tensor(0.0526), tensor(0.1019), tensor(0.0547)]
sparse:
[tensor(0.2129), tensor(0.0981), tensor(0.1220), tensor(0.0546), tensor(0.1019), tensor(0.0547)]
[0, 4, 36413.046875, 8055.5576171875, 49977.22265625, 2279.984375, 9230.337890625, 1052.171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2363), tensor(0.1499), tensor(0.2552), tensor(0.0414), tensor(0.2177), tensor(0.0432)]
sparse:
[tensor(0.2412), tensor(0.1356), tensor(0.2401), tensor(0.0651), tensor(0.2177), tensor(0.0432)]
[0, 4, 55696.421875, 9255.4853515625, 77362.078125, 2060.0322265625, 10036.421875, 863.4075927734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2385), tensor(0.1862), tensor(0.1554), tensor(0.0299), tensor(0.1186), tensor(0.0888)]
sparse:
[tensor(0.2305), tensor(0.1404), tensor(0.1485), tensor(0.0763), tensor(0.1186), tensor(0.0888)]
[0, 4, 46246.1875, 7933.953125, 61817.2578125, 2834.7021484375, 7858.62890625, 831.3416748046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2032), tensor(0.1160), tensor(0.2831), tensor(0.0177), tensor(0.1312), tensor(0.0262)]
sparse:
[tensor(0.2066), tensor(0.0909), tensor(0.2671), tensor(0.0302), tensor(0.1312), tensor(0.0262)]
[0, 4, 48091.4296875, 6548.9736328125, 49033.015625, 1137.958984375, 5929.6171875, 544.5574340820312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2343), tensor(0.1469), tensor(0.1329), tensor(0.0454), tensor(0.0831), tensor(0.0325)]
sparse:
[tensor(0.2299), tensor(0.1268), tensor(0.1280), tensor(0.0399), tensor(0.0831), tensor(0.0325)]
[0, 4, 42419.578125, 6548.4248046875, 53434.8046875, 1876.650634765625, 10696.97265625, 538.785400390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2492), tensor(0.1663), tensor(0.2510), tensor(0.0316), tensor(0.2168), tensor(0.0248)]
sparse:
[tensor(0.2473), tensor(0.1069), tensor(0.2299), tensor(0.0756), tensor(0.2168), tensor(0.0248)]
[0, 4, 57464.7578125, 8479.2080078125, 61634.515625, 2265.392333984375, 12572.140625, 749.493896484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2762), tensor(0.1650), tensor(0.1330), tensor(0.0149), tensor(0.1129), tensor(0.0287)]
sparse:
[tensor(0.2705), tensor(0.1166), tensor(0.1284), tensor(0.0375), tensor(0.1129), tensor(0.0287)]
[0, 4, 144448.71875, 6973.43359375, 67147.609375, 1785.839599609375, 9473.40625, 596.9646606445312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2344), tensor(0.1111), tensor(0.2041), tensor(0.0310), tensor(0.2150), tensor(0.0904)]
sparse:
[tensor(0.2474), tensor(0.1530), tensor(0.2044), tensor(0.0420), tensor(0.2150), tensor(0.0904)]
[0, 4, 43681.09375, 9495.037109375, 165483.796875, 3232.520263671875, 29248.138671875, 1069.6751708984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1707), tensor(0.1180), tensor(0.1740), tensor(0.0268), tensor(0.0885), tensor(0.0305)]
sparse:
[tensor(0.1796), tensor(0.1478), tensor(0.1647), tensor(0.0299), tensor(0.0885), tensor(0.0305)]
[0, 4, 33932.9140625, 9304.7294921875, 171250.8125, 3901.935302734375, 15524.0859375, 1009.5]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2588), tensor(0.1047), tensor(0.1898), tensor(0.0232), tensor(0.0987), tensor(0.0404)]
sparse:
[tensor(0.2602), tensor(0.0999), tensor(0.1823), tensor(0.0491), tensor(0.0987), tensor(0.0404)]
[0, 4, 46511.0234375, 7310.37939453125, 68986.953125, 1835.926513671875, 10018.7978515625, 713.6767578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2249), tensor(0.1919), tensor(0.2328), tensor(0.0270), tensor(0.1242), tensor(0.0544)]
sparse:
[tensor(0.2287), tensor(0.0757), tensor(0.2208), tensor(0.0356), tensor(0.1242), tensor(0.0544)]
[0, 4, 38615.5703125, 7809.11328125, 85269.421875, 2397.51318359375, 13536.0263671875, 956.0918579101562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2821), tensor(0.1392), tensor(0.2701), tensor(0.0180), tensor(0.1384), tensor(0.0504)]
sparse:
[tensor(0.2817), tensor(0.1177), tensor(0.2585), tensor(0.0390), tensor(0.1384), tensor(0.0504)]
[0, 4, 69653.296875, 11883.099609375, 110329.78125, 2485.1025390625, 9702.791015625, 815.919921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2411), tensor(0.2142), tensor(0.0316), tensor(0.0402), tensor(0.0058), tensor(0.0050)]
sparse:
[tensor(0.2337), tensor(0.0957), tensor(0.0330), tensor(0.0442), tensor(0.0058), tensor(0.0050)]
[0, 4, 64186.28125, 8582.32421875, 113315.1484375, 2437.7392578125, 6325.1533203125, 120.36476135253906]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2671), tensor(0.2227), tensor(0.2595), tensor(0.0362), tensor(0.1574), tensor(0.0817)]
sparse:
[tensor(0.2614), tensor(0.1129), tensor(0.2444), tensor(0.0444), tensor(0.1574), tensor(0.0817)]
[0, 4, 87467.203125, 13202.626953125, 101357.359375, 3297.3359375, 60416.484375, 964.3321533203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2165), tensor(0.1502), tensor(0.0843), tensor(0.0175), tensor(0.0552), tensor(0.0222)]
sparse:
[tensor(0.2205), tensor(0.0817), tensor(0.0797), tensor(0.0311), tensor(0.0552), tensor(0.0222)]
[0, 4, 93539.7578125, 15430.5234375, 93688.3125, 1608.85595703125, 8620.4970703125, 739.7134399414062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2363), tensor(0.1272), tensor(0.1780), tensor(0.0258), tensor(0.0497), tensor(0.0185)]
sparse:
[tensor(0.2448), tensor(0.0923), tensor(0.1670), tensor(0.0456), tensor(0.0497), tensor(0.0185)]
[0, 4, 49603.71875, 9361.8466796875, 86127.75, 2420.431640625, 6547.0146484375, 672.446533203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2555), tensor(0.1206), tensor(0.1074), tensor(0.0587), tensor(0.0692), tensor(0.0216)]
sparse:
[tensor(0.2563), tensor(0.0877), tensor(0.1042), tensor(0.0609), tensor(0.0692), tensor(0.0216)]
[0, 4, 84094.34375, 8579.3173828125, 64807.2890625, 2259.22998046875, 8079.82275390625, 940.8936157226562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1956), tensor(0.1432), tensor(0.2312), tensor(0.0339), tensor(0.0490), tensor(0.0357)]
sparse:
[tensor(0.1926), tensor(0.1422), tensor(0.2112), tensor(0.0398), tensor(0.0490), tensor(0.0357)]
[0, 4, 30726.609375, 9433.955078125, 103190.96875, 2302.98193359375, 4653.55908203125, 495.42706298828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2232), tensor(0.1490), tensor(0.1570), tensor(0.0405), tensor(0.0931), tensor(0.0321)]
sparse:
[tensor(0.2272), tensor(0.1101), tensor(0.1502), tensor(0.0474), tensor(0.0931), tensor(0.0321)]
[0, 4, 36319.83203125, 10132.060546875, 92546.7734375, 2014.50244140625, 9234.14453125, 812.8172607421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1972), tensor(0.1174), tensor(0.2093), tensor(0.0219), tensor(0.0953), tensor(0.0297)]
sparse:
[tensor(0.2013), tensor(0.0954), tensor(0.1990), tensor(0.0387), tensor(0.0953), tensor(0.0297)]
[0, 4, 52167.4140625, 11301.779296875, 82440.84375, 1379.312744140625, 7715.50830078125, 537.5050048828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2045), tensor(0.2169), tensor(0.1221), tensor(0.0443), tensor(0.0506), tensor(0.0218)]
sparse:
[tensor(0.2001), tensor(0.1209), tensor(0.1167), tensor(0.0461), tensor(0.0506), tensor(0.0218)]
[0, 4, 33692.1796875, 7354.8125, 55390.94921875, 1852.364501953125, 6336.2490234375, 680.2374267578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2032), tensor(0.1177), tensor(0.1982), tensor(0.0293), tensor(0.0807), tensor(0.0375)]
sparse:
[tensor(0.2020), tensor(0.0886), tensor(0.1905), tensor(0.0332), tensor(0.0807), tensor(0.0375)]
[0, 4, 61078.38671875, 7669.7705078125, 71418.1171875, 2416.68408203125, 12262.2080078125, 701.784912109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2233), tensor(0.1412), tensor(0.1330), tensor(0.0616), tensor(0.0558), tensor(0.0168)]
sparse:
[tensor(0.2217), tensor(0.1160), tensor(0.1295), tensor(0.0605), tensor(0.0558), tensor(0.0168)]
[0, 4, 49270.9453125, 9938.6865234375, 66917.6484375, 2870.794921875, 13108.30078125, 658.0634155273438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2249), tensor(0.1625), tensor(0.1913), tensor(0.0133), tensor(0.0547), tensor(0.0230)]
sparse:
[tensor(0.2257), tensor(0.0895), tensor(0.1899), tensor(0.0301), tensor(0.0547), tensor(0.0230)]
[0, 4, 81761.5, 7899.30029296875, 60461.3125, 1799.2379150390625, 11819.90625, 720.5319213867188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1986), tensor(0.0938), tensor(0.0952), tensor(0.0547), tensor(0.0417), tensor(0.0323)]
sparse:
[tensor(0.2032), tensor(0.0830), tensor(0.0839), tensor(0.0524), tensor(0.0417), tensor(0.0323)]
[0, 4, 88042.5234375, 6892.57421875, 65299.046875, 2563.0595703125, 10326.55078125, 541.918701171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1613), tensor(0.2092), tensor(0.0549), tensor(0.0266), tensor(0.0040), tensor(0.0370)]
sparse:
[tensor(0.1618), tensor(0.1120), tensor(0.0553), tensor(0.0406), tensor(0.0040), tensor(0.0370)]
[0, 4, 48666.8984375, 10357.939453125, 182684.9375, 2189.18408203125, 5576.3466796875, 294.17352294921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2241), tensor(0.1995), tensor(0.2031), tensor(0.0237), tensor(0.0712), tensor(0.0343)]
sparse:
[tensor(0.2216), tensor(0.1048), tensor(0.1893), tensor(0.0617), tensor(0.0712), tensor(0.0343)]
[0, 4, 38316.65625, 8344.3115234375, 68575.421875, 2772.376220703125, 10061.330078125, 783.8187866210938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1736), tensor(0.1375), tensor(0.1038), tensor(0.0368), tensor(0.0196), tensor(0.0254)]
sparse:
[tensor(0.1768), tensor(0.0824), tensor(0.1052), tensor(0.0412), tensor(0.0196), tensor(0.0254)]
[0, 4, 66580.34375, 6627.2744140625, 73036.0390625, 2118.41162109375, 6356.57861328125, 360.2753601074219]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1614), tensor(0.1188), tensor(0.1324), tensor(0.0229), tensor(0.0480), tensor(0.0238)]
sparse:
[tensor(0.1788), tensor(0.1259), tensor(0.1263), tensor(0.0425), tensor(0.0480), tensor(0.0238)]
[0, 4, 55555.39453125, 9970.02734375, 123146.546875, 3527.295166015625, 10968.701171875, 660.8098754882812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1815), tensor(0.1872), tensor(0.1183), tensor(0.0343), tensor(0.0720), tensor(0.0562)]
sparse:
[tensor(0.1878), tensor(0.1005), tensor(0.1212), tensor(0.0381), tensor(0.0720), tensor(0.0562)]
[0, 4, 24836.8984375, 10627.99609375, 115765.0234375, 2304.44677734375, 30585.12890625, 753.660888671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1774), tensor(0.0982), tensor(0.1039), tensor(0.0792), tensor(0.0289), tensor(0.0207)]
sparse:
[tensor(0.1806), tensor(0.1234), tensor(0.0986), tensor(0.0700), tensor(0.0289), tensor(0.0207)]
[0, 4, 46850.60546875, 7433.5751953125, 71854.8046875, 2990.59326171875, 9668.1171875, 541.301513671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2137), tensor(0.1170), tensor(0.2333), tensor(0.0412), tensor(0.1291), tensor(0.0625)]
sparse:
[tensor(0.2122), tensor(0.1285), tensor(0.2216), tensor(0.0612), tensor(0.1291), tensor(0.0625)]
[0, 4, 62837.69140625, 7082.72265625, 41166.6875, 2224.80029296875, 15919.115234375, 1212.90283203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2216), tensor(0.1217), tensor(0.0670), tensor(0.1166), tensor(0.0124), tensor(0.0075)]
sparse:
[tensor(0.2224), tensor(0.1115), tensor(0.0758), tensor(0.1022), tensor(0.0124), tensor(0.0075)]
[0, 4, 76673.78125, 7303.4228515625, 63112.0703125, 2798.90380859375, 2877.036376953125, 179.16268920898438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2735), tensor(0.2357), tensor(0.2183), tensor(0.0198), tensor(0.0908), tensor(0.0305)]
sparse:
[tensor(0.2782), tensor(0.1128), tensor(0.2052), tensor(0.0515), tensor(0.0908), tensor(0.0305)]
[0, 4, 39974.9296875, 8249.4267578125, 55009.2734375, 2095.291259765625, 10867.814453125, 900.810791015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1985), tensor(0.1314), tensor(0.1616), tensor(0.0195), tensor(0.0972), tensor(0.0476)]
sparse:
[tensor(0.1944), tensor(0.0826), tensor(0.1591), tensor(0.0485), tensor(0.0972), tensor(0.0476)]
[0, 4, 116682.4375, 8944.640625, 107497.640625, 2267.941650390625, 23727.126953125, 1059.8994140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2333), tensor(0.1568), tensor(0.0943), tensor(0.0560), tensor(0.0425), tensor(0.0107)]
sparse:
[tensor(0.2365), tensor(0.0890), tensor(0.0896), tensor(0.0552), tensor(0.0425), tensor(0.0107)]
[0, 4, 35483.703125, 8477.6015625, 87333.828125, 1646.433837890625, 4629.70556640625, 449.9998779296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1890), tensor(0.1967), tensor(0.1290), tensor(0.0397), tensor(0.0543), tensor(0.0293)]
sparse:
[tensor(0.1953), tensor(0.0845), tensor(0.1219), tensor(0.0434), tensor(0.0543), tensor(0.0293)]
[0, 4, 60286.125, 9673.533203125, 123383.859375, 1781.2939453125, 12226.73046875, 710.9422607421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1827), tensor(0.1333), tensor(0.0676), tensor(0.0388), tensor(0.0150), tensor(0.0096)]
sparse:
[tensor(0.1985), tensor(0.1080), tensor(0.0710), tensor(0.0434), tensor(0.0150), tensor(0.0096)]
[0, 4, 72606.78125, 15246.0390625, 177860.21875, 3152.35302734375, 9685.8974609375, 318.70172119140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1474), tensor(0.1137), tensor(0.1011), tensor(0.0289), tensor(0.0306), tensor(0.0202)]
sparse:
[tensor(0.1518), tensor(0.1046), tensor(0.0961), tensor(0.0320), tensor(0.0306), tensor(0.0202)]
[0, 4, 55005.70703125, 11535.4169921875, 142176.296875, 2392.2451171875, 22002.43359375, 407.0013427734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2617), tensor(0.1496), tensor(0.1786), tensor(0.0443), tensor(0.0922), tensor(0.0412)]
sparse:
[tensor(0.2570), tensor(0.1076), tensor(0.1742), tensor(0.0468), tensor(0.0922), tensor(0.0412)]
[0, 4, 58292.046875, 7847.24462890625, 73015.5625, 3204.1171875, 25268.94921875, 1113.270263671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2351), tensor(0.1393), tensor(0.1443), tensor(0.0201), tensor(0.0579), tensor(0.0504)]
sparse:
[tensor(0.2404), tensor(0.1122), tensor(0.1401), tensor(0.0325), tensor(0.0579), tensor(0.0504)]
[0, 4, 36311.109375, 9859.423828125, 122195.3125, 2392.2275390625, 14566.001953125, 904.5576782226562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2093), tensor(0.1121), tensor(0.1521), tensor(0.0377), tensor(0.0319), tensor(0.0438)]
sparse:
[tensor(0.2247), tensor(0.0843), tensor(0.1439), tensor(0.0400), tensor(0.0319), tensor(0.0438)]
[0, 4, 76766.6796875, 10477.404296875, 139584.890625, 2122.7353515625, 16919.064453125, 814.804931640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1917), tensor(0.1578), tensor(0.1128), tensor(0.0291), tensor(0.0489), tensor(0.0217)]
sparse:
[tensor(0.1970), tensor(0.1189), tensor(0.1110), tensor(0.0486), tensor(0.0489), tensor(0.0217)]
[0, 4, 34598.7421875, 6632.9111328125, 44021.0546875, 2398.261474609375, 7562.2646484375, 637.1083984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2491), tensor(0.1787), tensor(0.1553), tensor(0.0446), tensor(0.0574), tensor(0.0278)]
sparse:
[tensor(0.2594), tensor(0.0952), tensor(0.1441), tensor(0.0470), tensor(0.0574), tensor(0.0278)]
[0, 4, 31409.359375, 6494.2421875, 48912.8359375, 1994.080810546875, 9396.634765625, 679.8134765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1786), tensor(0.1231), tensor(0.0618), tensor(0.0155), tensor(0.0343), tensor(0.0103)]
sparse:
[tensor(0.1889), tensor(0.1016), tensor(0.0586), tensor(0.0224), tensor(0.0343), tensor(0.0103)]
[0, 4, 77233.125, 11486.3056640625, 220133.6875, 1052.5802001953125, 5327.72802734375, 421.0093078613281]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2431), tensor(0.1201), tensor(0.1304), tensor(0.0333), tensor(0.0605), tensor(0.0273)]
sparse:
[tensor(0.2494), tensor(0.0898), tensor(0.1232), tensor(0.0385), tensor(0.0605), tensor(0.0273)]
[0, 4, 43006.0234375, 10324.349609375, 106958.9765625, 1821.0244140625, 8244.20703125, 794.6915283203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2404), tensor(0.1244), tensor(0.1341), tensor(0.0235), tensor(0.0579), tensor(0.0235)]
sparse:
[tensor(0.2321), tensor(0.0972), tensor(0.1290), tensor(0.0526), tensor(0.0579), tensor(0.0235)]
[0, 4, 40391.69921875, 7546.83203125, 78265.828125, 1888.9388427734375, 6071.56396484375, 512.5924682617188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2379), tensor(0.1225), tensor(0.1549), tensor(0.0194), tensor(0.0876), tensor(0.0355)]
sparse:
[tensor(0.2402), tensor(0.1254), tensor(0.1475), tensor(0.0422), tensor(0.0876), tensor(0.0355)]
[0, 4, 71662.703125, 7943.369140625, 47886.1640625, 2824.058349609375, 19506.314453125, 1329.512939453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1602), tensor(0.1354), tensor(0.0659), tensor(0.0275), tensor(0.0258), tensor(0.0189)]
sparse:
[tensor(0.1650), tensor(0.0946), tensor(0.0662), tensor(0.0505), tensor(0.0258), tensor(0.0189)]
[0, 4, 33528.61328125, 12083.4365234375, 158704.265625, 3338.87255859375, 28528.19921875, 841.3349609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2150), tensor(0.1453), tensor(0.2276), tensor(0.0242), tensor(0.0852), tensor(0.0452)]
sparse:
[tensor(0.2345), tensor(0.1322), tensor(0.2272), tensor(0.0315), tensor(0.0852), tensor(0.0452)]
[0, 4, 47946.2578125, 8072.78515625, 78788.28125, 3331.4189453125, 13187.3515625, 972.91064453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1977), tensor(0.1354), tensor(0.1601), tensor(0.0181), tensor(0.0449), tensor(0.0396)]
sparse:
[tensor(0.2009), tensor(0.1064), tensor(0.1548), tensor(0.0470), tensor(0.0449), tensor(0.0396)]
[0, 4, 82526.1875, 8601.419921875, 74122.9296875, 1286.568359375, 10007.5439453125, 637.6878662109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1584), tensor(0.1394), tensor(0.1119), tensor(0.0194), tensor(0.0413), tensor(0.0262)]
sparse:
[tensor(0.1576), tensor(0.0759), tensor(0.1064), tensor(0.0335), tensor(0.0413), tensor(0.0262)]
[0, 4, 27739.251953125, 8216.220703125, 105156.1171875, 2990.8037109375, 11220.6552734375, 600.005126953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2129), tensor(0.1131), tensor(0.1711), tensor(0.0492), tensor(0.0658), tensor(0.0316)]
sparse:
[tensor(0.2126), tensor(0.1080), tensor(0.1625), tensor(0.0534), tensor(0.0658), tensor(0.0316)]
[0, 4, 26633.419921875, 7026.1669921875, 42609.59765625, 2918.703125, 21904.37890625, 681.333740234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2205), tensor(0.1360), tensor(0.2096), tensor(0.0161), tensor(0.0604), tensor(0.0546)]
sparse:
[tensor(0.2257), tensor(0.1433), tensor(0.2030), tensor(0.0319), tensor(0.0604), tensor(0.0546)]
[0, 4, 60654.71484375, 7485.6748046875, 55122.203125, 1638.2568359375, 13453.453125, 1192.6278076171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2564), tensor(0.1156), tensor(0.1909), tensor(0.0337), tensor(0.0870), tensor(0.0278)]
sparse:
[tensor(0.2412), tensor(0.0917), tensor(0.1742), tensor(0.0449), tensor(0.0870), tensor(0.0278)]
[0, 4, 72152.078125, 7589.97998046875, 75589.2265625, 3128.26025390625, 12635.91796875, 874.7185668945312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2001), tensor(0.1189), tensor(0.1380), tensor(0.0669), tensor(0.0403), tensor(0.0267)]
sparse:
[tensor(0.2116), tensor(0.1294), tensor(0.1307), tensor(0.0541), tensor(0.0403), tensor(0.0267)]
[0, 4, 44079.421875, 8677.26953125, 55344.19140625, 2415.549072265625, 6303.26220703125, 608.127685546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1532), tensor(0.1201), tensor(0.0768), tensor(0.0183), tensor(0.0873), tensor(0.0228)]
sparse:
[tensor(0.1636), tensor(0.1351), tensor(0.0734), tensor(0.0368), tensor(0.0873), tensor(0.0228)]
[0, 4, 38774.9765625, 7962.568359375, 96316.625, 2760.51416015625, 14925.71875, 950.7399291992188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1719), tensor(0.1143), tensor(0.1038), tensor(0.0519), tensor(0.0429), tensor(0.0942)]
sparse:
[tensor(0.1798), tensor(0.1184), tensor(0.1013), tensor(0.0360), tensor(0.0429), tensor(0.0942)]
[0, 4, 45923.1796875, 6610.88720703125, 74176.7421875, 1826.351806640625, 28015.6015625, 876.0947265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1559), tensor(0.1882), tensor(0.1213), tensor(0.0213), tensor(0.1141), tensor(0.0452)]
sparse:
[tensor(0.1702), tensor(0.1378), tensor(0.1103), tensor(0.0317), tensor(0.1141), tensor(0.0452)]
[0, 4, 43207.6875, 9842.865234375, 168817.03125, 2364.80126953125, 24121.46484375, 951.9766845703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2705), tensor(0.1233), tensor(0.2369), tensor(0.0194), tensor(0.0787), tensor(0.0372)]
sparse:
[tensor(0.2703), tensor(0.0688), tensor(0.2239), tensor(0.0465), tensor(0.0787), tensor(0.0372)]
[0, 4, 61560.8828125, 7849.779296875, 76921.5390625, 3076.780517578125, 24651.125, 1121.928955078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1718), tensor(0.1602), tensor(0.0516), tensor(0.0448), tensor(0.0276), tensor(0.0168)]
sparse:
[tensor(0.1705), tensor(0.1161), tensor(0.0504), tensor(0.0414), tensor(0.0276), tensor(0.0168)]
[0, 4, 65007.6640625, 11144.2626953125, 64735.171875, 3193.246826171875, 5797.6240234375, 244.35244750976562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2208), tensor(0.1145), tensor(0.1548), tensor(0.0538), tensor(0.0240), tensor(0.0197)]
sparse:
[tensor(0.2203), tensor(0.0850), tensor(0.1505), tensor(0.0566), tensor(0.0240), tensor(0.0197)]
[0, 4, 69841.21875, 10798.0302734375, 93598.625, 2563.488037109375, 10938.7236328125, 565.1047973632812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2130), tensor(0.1023), tensor(0.0810), tensor(0.0229), tensor(0.0511), tensor(0.0219)]
sparse:
[tensor(0.2268), tensor(0.1000), tensor(0.0802), tensor(0.0466), tensor(0.0511), tensor(0.0219)]
[0, 4, 49114.3203125, 6882.8076171875, 50551.0859375, 3363.822265625, 32324.19140625, 689.8092041015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2478), tensor(0.2006), tensor(0.0495), tensor(0.0391), tensor(0.0010), tensor(0.0064)]
sparse:
[tensor(0.2479), tensor(0.1182), tensor(0.0519), tensor(0.0579), tensor(0.0010), tensor(0.0064)]
[0, 4, 25837.9140625, 7499.5283203125, 67583.8515625, 2696.37451171875, 1958.778564453125, 55.6859245300293]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2516), tensor(0.1183), tensor(0.1883), tensor(0.0452), tensor(0.0942), tensor(0.0423)]
sparse:
[tensor(0.2550), tensor(0.1314), tensor(0.1855), tensor(0.0407), tensor(0.0942), tensor(0.0423)]
[0, 4, 66337.234375, 7134.44189453125, 75514.09375, 3032.01708984375, 32713.48046875, 896.3023681640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2084), tensor(0.1526), tensor(0.1181), tensor(0.0822), tensor(0.1048), tensor(0.0442)]
sparse:
[tensor(0.2125), tensor(0.1035), tensor(0.1140), tensor(0.0749), tensor(0.1048), tensor(0.0442)]
[0, 4, 53044.7890625, 10603.98828125, 84827.6953125, 3026.706298828125, 19417.974609375, 1317.0438232421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2470), tensor(0.1260), tensor(0.1547), tensor(0.0165), tensor(0.0516), tensor(0.0318)]
sparse:
[tensor(0.2447), tensor(0.0873), tensor(0.1495), tensor(0.0444), tensor(0.0516), tensor(0.0318)]
[0, 4, 86116.296875, 8031.6474609375, 61974.75390625, 2365.4345703125, 19725.3515625, 744.6466064453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2844), tensor(0.1284), tensor(0.0991), tensor(0.0433), tensor(0.0267), tensor(0.0098)]
sparse:
[tensor(0.2957), tensor(0.0931), tensor(0.0990), tensor(0.0533), tensor(0.0267), tensor(0.0098)]
[0, 4, 105390.1640625, 8942.7802734375, 160926.984375, 2382.421875, 3950.08447265625, 397.4576416015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2333), tensor(0.1346), tensor(0.1378), tensor(0.0197), tensor(0.0195), tensor(0.0188)]
sparse:
[tensor(0.2233), tensor(0.0813), tensor(0.1308), tensor(0.0259), tensor(0.0195), tensor(0.0188)]
[0, 4, 77787.6328125, 7460.06201171875, 58236.65625, 1300.6124267578125, 8397.162109375, 501.73358154296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2789), tensor(0.1441), tensor(0.1493), tensor(0.0450), tensor(0.0251), tensor(0.0226)]
sparse:
[tensor(0.2834), tensor(0.0906), tensor(0.1366), tensor(0.0614), tensor(0.0251), tensor(0.0226)]
[0, 4, 51176.35546875, 7990.6552734375, 58174.875, 2587.29052734375, 12485.166015625, 644.4886474609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2596), tensor(0.1325), tensor(0.1534), tensor(0.0328), tensor(0.0790), tensor(0.0703)]
sparse:
[tensor(0.2767), tensor(0.1538), tensor(0.1463), tensor(0.0555), tensor(0.0790), tensor(0.0703)]
[0, 4, 62501.1171875, 10005.8681640625, 131973.15625, 2949.1845703125, 20707.58203125, 1043.0440673828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4039), tensor(0.3754), tensor(0.2851), tensor(0.0714), tensor(0.1200), tensor(0.0312)]
sparse:
[tensor(0.3766), tensor(0.1423), tensor(0.2617), tensor(0.0963), tensor(0.1200), tensor(0.0312)]
[0, 4, 76273.7109375, 9938.412109375, 66535.6171875, 2704.025634765625, 12423.9072265625, 1202.90380859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2449), tensor(0.2353), tensor(0.1353), tensor(0.0401), tensor(0.0306), tensor(0.0225)]
sparse:
[tensor(0.2432), tensor(0.1001), tensor(0.1339), tensor(0.0581), tensor(0.0306), tensor(0.0225)]
[0, 4, 94210.21875, 21225.541015625, 209385.59375, 1983.494873046875, 4978.20458984375, 460.4199523925781]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2027), tensor(0.1124), tensor(0.0162), tensor(0.0357), tensor(0.0011), tensor(0.0028)]
sparse:
[tensor(0.2025), tensor(0.0558), tensor(0.0154), tensor(0.0417), tensor(0.0011), tensor(0.0028)]
[0, 4, 142930.875, 8196.98046875, 98992.484375, 2275.5986328125, 11084.3828125, 28.973310470581055]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2807), tensor(0.1362), tensor(0.1262), tensor(0.0164), tensor(0.0192), tensor(0.0217)]
sparse:
[tensor(0.2843), tensor(0.1502), tensor(0.1191), tensor(0.0300), tensor(0.0192), tensor(0.0217)]
[0, 4, 47942.87109375, 8186.7705078125, 78898.515625, 1006.5137329101562, 6181.189453125, 459.04193115234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1973), tensor(0.1413), tensor(0.1288), tensor(0.0292), tensor(0.0204), tensor(0.0278)]
sparse:
[tensor(0.2088), tensor(0.1013), tensor(0.1280), tensor(0.0276), tensor(0.0204), tensor(0.0278)]
[0, 4, 86612.359375, 8720.0927734375, 76204.8671875, 2204.64794921875, 22223.81640625, 788.427490234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2292), tensor(0.1923), tensor(0.1307), tensor(0.0181), tensor(0.0276), tensor(0.0201)]
sparse:
[tensor(0.2305), tensor(0.0890), tensor(0.1147), tensor(0.0421), tensor(0.0276), tensor(0.0201)]
[0, 4, 38200.3671875, 7109.2119140625, 42156.171875, 2186.945068359375, 6874.12744140625, 479.79913330078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2037), tensor(0.1166), tensor(0.1277), tensor(0.0173), tensor(0.0628), tensor(0.0213)]
sparse:
[tensor(0.2120), tensor(0.1188), tensor(0.1228), tensor(0.0309), tensor(0.0628), tensor(0.0213)]
[0, 4, 48803.42578125, 8908.65234375, 80428.3125, 1681.200439453125, 9049.33203125, 594.2351684570312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2525), tensor(0.1743), tensor(0.1396), tensor(0.0348), tensor(0.0413), tensor(0.0178)]
sparse:
[tensor(0.2533), tensor(0.1394), tensor(0.1308), tensor(0.0354), tensor(0.0413), tensor(0.0178)]
[0, 4, 69620.796875, 8029.84375, 61540.84375, 1360.277099609375, 6721.0830078125, 501.6270751953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2083), tensor(0.1956), tensor(0.1319), tensor(0.0652), tensor(0.0728), tensor(0.0385)]
sparse:
[tensor(0.2143), tensor(0.0812), tensor(0.1230), tensor(0.0578), tensor(0.0728), tensor(0.0385)]
[0, 4, 71034.3671875, 7081.13232421875, 41309.1484375, 2473.09130859375, 7754.4482421875, 607.3807373046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2911), tensor(0.1562), tensor(0.1713), tensor(0.0192), tensor(0.0489), tensor(0.0344)]
sparse:
[tensor(0.2908), tensor(0.1308), tensor(0.1546), tensor(0.0374), tensor(0.0489), tensor(0.0344)]
[0, 4, 85892.125, 9001.5322265625, 55654.5546875, 1518.694091796875, 11037.9765625, 781.81884765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2108), tensor(0.1247), tensor(0.0892), tensor(0.0292), tensor(0.0304), tensor(0.0317)]
sparse:
[tensor(0.2176), tensor(0.1137), tensor(0.0851), tensor(0.0552), tensor(0.0304), tensor(0.0317)]
[0, 4, 62275.84375, 9736.5458984375, 95660.484375, 3744.90869140625, 8460.947265625, 680.82470703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2632), tensor(0.1045), tensor(0.1025), tensor(0.0135), tensor(0.0254), tensor(0.0396)]
sparse:
[tensor(0.2584), tensor(0.0559), tensor(0.0973), tensor(0.0325), tensor(0.0254), tensor(0.0396)]
[0, 4, 70561.078125, 7929.37548828125, 56949.4453125, 2218.73583984375, 34984.66015625, 676.8054809570312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1896), tensor(0.1541), tensor(0.0973), tensor(0.0491), tensor(0.0399), tensor(0.0153)]
sparse:
[tensor(0.1913), tensor(0.1088), tensor(0.0946), tensor(0.0463), tensor(0.0399), tensor(0.0153)]
[0, 4, 30369.7265625, 8185.38916015625, 54954.4375, 3194.04638671875, 5984.029296875, 351.8588562011719]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2260), tensor(0.0991), tensor(0.1469), tensor(0.0349), tensor(0.0612), tensor(0.0399)]
sparse:
[tensor(0.2238), tensor(0.0786), tensor(0.1283), tensor(0.0506), tensor(0.0612), tensor(0.0399)]
[0, 4, 35928.6484375, 7893.212890625, 84701.0703125, 2613.1171875, 15218.486328125, 735.5743408203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2204), tensor(0.1351), tensor(0.1297), tensor(0.0476), tensor(0.0686), tensor(0.0534)]
sparse:
[tensor(0.2170), tensor(0.1035), tensor(0.1245), tensor(0.0580), tensor(0.0686), tensor(0.0534)]
[0, 4, 58500.59765625, 7294.4501953125, 45850.05078125, 2138.23828125, 12238.6337890625, 800.9893188476562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2185), tensor(0.1242), tensor(0.2195), tensor(0.0459), tensor(0.0991), tensor(0.0628)]
sparse:
[tensor(0.2215), tensor(0.1170), tensor(0.2100), tensor(0.0570), tensor(0.0991), tensor(0.0628)]
[0, 4, 114968.8125, 14448.0888671875, 216185.71875, 3106.887451171875, 16563.080078125, 1399.93994140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2680), tensor(0.2471), tensor(0.1089), tensor(0.0204), tensor(0.0738), tensor(0.0307)]
sparse:
[tensor(0.2803), tensor(0.1371), tensor(0.1061), tensor(0.0384), tensor(0.0738), tensor(0.0307)]
[0, 4, 56031.75, 12175.140625, 144391.1875, 2260.925048828125, 8463.33984375, 460.38214111328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1953), tensor(0.1852), tensor(0.1246), tensor(0.0547), tensor(0.0196), tensor(0.0209)]
sparse:
[tensor(0.1960), tensor(0.1077), tensor(0.1200), tensor(0.0937), tensor(0.0196), tensor(0.0209)]
[0, 4, 82519.4375, 12767.78125, 96408.015625, 4289.32861328125, 8638.3837890625, 384.7978515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1782), tensor(0.1265), tensor(0.0927), tensor(0.0151), tensor(0.0274), tensor(0.0270)]
sparse:
[tensor(0.1883), tensor(0.0851), tensor(0.0878), tensor(0.0310), tensor(0.0274), tensor(0.0270)]
[0, 4, 51181.83984375, 12111.08984375, 102114.3125, 1672.094970703125, 8375.361328125, 592.8980712890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1738), tensor(0.1031), tensor(0.2100), tensor(0.0242), tensor(0.0665), tensor(0.0670)]
sparse:
[tensor(0.1780), tensor(0.0639), tensor(0.2073), tensor(0.0454), tensor(0.0665), tensor(0.0670)]
[0, 4, 43057.01171875, 8167.7236328125, 111961.515625, 2557.81982421875, 18388.32421875, 1067.9166259765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2063), tensor(0.1217), tensor(0.0887), tensor(0.0501), tensor(0.0516), tensor(0.0199)]
sparse:
[tensor(0.2132), tensor(0.1357), tensor(0.0824), tensor(0.0465), tensor(0.0516), tensor(0.0199)]
[0, 4, 58821.890625, 8294.8056640625, 93598.5, 2577.058349609375, 6948.99658203125, 532.990966796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2005), tensor(0.1012), tensor(0.2455), tensor(0.1012), tensor(0.0532), tensor(0.0357)]
sparse:
[tensor(0.2054), tensor(0.1414), tensor(0.2299), tensor(0.1215), tensor(0.0532), tensor(0.0357)]
[0, 4, 41853.4296875, 6879.14892578125, 43759.921875, 2390.28759765625, 6801.2138671875, 759.1832885742188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2196), tensor(0.1114), tensor(0.0777), tensor(0.0198), tensor(0.0277), tensor(0.0172)]
sparse:
[tensor(0.2165), tensor(0.1026), tensor(0.0742), tensor(0.0248), tensor(0.0277), tensor(0.0172)]
[0, 4, 34615.05859375, 6603.9970703125, 57116.171875, 950.875244140625, 7091.72900390625, 394.15972900390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1961), tensor(0.1123), tensor(0.2881), tensor(0.0633), tensor(0.0758), tensor(0.0504)]
sparse:
[tensor(0.1974), tensor(0.1330), tensor(0.2692), tensor(0.0810), tensor(0.0758), tensor(0.0504)]
[0, 4, 65150.3203125, 7364.5419921875, 39619.0703125, 1930.647216796875, 9163.2568359375, 829.7119140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1628), tensor(0.1406), tensor(0.0988), tensor(0.0141), tensor(0.0702), tensor(0.0293)]
sparse:
[tensor(0.1682), tensor(0.0947), tensor(0.0970), tensor(0.0313), tensor(0.0702), tensor(0.0293)]
[0, 4, 41333.40625, 7912.8037109375, 103530.171875, 1346.73291015625, 10852.41796875, 709.616943359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2269), tensor(0.1316), tensor(0.2559), tensor(0.0454), tensor(0.0453), tensor(0.0446)]
sparse:
[tensor(0.2175), tensor(0.0900), tensor(0.2418), tensor(0.1090), tensor(0.0453), tensor(0.0446)]
[0, 4, 29815.38671875, 7163.34228515625, 47523.546875, 2256.220947265625, 10339.318359375, 961.1033935546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1870), tensor(0.1400), tensor(0.0971), tensor(0.0189), tensor(0.0672), tensor(0.0354)]
sparse:
[tensor(0.1916), tensor(0.0869), tensor(0.0920), tensor(0.0298), tensor(0.0672), tensor(0.0354)]
[0, 4, 48915.54296875, 7017.6083984375, 79545.71875, 1471.334716796875, 10549.888671875, 574.5905151367188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1893), tensor(0.1243), tensor(0.1023), tensor(0.0180), tensor(0.0742), tensor(0.0591)]
sparse:
[tensor(0.1913), tensor(0.0653), tensor(0.0955), tensor(0.0353), tensor(0.0742), tensor(0.0591)]
[0, 4, 51114.98046875, 9214.5361328125, 81427.046875, 2526.97216796875, 22923.978515625, 1317.18408203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1393), tensor(0.0873), tensor(0.1205), tensor(0.0153), tensor(0.0381), tensor(0.0240)]
sparse:
[tensor(0.1303), tensor(0.0645), tensor(0.1134), tensor(0.0350), tensor(0.0381), tensor(0.0240)]
[0, 4, 31858.58984375, 9867.548828125, 168304.890625, 2258.81982421875, 13612.875, 876.107421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1609), tensor(0.1253), tensor(0.1160), tensor(0.0215), tensor(0.0603), tensor(0.0408)]
sparse:
[tensor(0.1718), tensor(0.1237), tensor(0.1149), tensor(0.0323), tensor(0.0603), tensor(0.0408)]
[0, 4, 43029.046875, 7109.0048828125, 99041.390625, 2161.796875, 22803.77734375, 734.0899047851562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1659), tensor(0.0949), tensor(0.0863), tensor(0.0174), tensor(0.0387), tensor(0.0184)]
sparse:
[tensor(0.1752), tensor(0.0772), tensor(0.0812), tensor(0.0432), tensor(0.0387), tensor(0.0184)]
[0, 4, 52897.078125, 8459.86328125, 105054.25, 1592.005859375, 7088.51806640625, 395.8117370605469]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2032), tensor(0.1606), tensor(0.0920), tensor(0.0317), tensor(0.0438), tensor(0.0298)]
sparse:
[tensor(0.2038), tensor(0.0669), tensor(0.0914), tensor(0.0283), tensor(0.0438), tensor(0.0298)]
[0, 4, 24646.3359375, 9212.8046875, 87770.109375, 1702.689208984375, 23263.07421875, 604.142333984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1862), tensor(0.1039), tensor(0.0875), tensor(0.0187), tensor(0.0366), tensor(0.0279)]
sparse:
[tensor(0.1865), tensor(0.0923), tensor(0.0843), tensor(0.0348), tensor(0.0366), tensor(0.0279)]
[0, 4, 53890.9453125, 8679.1611328125, 116499.8046875, 3269.66796875, 11805.470703125, 540.0291137695312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2275), tensor(0.1572), tensor(0.1161), tensor(0.0404), tensor(0.0574), tensor(0.0239)]
sparse:
[tensor(0.2214), tensor(0.0671), tensor(0.1099), tensor(0.0501), tensor(0.0574), tensor(0.0239)]
[0, 4, 37285.609375, 7042.61328125, 41215.53125, 2117.6181640625, 8146.236328125, 545.70556640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2000), tensor(0.1214), tensor(0.0482), tensor(0.0178), tensor(0.0127), tensor(0.0105)]
sparse:
[tensor(0.1982), tensor(0.1108), tensor(0.0475), tensor(0.0320), tensor(0.0127), tensor(0.0105)]
[0, 4, 62967.2421875, 6994.4921875, 101510.578125, 2701.88525390625, 7271.861328125, 347.4806213378906]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2529), tensor(0.1948), tensor(0.2385), tensor(0.0338), tensor(0.0978), tensor(0.0424)]
sparse:
[tensor(0.2477), tensor(0.1140), tensor(0.2200), tensor(0.0657), tensor(0.0978), tensor(0.0424)]
[0, 4, 62663.75, 8011.39013671875, 50394.265625, 2408.468505859375, 8069.10400390625, 824.4134521484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1992), tensor(0.1230), tensor(0.0825), tensor(0.0311), tensor(0.0146), tensor(0.0169)]
sparse:
[tensor(0.1927), tensor(0.1046), tensor(0.0796), tensor(0.0548), tensor(0.0146), tensor(0.0169)]
[0, 4, 43274.3203125, 7734.5439453125, 62544.46875, 3091.423828125, 6941.72802734375, 365.6451416015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2670), tensor(0.1306), tensor(0.1501), tensor(0.0265), tensor(0.0745), tensor(0.0313)]
sparse:
[tensor(0.2701), tensor(0.0628), tensor(0.1435), tensor(0.0382), tensor(0.0745), tensor(0.0313)]
[0, 4, 69998.3203125, 8085.06201171875, 81512.734375, 2426.604736328125, 15681.42578125, 747.2210693359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1564), tensor(0.0872), tensor(0.0922), tensor(0.0306), tensor(0.0331), tensor(0.0134)]
sparse:
[tensor(0.1686), tensor(0.1398), tensor(0.0897), tensor(0.0342), tensor(0.0331), tensor(0.0134)]
[0, 4, 74753.7578125, 7813.11328125, 39591.80078125, 3026.78515625, 11202.3388671875, 453.9609069824219]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2355), tensor(0.1475), tensor(0.0915), tensor(0.0416), tensor(0.0455), tensor(0.0169)]
sparse:
[tensor(0.2406), tensor(0.1072), tensor(0.0899), tensor(0.0458), tensor(0.0455), tensor(0.0169)]
[0, 4, 44933.89453125, 7776.6748046875, 86696.921875, 2512.69287109375, 8073.7734375, 435.59039306640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1689), tensor(0.1660), tensor(0.1132), tensor(0.0234), tensor(0.0537), tensor(0.0214)]
sparse:
[tensor(0.1760), tensor(0.0936), tensor(0.1086), tensor(0.0479), tensor(0.0537), tensor(0.0214)]
[0, 4, 61098.046875, 10205.33984375, 136044.609375, 1610.2481689453125, 9544.30859375, 612.73095703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2419), tensor(0.1008), tensor(0.1455), tensor(0.0190), tensor(0.0870), tensor(0.0231)]
sparse:
[tensor(0.2397), tensor(0.0692), tensor(0.1332), tensor(0.0309), tensor(0.0870), tensor(0.0231)]
[0, 4, 38713.7265625, 6794.34375, 65010.5234375, 1921.8388671875, 10340.177734375, 720.3403930664062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2259), tensor(0.1399), tensor(0.1395), tensor(0.0217), tensor(0.0956), tensor(0.0374)]
sparse:
[tensor(0.2152), tensor(0.0775), tensor(0.1302), tensor(0.0424), tensor(0.0956), tensor(0.0374)]
[0, 4, 41839.4296875, 8057.34375, 53185.203125, 1834.370849609375, 12704.125, 864.2539672851562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2315), tensor(0.1632), tensor(0.1382), tensor(0.0200), tensor(0.0700), tensor(0.0360)]
sparse:
[tensor(0.2364), tensor(0.0794), tensor(0.1314), tensor(0.0234), tensor(0.0700), tensor(0.0360)]
[0, 4, 52204.2578125, 8283.1708984375, 101840.265625, 1515.911865234375, 17352.734375, 944.9352416992188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2516), tensor(0.1542), tensor(0.1566), tensor(0.0622), tensor(0.0741), tensor(0.0574)]
sparse:
[tensor(0.2544), tensor(0.1486), tensor(0.1582), tensor(0.0654), tensor(0.0741), tensor(0.0574)]
[0, 4, 81278.3046875, 11392.146484375, 150923.0, 4101.5859375, 32239.193359375, 861.13720703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2139), tensor(0.1238), tensor(0.0971), tensor(0.0199), tensor(0.0828), tensor(0.0516)]
sparse:
[tensor(0.2250), tensor(0.1204), tensor(0.0949), tensor(0.0269), tensor(0.0828), tensor(0.0516)]
[0, 4, 116738.6484375, 8663.236328125, 77371.734375, 1673.8477783203125, 15086.8876953125, 859.568115234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2159), tensor(0.2032), tensor(0.1401), tensor(0.0253), tensor(0.0530), tensor(0.0457)]
sparse:
[tensor(0.2117), tensor(0.1207), tensor(0.1368), tensor(0.0324), tensor(0.0530), tensor(0.0457)]
[0, 4, 24935.84765625, 9395.12890625, 87611.078125, 2444.1572265625, 25392.06640625, 1062.7353515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2616), tensor(0.1842), tensor(0.2071), tensor(0.0309), tensor(0.0654), tensor(0.0424)]
sparse:
[tensor(0.2551), tensor(0.0973), tensor(0.2006), tensor(0.0394), tensor(0.0654), tensor(0.0424)]
[0, 4, 40332.8359375, 6800.39501953125, 51378.4609375, 1794.3663330078125, 15204.021484375, 986.7835083007812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1916), tensor(0.2672), tensor(0.1541), tensor(0.0308), tensor(0.0759), tensor(0.0369)]
sparse:
[tensor(0.1959), tensor(0.0883), tensor(0.1483), tensor(0.0465), tensor(0.0759), tensor(0.0369)]
[0, 4, 70871.609375, 8938.1708984375, 83407.5546875, 1886.3101806640625, 10536.9375, 861.0816650390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3343), tensor(0.2058), tensor(0.3111), tensor(0.0359), tensor(0.1878), tensor(0.0496)]
sparse:
[tensor(0.3258), tensor(0.1559), tensor(0.3078), tensor(0.0417), tensor(0.1878), tensor(0.0496)]
[0, 4, 154592.9375, 10553.5078125, 153322.125, 4446.462890625, 34313.7578125, 1306.81298828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2989), tensor(0.4090), tensor(0.1605), tensor(0.0174), tensor(0.0375), tensor(0.0525)]
sparse:
[tensor(0.2727), tensor(0.1116), tensor(0.1589), tensor(0.0321), tensor(0.0375), tensor(0.0525)]
[0, 4, 56241.7578125, 10391.78125, 97672.203125, 2565.1474609375, 18454.689453125, 843.0885620117188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3300), tensor(0.4313), tensor(0.1583), tensor(0.0782), tensor(0.0387), tensor(0.0487)]
sparse:
[tensor(0.3151), tensor(0.1311), tensor(0.1559), tensor(0.0692), tensor(0.0387), tensor(0.0487)]
[0, 4, 176442.34375, 17979.357421875, 152069.4375, 4775.4150390625, 12865.267578125, 965.9508056640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4135), tensor(0.6644), tensor(0.1470), tensor(0.0430), tensor(0.0886), tensor(0.0484)]
sparse:
[tensor(0.4061), tensor(0.2320), tensor(0.1443), tensor(0.0534), tensor(0.0886), tensor(0.0484)]
[0, 4, 352597.375, 12804.0263671875, 146164.59375, 4285.8349609375, 35587.2734375, 1187.6317138671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3962), tensor(0.3818), tensor(0.1147), tensor(0.0461), tensor(0.0505), tensor(0.0305)]
sparse:
[tensor(0.3961), tensor(0.2355), tensor(0.1197), tensor(0.0565), tensor(0.0505), tensor(0.0305)]
[0, 4, 2201455.5, 7732.537109375, 69412.1875, 2174.90576171875, 50056.8984375, 805.9432373046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2151), tensor(0.2246), tensor(0.0715), tensor(0.0273), tensor(0.0176), tensor(0.0202)]
sparse:
[tensor(0.2121), tensor(0.1158), tensor(0.0695), tensor(0.0418), tensor(0.0176), tensor(0.0202)]
[0, 4, 83572.953125, 14365.8828125, 280095.5625, 1597.5224609375, 6667.21826171875, 293.3802490234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3743), tensor(0.1495), tensor(0.1682), tensor(0.0206), tensor(0.0652), tensor(0.1144)]
sparse:
[tensor(0.3527), tensor(0.1020), tensor(0.1542), tensor(0.0422), tensor(0.0652), tensor(0.1144)]
[0, 4, 178832.8125, 8132.40869140625, 80956.03125, 2783.538330078125, 8689.3505859375, 859.3433837890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2353), tensor(0.3915), tensor(0.1914), tensor(0.0229), tensor(0.0508), tensor(0.0537)]
sparse:
[tensor(0.2084), tensor(0.1123), tensor(0.1903), tensor(0.0469), tensor(0.0508), tensor(0.0537)]
[0, 4, 43894.3515625, 10448.7646484375, 194111.0, 2451.34326171875, 23736.04296875, 1604.625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2888), tensor(0.5231), tensor(0.1780), tensor(0.0374), tensor(0.0264), tensor(0.0408)]
sparse:
[tensor(0.2700), tensor(0.1944), tensor(0.1959), tensor(0.0563), tensor(0.0264), tensor(0.0408)]
[0, 4, 232924.78125, 15290.4853515625, 353355.8125, 5311.01513671875, 34086.8671875, 744.1680908203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3829), tensor(0.5238), tensor(0.1772), tensor(0.0442), tensor(0.0901), tensor(0.0503)]
sparse:
[tensor(0.3802), tensor(0.2208), tensor(0.1686), tensor(0.0498), tensor(0.0901), tensor(0.0503)]
[0, 4, 1355313.375, 12841.701171875, 153939.5625, 2385.880126953125, 14619.037109375, 880.955810546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3079), tensor(0.2198), tensor(0.1149), tensor(0.0454), tensor(0.0287), tensor(0.0192)]
sparse:
[tensor(0.3220), tensor(0.1705), tensor(0.1154), tensor(0.0648), tensor(0.0287), tensor(0.0192)]
[0, 4, 1282812.75, 8683.5771484375, 81683.4453125, 3418.294189453125, 4709.40869140625, 266.85400390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3563), tensor(0.1575), tensor(0.0631), tensor(0.0258), tensor(0.0124), tensor(0.0190)]
sparse:
[tensor(0.3504), tensor(0.0901), tensor(0.0628), tensor(0.0273), tensor(0.0124), tensor(0.0190)]
[0, 4, 81083.765625, 8150.35302734375, 75717.515625, 1841.982666015625, 13446.53515625, 395.0793151855469]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2727), tensor(0.2007), tensor(0.0417), tensor(0.0255), tensor(0.0003), tensor(0.0077)]
sparse:
[tensor(0.2718), tensor(0.0820), tensor(0.0430), tensor(0.0332), tensor(0.0003), tensor(0.0077)]
[0, 4, 79234.921875, 8761.8671875, 92503.46875, 3773.2587890625, 1694.88134765625, 51.75434112548828]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4239), tensor(0.2116), tensor(0.2186), tensor(0.0172), tensor(0.0642), tensor(0.0255)]
sparse:
[tensor(0.4002), tensor(0.1092), tensor(0.2105), tensor(0.0456), tensor(0.0642), tensor(0.0255)]
[0, 4, 104329.546875, 15384.408203125, 102832.0859375, 2249.21337890625, 25395.890625, 1137.61376953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2268), tensor(0.1392), tensor(0.1627), tensor(0.0297), tensor(0.0336), tensor(0.0419)]
sparse:
[tensor(0.2162), tensor(0.0936), tensor(0.1565), tensor(0.0526), tensor(0.0336), tensor(0.0419)]
[0, 4, 66185.5703125, 14411.9443359375, 94655.0859375, 3024.4296875, 13315.5185546875, 680.4837646484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4643), tensor(0.1697), tensor(0.3048), tensor(0.0439), tensor(0.0480), tensor(0.0394)]
sparse:
[tensor(0.4690), tensor(0.1267), tensor(0.2910), tensor(0.0572), tensor(0.0480), tensor(0.0394)]
[0, 4, 78357.7265625, 12289.4248046875, 102157.0703125, 2169.90966796875, 20578.10546875, 808.788330078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3027), tensor(0.2691), tensor(0.2397), tensor(0.0188), tensor(0.0235), tensor(0.0241)]
sparse:
[tensor(0.3135), tensor(0.1356), tensor(0.2269), tensor(0.0444), tensor(0.0235), tensor(0.0241)]
[0, 4, 69680.8125, 13450.529296875, 180188.640625, 2202.27392578125, 5257.3984375, 626.006103515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1829), tensor(0.3792), tensor(0.0133), tensor(0.0194), tensor(0.0003), tensor(0.0011)]
sparse:
[tensor(0.2038), tensor(0.0920), tensor(0.0131), tensor(0.0326), tensor(0.0003), tensor(0.0011)]
[0, 4, 88039.1015625, 23636.6640625, 98688.96875, 1341.2247314453125, 967.681396484375, 18.099199295043945]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1701), tensor(0.1440), tensor(0.0352), tensor(0.0229), tensor(0.0206), tensor(0.0213)]
sparse:
[tensor(0.1730), tensor(0.0710), tensor(0.0353), tensor(0.0384), tensor(0.0206), tensor(0.0213)]
[0, 4, 63431.1875, 14844.5390625, 143344.59375, 3444.696044921875, 8295.6640625, 513.6417846679688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3276), tensor(0.1259), tensor(0.1014), tensor(0.0610), tensor(0.0100), tensor(0.0129)]
sparse:
[tensor(0.3338), tensor(0.1208), tensor(0.0975), tensor(0.0534), tensor(0.0100), tensor(0.0129)]
[0, 4, 39281.390625, 9245.48828125, 91279.921875, 2167.630859375, 8872.384765625, 338.2094421386719]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1858), tensor(0.2172), tensor(0.1050), tensor(0.0429), tensor(0.0112), tensor(0.0131)]
sparse:
[tensor(0.2064), tensor(0.1533), tensor(0.0943), tensor(0.0529), tensor(0.0112), tensor(0.0131)]
[0, 4, 70210.828125, 13397.255859375, 134139.875, 2959.50146484375, 8245.611328125, 336.39141845703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1556), tensor(0.1515), tensor(0.0079), tensor(0.0135), tensor(0.0002), tensor(0.0011)]
sparse:
[tensor(0.1687), tensor(0.1019), tensor(0.0091), tensor(0.0164), tensor(0.0002), tensor(0.0011)]
[0, 4, 63296.80078125, 8120.4814453125, 112453.359375, 1469.063232421875, 1134.4013671875, 24.367046356201172]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2384), tensor(0.2180), tensor(0.1576), tensor(0.0231), tensor(0.0196), tensor(0.0160)]
sparse:
[tensor(0.2467), tensor(0.0891), tensor(0.1590), tensor(0.0336), tensor(0.0196), tensor(0.0160)]
[0, 4, 80154.6484375, 7335.458984375, 66873.484375, 3419.14306640625, 6716.38671875, 477.05975341796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1542), tensor(0.2093), tensor(0.0411), tensor(0.0633), tensor(0.0079), tensor(0.0060)]
sparse:
[tensor(0.1577), tensor(0.0944), tensor(0.0437), tensor(0.0561), tensor(0.0079), tensor(0.0060)]
[0, 4, 41526.28125, 11921.232421875, 146493.28125, 3019.2275390625, 6630.9443359375, 267.14361572265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2400), tensor(0.1132), tensor(0.0932), tensor(0.0185), tensor(0.0433), tensor(0.0265)]
sparse:
[tensor(0.2505), tensor(0.1043), tensor(0.0902), tensor(0.0332), tensor(0.0433), tensor(0.0265)]
[0, 4, 48209.6875, 8165.26611328125, 78063.9375, 2284.84619140625, 18050.7578125, 830.046630859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2045), tensor(0.1684), tensor(0.1085), tensor(0.0535), tensor(0.0125), tensor(0.0183)]
sparse:
[tensor(0.2040), tensor(0.0949), tensor(0.1091), tensor(0.0548), tensor(0.0125), tensor(0.0183)]
[0, 4, 48020.7421875, 8092.37255859375, 83280.875, 2936.466796875, 9308.99609375, 540.2642211914062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1935), tensor(0.1133), tensor(0.1272), tensor(0.0368), tensor(0.0034), tensor(0.0254)]
sparse:
[tensor(0.2012), tensor(0.1375), tensor(0.1223), tensor(0.0347), tensor(0.0034), tensor(0.0254)]
[0, 4, 31784.802734375, 10826.142578125, 84442.59375, 1488.983642578125, 4254.0859375, 361.01019287109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1953), tensor(0.1158), tensor(0.1194), tensor(0.0379), tensor(0.0397), tensor(0.0456)]
sparse:
[tensor(0.2044), tensor(0.0880), tensor(0.1129), tensor(0.0392), tensor(0.0397), tensor(0.0456)]
[0, 4, 47224.375, 8875.822265625, 112162.609375, 3056.001953125, 25674.119140625, 530.0159912109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2338), tensor(0.2359), tensor(0.2362), tensor(0.0436), tensor(0.1193), tensor(0.0653)]
sparse:
[tensor(0.2249), tensor(0.1175), tensor(0.2249), tensor(0.0469), tensor(0.1193), tensor(0.0653)]
[0, 4, 27107.69140625, 9536.095703125, 107163.5, 3301.94580078125, 33166.4609375, 1543.129638671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2194), tensor(0.0925), tensor(0.0288), tensor(0.0575), tensor(0.0040), tensor(0.0034)]
sparse:
[tensor(0.2144), tensor(0.1413), tensor(0.0274), tensor(0.0584), tensor(0.0040), tensor(0.0034)]
[0, 4, 41132.4296875, 7363.95556640625, 55345.91796875, 3481.264892578125, 2419.85400390625, 59.73046112060547]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2099), tensor(0.1161), tensor(0.2137), tensor(0.0763), tensor(0.0898), tensor(0.0426)]
sparse:
[tensor(0.2101), tensor(0.1355), tensor(0.2023), tensor(0.0766), tensor(0.0898), tensor(0.0426)]
[0, 4, 30791.4609375, 7876.43505859375, 56518.78125, 3032.961669921875, 16396.560546875, 677.6307983398438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1998), tensor(0.1058), tensor(0.0967), tensor(0.0288), tensor(0.0174), tensor(0.0131)]
sparse:
[tensor(0.1951), tensor(0.0897), tensor(0.0968), tensor(0.0594), tensor(0.0174), tensor(0.0131)]
[0, 4, 75583.0234375, 8367.427734375, 37500.7890625, 2112.123046875, 13699.826171875, 372.7503967285156]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2096), tensor(0.2440), tensor(0.2587), tensor(0.0305), tensor(0.1009), tensor(0.0544)]
sparse:
[tensor(0.2147), tensor(0.1279), tensor(0.2528), tensor(0.0530), tensor(0.1009), tensor(0.0544)]
[0, 4, 39034.29296875, 8084.56396484375, 58136.31640625, 3285.51318359375, 32967.140625, 1213.601806640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2437), tensor(0.1598), tensor(0.1090), tensor(0.0229), tensor(0.0794), tensor(0.0978)]
sparse:
[tensor(0.2334), tensor(0.1512), tensor(0.1069), tensor(0.0473), tensor(0.0794), tensor(0.0978)]
[0, 4, 72804.1796875, 9231.42578125, 76755.609375, 2746.4423828125, 20428.861328125, 1172.75439453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1808), tensor(0.1063), tensor(0.1763), tensor(0.0196), tensor(0.0453), tensor(0.0216)]
sparse:
[tensor(0.1829), tensor(0.1214), tensor(0.1539), tensor(0.0664), tensor(0.0453), tensor(0.0216)]
[0, 4, 60914.46484375, 7044.8095703125, 55587.14453125, 1896.2235107421875, 19896.7734375, 806.9117431640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2733), tensor(0.0928), tensor(0.1762), tensor(0.0892), tensor(0.0439), tensor(0.0414)]
sparse:
[tensor(0.2626), tensor(0.1036), tensor(0.1715), tensor(0.0732), tensor(0.0439), tensor(0.0414)]
[0, 4, 34815.09375, 7230.712890625, 41748.5859375, 2478.8193359375, 22957.421875, 712.157470703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1807), tensor(0.1066), tensor(0.1683), tensor(0.0586), tensor(0.1067), tensor(0.0585)]
sparse:
[tensor(0.1830), tensor(0.1511), tensor(0.1585), tensor(0.0700), tensor(0.1067), tensor(0.0585)]
[0, 4, 44046.4921875, 9203.154296875, 67844.921875, 2215.369140625, 26387.18359375, 988.288330078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2488), tensor(0.0950), tensor(0.2247), tensor(0.0245), tensor(0.0443), tensor(0.0434)]
sparse:
[tensor(0.2493), tensor(0.1161), tensor(0.2041), tensor(0.0452), tensor(0.0443), tensor(0.0434)]
[0, 4, 40835.38671875, 8272.5859375, 51332.43359375, 1787.2652587890625, 14072.7158203125, 804.930419921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1402), tensor(0.1118), tensor(0.0916), tensor(0.1064), tensor(0.0294), tensor(0.0175)]
sparse:
[tensor(0.1556), tensor(0.1284), tensor(0.0870), tensor(0.0785), tensor(0.0294), tensor(0.0175)]
[0, 4, 50818.5078125, 12075.1455078125, 203531.0625, 2135.05419921875, 10800.037109375, 381.75103759765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2178), tensor(0.1444), tensor(0.2505), tensor(0.0537), tensor(0.0516), tensor(0.0352)]
sparse:
[tensor(0.2129), tensor(0.0963), tensor(0.2365), tensor(0.0969), tensor(0.0516), tensor(0.0352)]
[0, 4, 34578.3828125, 8485.80078125, 47753.484375, 2028.803955078125, 18559.5703125, 1095.534423828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1995), tensor(0.1482), tensor(0.1932), tensor(0.0143), tensor(0.1328), tensor(0.0434)]
sparse:
[tensor(0.1971), tensor(0.1123), tensor(0.1840), tensor(0.0262), tensor(0.1328), tensor(0.0434)]
[0, 4, 36121.2734375, 7920.3623046875, 79219.2109375, 2162.326416015625, 13891.45703125, 695.2607421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2160), tensor(0.1178), tensor(0.1825), tensor(0.0408), tensor(0.0357), tensor(0.0332)]
sparse:
[tensor(0.2064), tensor(0.1137), tensor(0.1715), tensor(0.0740), tensor(0.0357), tensor(0.0332)]
[0, 4, 25674.2109375, 7261.45068359375, 43432.0859375, 2013.2757568359375, 9501.9072265625, 592.068603515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2745), tensor(0.1042), tensor(0.2244), tensor(0.0439), tensor(0.1374), tensor(0.0535)]
sparse:
[tensor(0.2667), tensor(0.0786), tensor(0.2119), tensor(0.0485), tensor(0.1374), tensor(0.0535)]
[0, 4, 63077.12109375, 10627.4638671875, 87449.6875, 2925.7470703125, 29447.6328125, 1550.53515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1994), tensor(0.1634), tensor(0.0756), tensor(0.0234), tensor(0.0131), tensor(0.0112)]
sparse:
[tensor(0.2194), tensor(0.1905), tensor(0.0737), tensor(0.0383), tensor(0.0131), tensor(0.0112)]
[0, 4, 53856.93359375, 9197.6494140625, 83683.078125, 2779.4091796875, 4994.560546875, 201.97633361816406]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1803), tensor(0.2469), tensor(0.1270), tensor(0.0424), tensor(0.0153), tensor(0.0145)]
sparse:
[tensor(0.1835), tensor(0.1181), tensor(0.1239), tensor(0.0762), tensor(0.0153), tensor(0.0145)]
[0, 4, 55129.015625, 12986.822265625, 108471.421875, 3073.65478515625, 6553.6455078125, 339.2020263671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2012), tensor(0.1106), tensor(0.1885), tensor(0.0139), tensor(0.0457), tensor(0.0340)]
sparse:
[tensor(0.2072), tensor(0.0863), tensor(0.1814), tensor(0.0342), tensor(0.0457), tensor(0.0340)]
[0, 4, 77195.6484375, 8846.16796875, 89113.453125, 1767.772705078125, 11018.93359375, 604.276123046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2316), tensor(0.1316), tensor(0.1181), tensor(0.0841), tensor(0.0299), tensor(0.0275)]
sparse:
[tensor(0.2320), tensor(0.1061), tensor(0.1188), tensor(0.0579), tensor(0.0299), tensor(0.0275)]
[0, 4, 38162.375, 8247.1708984375, 70663.390625, 2175.44287109375, 5685.85693359375, 557.5865478515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2187), tensor(0.1308), tensor(0.0769), tensor(0.0279), tensor(0.0180), tensor(0.0093)]
sparse:
[tensor(0.2180), tensor(0.1028), tensor(0.0741), tensor(0.0511), tensor(0.0180), tensor(0.0093)]
[0, 4, 35210.28125, 6976.06494140625, 47596.86328125, 1738.48828125, 8763.7421875, 343.6679992675781]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2251), tensor(0.1337), tensor(0.0780), tensor(0.0351), tensor(0.0312), tensor(0.0169)]
sparse:
[tensor(0.2322), tensor(0.0938), tensor(0.0783), tensor(0.0648), tensor(0.0312), tensor(0.0169)]
[0, 4, 43798.5390625, 8321.55078125, 78192.046875, 1808.7821044921875, 5895.47998046875, 381.38214111328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2339), tensor(0.1316), tensor(0.1781), tensor(0.0421), tensor(0.0870), tensor(0.0248)]
sparse:
[tensor(0.2381), tensor(0.0737), tensor(0.1748), tensor(0.0465), tensor(0.0870), tensor(0.0248)]
[0, 4, 62820.5234375, 10605.3115234375, 54207.83203125, 2432.9873046875, 13369.9931640625, 824.4959716796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2021), tensor(0.1246), tensor(0.0717), tensor(0.0390), tensor(0.0285), tensor(0.0100)]
sparse:
[tensor(0.2068), tensor(0.1273), tensor(0.0698), tensor(0.0362), tensor(0.0285), tensor(0.0100)]
[0, 4, 36831.7890625, 6768.94384765625, 61568.91796875, 1539.8193359375, 5534.841796875, 307.5341491699219]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2771), tensor(0.1819), tensor(0.2225), tensor(0.0758), tensor(0.0456), tensor(0.0316)]
sparse:
[tensor(0.2718), tensor(0.0792), tensor(0.2035), tensor(0.0793), tensor(0.0456), tensor(0.0316)]
[0, 4, 33597.1171875, 7688.5234375, 39485.7265625, 2415.60302734375, 20974.646484375, 584.3328857421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2303), tensor(0.1029), tensor(0.1591), tensor(0.0374), tensor(0.0672), tensor(0.0346)]
sparse:
[tensor(0.2310), tensor(0.0873), tensor(0.1548), tensor(0.0419), tensor(0.0672), tensor(0.0346)]
[0, 4, 107887.21875, 8473.85546875, 64657.45703125, 3641.960693359375, 19317.865234375, 867.6519775390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2591), tensor(0.2643), tensor(0.2266), tensor(0.0360), tensor(0.0654), tensor(0.0243)]
sparse:
[tensor(0.2565), tensor(0.1250), tensor(0.2060), tensor(0.0643), tensor(0.0654), tensor(0.0243)]
[0, 4, 39836.703125, 8495.96875, 56417.62109375, 1710.452392578125, 7525.927734375, 642.7560424804688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2372), tensor(0.1393), tensor(0.1638), tensor(0.0429), tensor(0.0852), tensor(0.0382)]
sparse:
[tensor(0.2408), tensor(0.0888), tensor(0.1534), tensor(0.0465), tensor(0.0852), tensor(0.0382)]
[0, 4, 82981.9140625, 7549.072265625, 46780.42578125, 1811.02783203125, 10044.603515625, 610.357666015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2441), tensor(0.2178), tensor(0.2195), tensor(0.0192), tensor(0.0416), tensor(0.0312)]
sparse:
[tensor(0.2305), tensor(0.0905), tensor(0.2047), tensor(0.0552), tensor(0.0416), tensor(0.0312)]
[0, 4, 46968.6484375, 14023.7802734375, 62698.203125, 2162.10205078125, 10420.158203125, 606.1724853515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1443), tensor(0.1546), tensor(0.1137), tensor(0.0477), tensor(0.0192), tensor(0.0192)]
sparse:
[tensor(0.1632), tensor(0.1062), tensor(0.1064), tensor(0.0466), tensor(0.0192), tensor(0.0192)]
[0, 4, 61189.078125, 12845.521484375, 210708.625, 3295.191650390625, 7189.943359375, 397.77459716796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1496), tensor(0.1271), tensor(0.0510), tensor(0.0273), tensor(0.0093), tensor(0.0083)]
sparse:
[tensor(0.1613), tensor(0.1238), tensor(0.0490), tensor(0.0281), tensor(0.0093), tensor(0.0083)]
[0, 4, 30959.1640625, 11677.2998046875, 105572.59375, 1014.632080078125, 3684.223876953125, 230.00689697265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2370), tensor(0.1172), tensor(0.1686), tensor(0.0334), tensor(0.0819), tensor(0.0341)]
sparse:
[tensor(0.2398), tensor(0.1471), tensor(0.1599), tensor(0.0643), tensor(0.0819), tensor(0.0341)]
[0, 4, 84991.859375, 7749.7158203125, 67153.734375, 2836.926513671875, 9632.3916015625, 537.704345703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1456), tensor(0.1205), tensor(0.0121), tensor(0.0286), tensor(0.0005), tensor(0.0010)]
sparse:
[tensor(0.1599), tensor(0.0742), tensor(0.0121), tensor(0.0352), tensor(0.0005), tensor(0.0010)]
[0, 4, 72382.9296875, 8962.078125, 183423.296875, 872.107421875, 1501.871337890625, 3.9591641426086426]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2794), tensor(0.1514), tensor(0.2435), tensor(0.0489), tensor(0.1054), tensor(0.0455)]
sparse:
[tensor(0.2747), tensor(0.0749), tensor(0.2251), tensor(0.0649), tensor(0.1054), tensor(0.0455)]
[0, 4, 43429.984375, 9676.353515625, 87135.46875, 2497.9482421875, 10059.7734375, 687.1660766601562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1992), tensor(0.1366), tensor(0.0543), tensor(0.0589), tensor(0.0018), tensor(0.0093)]
sparse:
[tensor(0.2026), tensor(0.1453), tensor(0.0535), tensor(0.0658), tensor(0.0018), tensor(0.0093)]
[0, 4, 68858.65625, 9322.8857421875, 78810.90625, 3157.82958984375, 3249.31494140625, 59.61344528198242]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2431), tensor(0.1485), tensor(0.1512), tensor(0.0188), tensor(0.0445), tensor(0.0231)]
sparse:
[tensor(0.2390), tensor(0.1128), tensor(0.1449), tensor(0.0334), tensor(0.0445), tensor(0.0231)]
[0, 4, 40824.8203125, 8637.060546875, 92128.765625, 2076.857421875, 24364.10546875, 568.4979248046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1726), tensor(0.1096), tensor(0.0228), tensor(0.0335), tensor(0.0011), tensor(0.0025)]
sparse:
[tensor(0.1768), tensor(0.0842), tensor(0.0241), tensor(0.0352), tensor(0.0011), tensor(0.0025)]
[0, 4, 50134.59765625, 8310.95703125, 84695.3984375, 2175.287841796875, 1785.679443359375, 52.78604507446289]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2322), tensor(0.1308), tensor(0.2668), tensor(0.0228), tensor(0.1391), tensor(0.0998)]
sparse:
[tensor(0.2213), tensor(0.1142), tensor(0.2602), tensor(0.0532), tensor(0.1391), tensor(0.0998)]
[0, 4, 29301.51171875, 7589.10009765625, 57468.328125, 2718.0107421875, 10140.9443359375, 868.1112060546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2068), tensor(0.1411), tensor(0.0934), tensor(0.0306), tensor(0.0255), tensor(0.0222)]
sparse:
[tensor(0.2173), tensor(0.1116), tensor(0.0890), tensor(0.0383), tensor(0.0255), tensor(0.0222)]
[0, 4, 47751.125, 8478.130859375, 72592.609375, 1460.0478515625, 17052.7578125, 572.8006591796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2413), tensor(0.1224), tensor(0.2207), tensor(0.0201), tensor(0.1022), tensor(0.0655)]
sparse:
[tensor(0.2485), tensor(0.1066), tensor(0.2099), tensor(0.0419), tensor(0.1022), tensor(0.0655)]
[0, 4, 58884.65625, 6813.4482421875, 55810.4453125, 2109.77685546875, 10127.130859375, 711.044677734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2192), tensor(0.0948), tensor(0.1099), tensor(0.0346), tensor(0.0351), tensor(0.0150)]
sparse:
[tensor(0.2167), tensor(0.1192), tensor(0.1069), tensor(0.0589), tensor(0.0351), tensor(0.0150)]
[0, 4, 61963.8515625, 8355.498046875, 74062.078125, 3028.934326171875, 10922.19921875, 557.0147705078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1819), tensor(0.1874), tensor(0.2383), tensor(0.0230), tensor(0.1391), tensor(0.0540)]
sparse:
[tensor(0.1844), tensor(0.1207), tensor(0.2282), tensor(0.0489), tensor(0.1391), tensor(0.0540)]
[0, 4, 39235.48828125, 7732.0498046875, 63870.83984375, 3063.18408203125, 12785.173828125, 815.1937255859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2436), tensor(0.1281), tensor(0.0949), tensor(0.1183), tensor(0.0266), tensor(0.0147)]
sparse:
[tensor(0.2334), tensor(0.1114), tensor(0.0928), tensor(0.0998), tensor(0.0266), tensor(0.0147)]
[0, 4, 44471.953125, 7667.8896484375, 46466.40625, 3182.46435546875, 5673.3916015625, 350.7457580566406]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2224), tensor(0.1024), tensor(0.3099), tensor(0.0699), tensor(0.0943), tensor(0.0512)]
sparse:
[tensor(0.2188), tensor(0.0749), tensor(0.2950), tensor(0.0751), tensor(0.0943), tensor(0.0512)]
[0, 4, 70611.109375, 7234.18994140625, 45093.6484375, 2293.77294921875, 10436.8056640625, 1064.418701171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1968), tensor(0.1553), tensor(0.0441), tensor(0.0632), tensor(0.0068), tensor(0.0069)]
sparse:
[tensor(0.2025), tensor(0.0935), tensor(0.0448), tensor(0.0544), tensor(0.0068), tensor(0.0069)]
[0, 4, 41422.9609375, 7817.94287109375, 68261.703125, 1658.328369140625, 6915.55517578125, 156.6109619140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2755), tensor(0.1032), tensor(0.2335), tensor(0.0306), tensor(0.0469), tensor(0.0265)]
sparse:
[tensor(0.2915), tensor(0.1057), tensor(0.2196), tensor(0.0536), tensor(0.0469), tensor(0.0265)]
[0, 4, 77326.1640625, 9736.4072265625, 89251.0625, 2406.099609375, 11067.7626953125, 678.3837890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2146), tensor(0.1951), tensor(0.1297), tensor(0.0399), tensor(0.0495), tensor(0.0175)]
sparse:
[tensor(0.2339), tensor(0.1014), tensor(0.1231), tensor(0.0425), tensor(0.0495), tensor(0.0175)]
[0, 4, 123081.3046875, 15687.6015625, 299307.875, 1284.759521484375, 9543.8115234375, 631.144287109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1747), tensor(0.1971), tensor(0.1370), tensor(0.0298), tensor(0.0386), tensor(0.0541)]
sparse:
[tensor(0.1840), tensor(0.1156), tensor(0.1314), tensor(0.0344), tensor(0.0386), tensor(0.0541)]
[0, 4, 42043.4375, 8104.26904296875, 86988.5234375, 2556.74755859375, 22191.541015625, 753.0711669921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2521), tensor(0.0975), tensor(0.1121), tensor(0.0377), tensor(0.0259), tensor(0.0121)]
sparse:
[tensor(0.2647), tensor(0.0906), tensor(0.1103), tensor(0.0378), tensor(0.0259), tensor(0.0121)]
[0, 4, 69572.1640625, 9068.1611328125, 117254.9375, 2511.27783203125, 17128.015625, 346.46319580078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2066), tensor(0.1067), tensor(0.1769), tensor(0.0132), tensor(0.0283), tensor(0.0282)]
sparse:
[tensor(0.2136), tensor(0.0829), tensor(0.1707), tensor(0.0243), tensor(0.0283), tensor(0.0282)]
[0, 4, 69284.4765625, 11451.6884765625, 174173.375, 1189.9810791015625, 5933.3193359375, 605.22412109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1465), tensor(0.1070), tensor(0.1592), tensor(0.0504), tensor(0.0649), tensor(0.0383)]
sparse:
[tensor(0.1683), tensor(0.0836), tensor(0.1517), tensor(0.0399), tensor(0.0649), tensor(0.0383)]
[0, 4, 35936.28125, 8358.14453125, 159051.546875, 3155.86181640625, 21688.505859375, 947.6012573242188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1698), tensor(0.1290), tensor(0.1672), tensor(0.0140), tensor(0.0160), tensor(0.0161)]
sparse:
[tensor(0.1725), tensor(0.1530), tensor(0.1590), tensor(0.0347), tensor(0.0160), tensor(0.0161)]
[0, 4, 34146.3359375, 7952.76220703125, 76406.2265625, 1328.5394287109375, 7081.32421875, 460.748291015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2928), tensor(0.1091), tensor(0.1094), tensor(0.0195), tensor(0.0237), tensor(0.0174)]
sparse:
[tensor(0.3057), tensor(0.1357), tensor(0.1052), tensor(0.0473), tensor(0.0237), tensor(0.0174)]
[0, 4, 48322.88671875, 8345.9365234375, 88420.03125, 3566.0068359375, 7090.6787109375, 398.3873596191406]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1429), tensor(0.2487), tensor(0.1930), tensor(0.0181), tensor(0.1566), tensor(0.0931)]
sparse:
[tensor(0.1421), tensor(0.1317), tensor(0.1834), tensor(0.0382), tensor(0.1566), tensor(0.0931)]
[0, 4, 42809.33984375, 9987.35546875, 78828.328125, 1946.686767578125, 29235.375, 1473.947021484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2466), tensor(0.1186), tensor(0.1532), tensor(0.0212), tensor(0.0271), tensor(0.0196)]
sparse:
[tensor(0.2394), tensor(0.1159), tensor(0.1448), tensor(0.0489), tensor(0.0271), tensor(0.0196)]
[0, 4, 39034.8203125, 7454.67529296875, 69959.46875, 1696.7835693359375, 9913.529296875, 610.8584594726562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1661), tensor(0.1392), tensor(0.0487), tensor(0.0672), tensor(0.0013), tensor(0.0120)]
sparse:
[tensor(0.1591), tensor(0.0966), tensor(0.0527), tensor(0.0631), tensor(0.0013), tensor(0.0120)]
[0, 4, 16962.95703125, 6898.09130859375, 64793.921875, 3475.246337890625, 3367.186279296875, 85.30480194091797]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2660), tensor(0.1259), tensor(0.1468), tensor(0.0656), tensor(0.0312), tensor(0.0218)]
sparse:
[tensor(0.2565), tensor(0.0650), tensor(0.1315), tensor(0.0590), tensor(0.0312), tensor(0.0218)]
[0, 4, 54533.890625, 8983.4072265625, 65005.7890625, 2553.595458984375, 5174.7685546875, 402.1609191894531]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1729), tensor(0.1114), tensor(0.1560), tensor(0.0241), tensor(0.0630), tensor(0.0534)]
sparse:
[tensor(0.1784), tensor(0.1214), tensor(0.1492), tensor(0.0494), tensor(0.0630), tensor(0.0534)]
[0, 4, 103183.375, 10513.228515625, 88770.3359375, 2734.4140625, 29016.78125, 1623.3359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1690), tensor(0.1093), tensor(0.1624), tensor(0.0332), tensor(0.0894), tensor(0.0525)]
sparse:
[tensor(0.1775), tensor(0.0969), tensor(0.1566), tensor(0.0497), tensor(0.0894), tensor(0.0525)]
[0, 4, 52756.89453125, 8483.7158203125, 93567.21875, 3151.58056640625, 39114.53125, 1126.471435546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1853), tensor(0.1390), tensor(0.2409), tensor(0.0851), tensor(0.0503), tensor(0.0326)]
sparse:
[tensor(0.1837), tensor(0.0745), tensor(0.2315), tensor(0.0730), tensor(0.0503), tensor(0.0326)]
[0, 4, 47378.1796875, 8514.5048828125, 69089.390625, 2571.33837890625, 14871.576171875, 738.2254028320312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2576), tensor(0.1143), tensor(0.1201), tensor(0.0300), tensor(0.0504), tensor(0.0250)]
sparse:
[tensor(0.2497), tensor(0.1018), tensor(0.1179), tensor(0.0471), tensor(0.0504), tensor(0.0250)]
[0, 4, 57947.4765625, 8654.103515625, 63269.7421875, 2455.439208984375, 17848.19921875, 777.1910400390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1440), tensor(0.1529), tensor(0.1148), tensor(0.0201), tensor(0.0286), tensor(0.0265)]
sparse:
[tensor(0.1522), tensor(0.1680), tensor(0.1090), tensor(0.0345), tensor(0.0286), tensor(0.0265)]
[0, 4, 50063.15625, 8101.33642578125, 65510.546875, 3089.818359375, 4119.6748046875, 351.212646484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2500), tensor(0.1154), tensor(0.1100), tensor(0.0189), tensor(0.0335), tensor(0.0198)]
sparse:
[tensor(0.2359), tensor(0.1128), tensor(0.1029), tensor(0.0329), tensor(0.0335), tensor(0.0198)]
[0, 4, 49453.21875, 7874.90185546875, 78392.59375, 1917.99560546875, 16026.833984375, 834.8082275390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1879), tensor(0.1059), tensor(0.1610), tensor(0.0390), tensor(0.0396), tensor(0.0519)]
sparse:
[tensor(0.1870), tensor(0.1235), tensor(0.1498), tensor(0.0471), tensor(0.0396), tensor(0.0519)]
[0, 4, 26896.837890625, 7024.63232421875, 45272.7890625, 1428.0728759765625, 9664.69140625, 855.4025268554688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2525), tensor(0.1213), tensor(0.2644), tensor(0.0661), tensor(0.1133), tensor(0.0438)]
sparse:
[tensor(0.2467), tensor(0.1207), tensor(0.2524), tensor(0.0671), tensor(0.1133), tensor(0.0438)]
[0, 4, 29211.384765625, 9186.5029296875, 65791.359375, 2425.46337890625, 11085.19140625, 798.704833984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2010), tensor(0.1386), tensor(0.2077), tensor(0.0664), tensor(0.0565), tensor(0.0508)]
sparse:
[tensor(0.1976), tensor(0.1251), tensor(0.2082), tensor(0.0651), tensor(0.0565), tensor(0.0508)]
[0, 4, 45942.42578125, 7469.4384765625, 50358.3203125, 2028.4739990234375, 7308.1708984375, 630.0145874023438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1931), tensor(0.1187), tensor(0.1672), tensor(0.0425), tensor(0.0871), tensor(0.0298)]
sparse:
[tensor(0.1998), tensor(0.1328), tensor(0.1542), tensor(0.0763), tensor(0.0871), tensor(0.0298)]
[0, 4, 22821.0625, 7521.5390625, 38180.765625, 1701.6627197265625, 7701.73681640625, 765.5518798828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1869), tensor(0.1213), tensor(0.2116), tensor(0.0520), tensor(0.0884), tensor(0.0538)]
sparse:
[tensor(0.1845), tensor(0.1384), tensor(0.2018), tensor(0.0857), tensor(0.0884), tensor(0.0538)]
[0, 4, 77866.046875, 8815.94140625, 51697.34765625, 1829.40673828125, 8667.5634765625, 673.7818603515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2143), tensor(0.1224), tensor(0.1227), tensor(0.0657), tensor(0.0530), tensor(0.0216)]
sparse:
[tensor(0.2159), tensor(0.1438), tensor(0.1249), tensor(0.0881), tensor(0.0530), tensor(0.0216)]
[0, 4, 53773.328125, 7483.28466796875, 48019.609375, 2572.369873046875, 5463.53466796875, 794.9269409179688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2387), tensor(0.1402), tensor(0.2740), tensor(0.1466), tensor(0.0623), tensor(0.0915)]
sparse:
[tensor(0.2270), tensor(0.1008), tensor(0.2527), tensor(0.1184), tensor(0.0623), tensor(0.0915)]
[0, 4, 88632.6875, 8005.6171875, 61395.5078125, 2461.10400390625, 5013.388671875, 627.66748046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2483), tensor(0.1527), tensor(0.1128), tensor(0.0681), tensor(0.0330), tensor(0.0202)]
sparse:
[tensor(0.2446), tensor(0.1109), tensor(0.1093), tensor(0.0632), tensor(0.0330), tensor(0.0202)]
[0, 4, 39970.63671875, 10047.642578125, 50641.0078125, 1277.790283203125, 7784.59423828125, 878.5030517578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1601), tensor(0.2147), tensor(0.1406), tensor(0.0254), tensor(0.1102), tensor(0.0295)]
sparse:
[tensor(0.1600), tensor(0.0575), tensor(0.1405), tensor(0.0368), tensor(0.1102), tensor(0.0295)]
[0, 4, 42604.14453125, 7856.30615234375, 103319.8359375, 1714.21630859375, 12217.806640625, 842.1024780273438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3336), tensor(0.2405), tensor(0.3275), tensor(0.0650), tensor(0.1163), tensor(0.0544)]
sparse:
[tensor(0.3299), tensor(0.0947), tensor(0.3166), tensor(0.0725), tensor(0.1163), tensor(0.0544)]
[0, 4, 57074.70703125, 9323.70703125, 69901.7734375, 2272.261474609375, 11720.9912109375, 993.232666015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1656), tensor(0.1984), tensor(0.0963), tensor(0.0197), tensor(0.0428), tensor(0.0203)]
sparse:
[tensor(0.1712), tensor(0.1052), tensor(0.0934), tensor(0.0231), tensor(0.0428), tensor(0.0203)]
[0, 4, 76828.171875, 8681.52734375, 79710.765625, 2271.71337890625, 7822.6806640625, 488.52203369140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3686), tensor(0.1338), tensor(0.1680), tensor(0.0371), tensor(0.0439), tensor(0.0193)]
sparse:
[tensor(0.3501), tensor(0.1016), tensor(0.1592), tensor(0.0645), tensor(0.0439), tensor(0.0193)]
[0, 4, 106483.640625, 10056.837890625, 78863.46875, 2831.552734375, 7652.47265625, 521.8948974609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1775), tensor(0.2701), tensor(0.0081), tensor(0.0240), tensor(0.0016), tensor(0.0014)]
sparse:
[tensor(0.1683), tensor(0.0977), tensor(0.0100), tensor(0.0419), tensor(0.0016), tensor(0.0014)]
[0, 4, 34420.921875, 10564.3203125, 171239.875, 3976.492431640625, 1539.560791015625, 23.60103988647461]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1729), tensor(0.1835), tensor(0.1253), tensor(0.0196), tensor(0.0414), tensor(0.0265)]
sparse:
[tensor(0.1794), tensor(0.0633), tensor(0.1144), tensor(0.0342), tensor(0.0414), tensor(0.0265)]
[0, 4, 71079.828125, 13747.150390625, 186221.46875, 1713.572998046875, 7878.4462890625, 438.35919189453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1971), tensor(0.1420), tensor(0.0549), tensor(0.0185), tensor(0.0451), tensor(0.0153)]
sparse:
[tensor(0.2179), tensor(0.1547), tensor(0.0509), tensor(0.0298), tensor(0.0451), tensor(0.0153)]
[0, 4, 113709.1171875, 7397.0986328125, 107821.109375, 1630.68310546875, 7061.017578125, 812.222900390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2402), tensor(0.2859), tensor(0.0414), tensor(0.0226), tensor(0.0080), tensor(0.0038)]
sparse:
[tensor(0.2540), tensor(0.1126), tensor(0.0395), tensor(0.0307), tensor(0.0080), tensor(0.0038)]
[0, 4, 70902.375, 7874.7265625, 94584.03125, 1887.985107421875, 2949.46484375, 130.75579833984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2196), tensor(0.1582), tensor(0.1749), tensor(0.0556), tensor(0.0724), tensor(0.0501)]
sparse:
[tensor(0.2307), tensor(0.0898), tensor(0.1668), tensor(0.0624), tensor(0.0724), tensor(0.0501)]
[0, 4, 91264.5, 11159.396484375, 104962.78125, 2140.2529296875, 10374.4921875, 749.2027587890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2929), tensor(0.1626), tensor(0.2088), tensor(0.0277), tensor(0.0767), tensor(0.0425)]
sparse:
[tensor(0.2999), tensor(0.0906), tensor(0.1913), tensor(0.0411), tensor(0.0767), tensor(0.0425)]
[0, 4, 73843.015625, 12121.865234375, 116071.328125, 2383.75634765625, 18916.462890625, 789.8035888671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3960), tensor(0.1935), tensor(0.3284), tensor(0.0277), tensor(0.1438), tensor(0.0736)]
sparse:
[tensor(0.3925), tensor(0.1327), tensor(0.3068), tensor(0.0750), tensor(0.1438), tensor(0.0736)]
[0, 4, 138113.734375, 9950.8662109375, 101476.7734375, 3619.3974609375, 22072.1640625, 1172.1485595703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2844), tensor(0.3834), tensor(0.1938), tensor(0.0195), tensor(0.1076), tensor(0.0428)]
sparse:
[tensor(0.2844), tensor(0.1124), tensor(0.1789), tensor(0.0338), tensor(0.1076), tensor(0.0428)]
[0, 4, 73867.453125, 10551.669921875, 92999.9453125, 2267.1748046875, 13221.60546875, 862.5341186523438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2988), tensor(0.2606), tensor(0.2714), tensor(0.0308), tensor(0.1170), tensor(0.0372)]
sparse:
[tensor(0.3004), tensor(0.1486), tensor(0.2545), tensor(0.0443), tensor(0.1170), tensor(0.0372)]
[0, 4, 389894.625, 15510.173828125, 129069.9296875, 3022.6015625, 13126.845703125, 739.9818115234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4256), tensor(0.3980), tensor(0.1453), tensor(0.0256), tensor(0.0375), tensor(0.0607)]
sparse:
[tensor(0.4178), tensor(0.1206), tensor(0.1420), tensor(0.0359), tensor(0.0375), tensor(0.0607)]
[0, 4, 55488.3671875, 11922.1064453125, 113465.84375, 2280.56787109375, 25288.748046875, 1031.250732421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3851), tensor(0.1131), tensor(0.1680), tensor(0.0474), tensor(0.0650), tensor(0.0555)]
sparse:
[tensor(0.3676), tensor(0.0718), tensor(0.1564), tensor(0.0587), tensor(0.0650), tensor(0.0555)]
[0, 4, 215777.15625, 11094.1044921875, 119244.953125, 1522.8385009765625, 10602.8212890625, 738.0783081054688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3809), tensor(0.2550), tensor(0.2090), tensor(0.0159), tensor(0.0332), tensor(0.0247)]
sparse:
[tensor(0.3986), tensor(0.1542), tensor(0.2022), tensor(0.0347), tensor(0.0332), tensor(0.0247)]
[0, 4, 612484.375, 8603.6376953125, 75223.78125, 2222.793701171875, 10163.76953125, 648.8050537109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2407), tensor(0.1046), tensor(0.0600), tensor(0.0218), tensor(0.0030), tensor(0.0081)]
sparse:
[tensor(0.2570), tensor(0.0949), tensor(0.0627), tensor(0.0317), tensor(0.0030), tensor(0.0081)]
[0, 4, 51646.0546875, 12683.99609375, 126373.9765625, 1642.4732666015625, 2911.750244140625, 106.33161926269531]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2953), tensor(0.2617), tensor(0.1009), tensor(0.0388), tensor(0.0263), tensor(0.0106)]
sparse:
[tensor(0.3164), tensor(0.1557), tensor(0.1001), tensor(0.0500), tensor(0.0263), tensor(0.0106)]
[0, 4, 38475.52734375, 9972.73828125, 90072.34375, 2226.6376953125, 5665.0859375, 340.914794921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2558), tensor(0.1427), tensor(0.2033), tensor(0.0276), tensor(0.0346), tensor(0.0914)]
sparse:
[tensor(0.2689), tensor(0.1250), tensor(0.2095), tensor(0.0531), tensor(0.0346), tensor(0.0914)]
[0, 4, 100456.3828125, 9485.4677734375, 144089.578125, 2403.839599609375, 7399.3916015625, 636.8231201171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3243), tensor(0.2718), tensor(0.0431), tensor(0.0359), tensor(5.6831e-05), tensor(0.0047)]
sparse:
[tensor(0.3248), tensor(0.1423), tensor(0.0434), tensor(0.0424), tensor(5.6831e-05), tensor(0.0047)]
[0, 4, 88303.3359375, 9122.56640625, 69520.1015625, 2334.5078125, 2164.8994140625, 22.924468994140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3414), tensor(0.1548), tensor(0.0778), tensor(0.0843), tensor(0.0609), tensor(0.0606)]
sparse:
[tensor(0.3314), tensor(0.1048), tensor(0.0795), tensor(0.0612), tensor(0.0609), tensor(0.0606)]
[0, 4, 94277.328125, 13591.595703125, 173861.09375, 3640.996337890625, 32468.84375, 1205.019775390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1775), tensor(0.2868), tensor(0.1881), tensor(0.0447), tensor(0.0422), tensor(0.0454)]
sparse:
[tensor(0.1798), tensor(0.1220), tensor(0.1792), tensor(0.0562), tensor(0.0422), tensor(0.0454)]
[0, 4, 38020.03515625, 11081.3564453125, 140764.265625, 2530.34619140625, 21355.4765625, 916.55224609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3278), tensor(0.1236), tensor(0.1250), tensor(0.0321), tensor(0.0444), tensor(0.0257)]
sparse:
[tensor(0.3237), tensor(0.0693), tensor(0.1293), tensor(0.0434), tensor(0.0444), tensor(0.0257)]
[0, 4, 124879.875, 12078.92578125, 108844.078125, 2406.5771484375, 38364.87109375, 548.9592895507812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3245), tensor(0.1372), tensor(0.2961), tensor(0.0211), tensor(0.0495), tensor(0.0385)]
sparse:
[tensor(0.3368), tensor(0.1334), tensor(0.2845), tensor(0.0518), tensor(0.0495), tensor(0.0385)]
[0, 4, 65376.46484375, 11734.29296875, 125448.2265625, 1873.00537109375, 16096.294921875, 749.24853515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1934), tensor(0.1298), tensor(0.0287), tensor(0.0408), tensor(0.0007), tensor(0.0047)]
sparse:
[tensor(0.2214), tensor(0.1060), tensor(0.0292), tensor(0.0388), tensor(0.0007), tensor(0.0047)]
[0, 4, 61726.38671875, 9258.505859375, 114528.4609375, 1804.0147705078125, 5161.8662109375, 92.85910034179688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2928), tensor(0.1376), tensor(0.0850), tensor(0.0411), tensor(0.0399), tensor(0.0220)]
sparse:
[tensor(0.2980), tensor(0.1216), tensor(0.0830), tensor(0.0479), tensor(0.0399), tensor(0.0220)]
[0, 4, 80050.8515625, 7912.78076171875, 101369.03125, 2926.941162109375, 5903.6171875, 443.8072509765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2027), tensor(0.2390), tensor(0.1602), tensor(0.0740), tensor(0.0479), tensor(0.0228)]
sparse:
[tensor(0.2148), tensor(0.1345), tensor(0.1435), tensor(0.0606), tensor(0.0479), tensor(0.0228)]
[0, 4, 39538.39453125, 7749.53662109375, 65060.34375, 1728.10888671875, 5848.68798828125, 326.1674499511719]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1808), tensor(0.0929), tensor(0.1669), tensor(0.0209), tensor(0.0726), tensor(0.0385)]
sparse:
[tensor(0.1829), tensor(0.0587), tensor(0.1578), tensor(0.0425), tensor(0.0726), tensor(0.0385)]
[0, 4, 64461.828125, 11223.18359375, 137211.609375, 3024.89306640625, 15570.939453125, 705.4390258789062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3100), tensor(0.1681), tensor(0.0558), tensor(0.0509), tensor(0.0030), tensor(0.0071)]
sparse:
[tensor(0.2994), tensor(0.0994), tensor(0.0567), tensor(0.0714), tensor(0.0030), tensor(0.0071)]
[0, 4, 42224.390625, 8728.28515625, 56168.70703125, 2113.0751953125, 3262.26611328125, 147.25759887695312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3857), tensor(0.2297), tensor(0.1732), tensor(0.0302), tensor(0.0718), tensor(0.0522)]
sparse:
[tensor(0.3698), tensor(0.1207), tensor(0.1664), tensor(0.0486), tensor(0.0718), tensor(0.0522)]
[0, 4, 157742.84375, 12907.421875, 159683.484375, 6097.6298828125, 22776.908203125, 974.9247436523438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3071), tensor(0.2422), tensor(0.1194), tensor(0.0381), tensor(0.0109), tensor(0.0207)]
sparse:
[tensor(0.2908), tensor(0.0971), tensor(0.1156), tensor(0.0401), tensor(0.0109), tensor(0.0207)]
[0, 4, 57143.5546875, 10647.142578125, 143047.0, 2124.6806640625, 7251.6630859375, 401.57171630859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2767), tensor(0.2597), tensor(0.2049), tensor(0.0514), tensor(0.0340), tensor(0.0261)]
sparse:
[tensor(0.2754), tensor(0.1184), tensor(0.1884), tensor(0.0465), tensor(0.0340), tensor(0.0261)]
[0, 4, 118038.5234375, 16590.791015625, 113662.0703125, 3113.24658203125, 10053.05078125, 508.77850341796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2309), tensor(0.3183), tensor(0.2135), tensor(0.0617), tensor(0.0176), tensor(0.0350)]
sparse:
[tensor(0.2189), tensor(0.0765), tensor(0.1893), tensor(0.0572), tensor(0.0176), tensor(0.0350)]
[0, 4, 118335.0078125, 12189.7626953125, 181504.65625, 4701.228515625, 7417.36572265625, 544.3399047851562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4896), tensor(0.3565), tensor(0.1922), tensor(0.0538), tensor(0.0727), tensor(0.0503)]
sparse:
[tensor(0.4859), tensor(0.1892), tensor(0.1841), tensor(0.0583), tensor(0.0727), tensor(0.0503)]
[0, 4, 285795.375, 12278.357421875, 245056.90625, 2966.3291015625, 27373.29296875, 1052.165283203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3858), tensor(0.5668), tensor(0.1217), tensor(0.0435), tensor(0.0277), tensor(0.0239)]
sparse:
[tensor(0.3656), tensor(0.2060), tensor(0.1244), tensor(0.0518), tensor(0.0277), tensor(0.0239)]
[0, 4, 100301.875, 13110.955078125, 96026.2890625, 5387.408203125, 10197.4697265625, 349.3991394042969]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2021), tensor(0.2417), tensor(0.0454), tensor(0.0150), tensor(0.0126), tensor(0.0085)]
sparse:
[tensor(0.2116), tensor(0.1039), tensor(0.0414), tensor(0.0133), tensor(0.0126), tensor(0.0085)]
[0, 4, 173864.828125, 10749.8212890625, 80844.828125, 2573.17919921875, 3334.304931640625, 200.50486755371094]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3027), tensor(0.4651), tensor(0.1547), tensor(0.0360), tensor(0.0684), tensor(0.0573)]
sparse:
[tensor(0.3087), tensor(0.1571), tensor(0.1526), tensor(0.0524), tensor(0.0684), tensor(0.0573)]
[0, 4, 287148.25, 9164.1328125, 111185.5234375, 2585.837158203125, 19939.166015625, 850.7567138671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4663), tensor(0.1572), tensor(0.0580), tensor(0.0467), tensor(0.0215), tensor(0.0171)]
sparse:
[tensor(0.4635), tensor(0.0798), tensor(0.0596), tensor(0.0789), tensor(0.0215), tensor(0.0171)]
[0, 4, 112168.5625, 14719.3974609375, 199426.8125, 2697.37158203125, 7283.3779296875, 291.32208251953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3901), tensor(0.3510), tensor(0.1989), tensor(0.0428), tensor(0.0491), tensor(0.0737)]
sparse:
[tensor(0.3735), tensor(0.0861), tensor(0.1900), tensor(0.0732), tensor(0.0491), tensor(0.0737)]
[0, 4, 92513.140625, 9012.8955078125, 69220.1015625, 2477.509521484375, 19253.61328125, 1033.809814453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2182), tensor(0.1386), tensor(0.2679), tensor(0.0954), tensor(0.0526), tensor(0.0923)]
sparse:
[tensor(0.2284), tensor(0.0958), tensor(0.2511), tensor(0.0545), tensor(0.0526), tensor(0.0923)]
[0, 4, 93518.2421875, 11267.271484375, 180374.65625, 2832.1142578125, 11007.515625, 900.4454345703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2965), tensor(0.1459), tensor(0.1332), tensor(0.0402), tensor(0.0653), tensor(0.0638)]
sparse:
[tensor(0.3029), tensor(0.1032), tensor(0.1325), tensor(0.0499), tensor(0.0653), tensor(0.0638)]
[0, 4, 144045.78125, 8591.826171875, 100038.765625, 2978.371826171875, 12196.7158203125, 611.4276123046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3769), tensor(0.1329), tensor(0.0856), tensor(0.0214), tensor(0.0481), tensor(0.0212)]
sparse:
[tensor(0.3830), tensor(0.0817), tensor(0.0846), tensor(0.0414), tensor(0.0481), tensor(0.0212)]
[0, 4, 95106.765625, 10247.52734375, 119366.3515625, 2502.021240234375, 11486.599609375, 670.1383056640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2391), tensor(0.1816), tensor(0.1316), tensor(0.0190), tensor(0.0564), tensor(0.0356)]
sparse:
[tensor(0.2486), tensor(0.1556), tensor(0.1139), tensor(0.0405), tensor(0.0564), tensor(0.0356)]
[0, 4, 44001.45703125, 9353.408203125, 111627.03125, 3021.9384765625, 7127.251953125, 884.7352294921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3270), tensor(0.1924), tensor(0.1874), tensor(0.0311), tensor(0.0702), tensor(0.0544)]
sparse:
[tensor(0.3168), tensor(0.1085), tensor(0.1818), tensor(0.0662), tensor(0.0702), tensor(0.0544)]
[0, 4, 82487.203125, 8660.2802734375, 67021.046875, 3357.54443359375, 16510.568359375, 999.122802734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1879), tensor(0.1442), tensor(0.0806), tensor(0.0256), tensor(0.0158), tensor(0.0220)]
sparse:
[tensor(0.1939), tensor(0.1345), tensor(0.0797), tensor(0.0273), tensor(0.0158), tensor(0.0220)]
[0, 4, 67897.3984375, 10593.6767578125, 172905.96875, 2268.8857421875, 16618.21875, 408.30780029296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2549), tensor(0.1290), tensor(0.1858), tensor(0.0622), tensor(0.0434), tensor(0.0391)]
sparse:
[tensor(0.2636), tensor(0.1324), tensor(0.1831), tensor(0.0601), tensor(0.0434), tensor(0.0391)]
[0, 4, 52035.796875, 9495.5791015625, 86725.25, 2567.095458984375, 13565.6669921875, 651.5401611328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2006), tensor(0.1577), tensor(0.1544), tensor(0.0189), tensor(0.0429), tensor(0.0356)]
sparse:
[tensor(0.1956), tensor(0.1123), tensor(0.1502), tensor(0.0272), tensor(0.0429), tensor(0.0356)]
[0, 4, 27691.046875, 8667.412109375, 68291.03125, 1135.1195068359375, 19029.8046875, 671.7921142578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2299), tensor(0.0997), tensor(0.1816), tensor(0.0758), tensor(0.0371), tensor(0.0265)]
sparse:
[tensor(0.2355), tensor(0.0809), tensor(0.1673), tensor(0.0670), tensor(0.0371), tensor(0.0265)]
[0, 4, 46749.0625, 11475.9951171875, 66916.1015625, 2063.849365234375, 11179.046875, 691.2723388671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1672), tensor(0.1283), tensor(0.1611), tensor(0.0364), tensor(0.0681), tensor(0.0431)]
sparse:
[tensor(0.1640), tensor(0.0615), tensor(0.1519), tensor(0.0812), tensor(0.0681), tensor(0.0431)]
[0, 4, 49514.96875, 7937.22314453125, 37933.921875, 2439.240234375, 10068.515625, 807.0357666015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2506), tensor(0.1272), tensor(0.1325), tensor(0.0214), tensor(0.0487), tensor(0.0361)]
sparse:
[tensor(0.2420), tensor(0.0807), tensor(0.1293), tensor(0.0410), tensor(0.0487), tensor(0.0361)]
[0, 4, 64102.34375, 10618.92578125, 72883.7265625, 2724.71923828125, 12169.5302734375, 658.669189453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1353), tensor(0.1128), tensor(0.0313), tensor(0.0273), tensor(0.0103), tensor(0.0070)]
sparse:
[tensor(0.1509), tensor(0.0690), tensor(0.0316), tensor(0.0462), tensor(0.0103), tensor(0.0070)]
[0, 4, 35473.69921875, 16040.19140625, 300999.5, 3388.0166015625, 5395.923828125, 112.2414321899414]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1291), tensor(0.1452), tensor(0.1426), tensor(0.0123), tensor(0.0359), tensor(0.0271)]
sparse:
[tensor(0.1373), tensor(0.0647), tensor(0.1353), tensor(0.0324), tensor(0.0359), tensor(0.0271)]
[0, 4, 46348.015625, 16117.41796875, 186977.515625, 2078.091796875, 9487.3466796875, 515.2952880859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2098), tensor(0.0903), tensor(0.0866), tensor(0.0311), tensor(0.0219), tensor(0.0117)]
sparse:
[tensor(0.2102), tensor(0.0922), tensor(0.0812), tensor(0.0554), tensor(0.0219), tensor(0.0117)]
[0, 4, 60671.5859375, 9318.416015625, 73272.078125, 2249.12353515625, 4357.3603515625, 290.0079345703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1394), tensor(0.1006), tensor(0.1433), tensor(0.0338), tensor(0.0487), tensor(0.0410)]
sparse:
[tensor(0.1501), tensor(0.0622), tensor(0.1382), tensor(0.0370), tensor(0.0487), tensor(0.0410)]
[0, 4, 50567.70703125, 13342.982421875, 146255.90625, 3428.833251953125, 15583.712890625, 777.708984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2146), tensor(0.0993), tensor(0.1690), tensor(0.0283), tensor(0.0512), tensor(0.0282)]
sparse:
[tensor(0.2135), tensor(0.0793), tensor(0.1535), tensor(0.0523), tensor(0.0512), tensor(0.0282)]
[0, 4, 38801.79296875, 10098.158203125, 79682.625, 3459.40869140625, 15816.611328125, 608.0479736328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1618), tensor(0.1799), tensor(0.1773), tensor(0.0469), tensor(0.0631), tensor(0.0617)]
sparse:
[tensor(0.1618), tensor(0.0769), tensor(0.1730), tensor(0.0846), tensor(0.0631), tensor(0.0617)]
[0, 4, 27298.67578125, 7184.1728515625, 47008.5625, 3512.15185546875, 24359.25, 853.7474365234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2103), tensor(0.1574), tensor(0.2113), tensor(0.0209), tensor(0.0789), tensor(0.0287)]
sparse:
[tensor(0.2060), tensor(0.0861), tensor(0.1990), tensor(0.0369), tensor(0.0789), tensor(0.0287)]
[0, 4, 53111.66015625, 8045.24658203125, 61921.65234375, 1469.4801025390625, 10163.7333984375, 690.5278930664062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1826), tensor(0.1415), tensor(0.1034), tensor(0.0665), tensor(0.0460), tensor(0.0239)]
sparse:
[tensor(0.1786), tensor(0.0820), tensor(0.0975), tensor(0.0534), tensor(0.0460), tensor(0.0239)]
[0, 4, 47091.734375, 13325.134765625, 61893.328125, 2779.392578125, 15997.173828125, 682.3187255859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2286), tensor(0.1249), tensor(0.1719), tensor(0.0154), tensor(0.0623), tensor(0.0294)]
sparse:
[tensor(0.2277), tensor(0.1286), tensor(0.1609), tensor(0.0364), tensor(0.0623), tensor(0.0294)]
[0, 4, 36288.5546875, 7647.89990234375, 47597.53515625, 1924.614013671875, 15347.853515625, 945.70458984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1885), tensor(0.1094), tensor(0.1181), tensor(0.0499), tensor(0.0409), tensor(0.0233)]
sparse:
[tensor(0.1874), tensor(0.1089), tensor(0.1149), tensor(0.0940), tensor(0.0409), tensor(0.0233)]
[0, 4, 43830.171875, 8262.4912109375, 70336.65625, 2027.12939453125, 5946.9609375, 517.2659301757812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2406), tensor(0.1025), tensor(0.1789), tensor(0.0403), tensor(0.0541), tensor(0.0305)]
sparse:
[tensor(0.2467), tensor(0.1113), tensor(0.1622), tensor(0.0499), tensor(0.0541), tensor(0.0305)]
[0, 4, 35464.296875, 7915.427734375, 45929.1484375, 1257.567138671875, 6983.0224609375, 691.3741455078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1653), tensor(0.1175), tensor(0.1393), tensor(0.0169), tensor(0.0509), tensor(0.0185)]
sparse:
[tensor(0.1736), tensor(0.0919), tensor(0.1362), tensor(0.0301), tensor(0.0509), tensor(0.0185)]
[0, 4, 81941.328125, 10069.7978515625, 152536.6875, 2403.4619140625, 14779.7451171875, 696.2560424804688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2053), tensor(0.1379), tensor(0.0652), tensor(0.0485), tensor(0.0207), tensor(0.0108)]
sparse:
[tensor(0.2278), tensor(0.2052), tensor(0.0626), tensor(0.0414), tensor(0.0207), tensor(0.0108)]
[0, 4, 44939.8046875, 10147.1953125, 81574.078125, 1816.926513671875, 7755.498046875, 562.7821044921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2130), tensor(0.1245), tensor(0.2163), tensor(0.0464), tensor(0.0994), tensor(0.0528)]
sparse:
[tensor(0.2113), tensor(0.0992), tensor(0.1980), tensor(0.0409), tensor(0.0994), tensor(0.0528)]
[0, 4, 63703.21875, 7558.869140625, 65897.40625, 2440.253173828125, 15922.529296875, 1013.8482055664062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2454), tensor(0.0929), tensor(0.1806), tensor(0.0419), tensor(0.0585), tensor(0.0316)]
sparse:
[tensor(0.2412), tensor(0.0947), tensor(0.1732), tensor(0.0463), tensor(0.0585), tensor(0.0316)]
[0, 4, 58004.66015625, 8430.376953125, 79066.7734375, 1905.341552734375, 11715.572265625, 649.954833984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2308), tensor(0.1141), tensor(0.1286), tensor(0.0330), tensor(0.0362), tensor(0.0148)]
sparse:
[tensor(0.2243), tensor(0.0722), tensor(0.1257), tensor(0.0568), tensor(0.0362), tensor(0.0148)]
[0, 4, 36360.55078125, 8541.509765625, 50792.01953125, 2064.04638671875, 11495.181640625, 392.61016845703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2288), tensor(0.1702), tensor(0.1614), tensor(0.0246), tensor(0.0700), tensor(0.0335)]
sparse:
[tensor(0.2398), tensor(0.1649), tensor(0.1507), tensor(0.0453), tensor(0.0700), tensor(0.0335)]
[0, 4, 32818.98046875, 7124.15576171875, 54610.24609375, 2213.43310546875, 11703.44921875, 1038.0880126953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2071), tensor(0.1771), tensor(0.0916), tensor(0.0581), tensor(0.0410), tensor(0.0127)]
sparse:
[tensor(0.2033), tensor(0.1172), tensor(0.0890), tensor(0.0512), tensor(0.0410), tensor(0.0127)]
[0, 4, 59906.65625, 7280.8935546875, 46387.8125, 2497.193603515625, 7342.7265625, 302.0350646972656]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3073), tensor(0.1563), tensor(0.2273), tensor(0.0446), tensor(0.0682), tensor(0.0321)]
sparse:
[tensor(0.3020), tensor(0.1671), tensor(0.2141), tensor(0.0774), tensor(0.0682), tensor(0.0321)]
[0, 4, 83189.5, 10551.3720703125, 122645.078125, 4373.259765625, 14603.228515625, 730.96337890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2252), tensor(0.1662), tensor(0.0735), tensor(0.0848), tensor(0.0136), tensor(0.0063)]
sparse:
[tensor(0.2256), tensor(0.0969), tensor(0.0727), tensor(0.0819), tensor(0.0136), tensor(0.0063)]
[0, 4, 56668.58203125, 10380.119140625, 98490.9609375, 2348.60400390625, 4442.32666015625, 301.9184265136719]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2100), tensor(0.1900), tensor(0.1790), tensor(0.0275), tensor(0.0565), tensor(0.0254)]
sparse:
[tensor(0.2208), tensor(0.0954), tensor(0.1754), tensor(0.0331), tensor(0.0565), tensor(0.0254)]
[0, 4, 98847.78125, 8555.7734375, 82152.890625, 2232.66845703125, 12035.453125, 756.8742065429688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2395), tensor(0.1400), tensor(0.1661), tensor(0.0322), tensor(0.0559), tensor(0.0239)]
sparse:
[tensor(0.2438), tensor(0.0960), tensor(0.1624), tensor(0.0348), tensor(0.0559), tensor(0.0239)]
[0, 4, 65307.0234375, 10062.728515625, 104623.84375, 2221.649169921875, 9364.1962890625, 612.4359130859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1731), tensor(0.1457), tensor(0.0459), tensor(0.0386), tensor(0.0093), tensor(0.0139)]
sparse:
[tensor(0.1988), tensor(0.1361), tensor(0.0453), tensor(0.0420), tensor(0.0093), tensor(0.0139)]
[0, 4, 60917.34375, 11181.435546875, 181946.03125, 3950.795654296875, 3234.529541015625, 158.78810119628906]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2663), tensor(0.1155), tensor(0.2360), tensor(0.0310), tensor(0.0471), tensor(0.0370)]
sparse:
[tensor(0.2705), tensor(0.1308), tensor(0.2221), tensor(0.0551), tensor(0.0471), tensor(0.0370)]
[0, 4, 55522.25390625, 8746.3359375, 93172.46875, 2030.2965087890625, 9293.060546875, 734.8175048828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1961), tensor(0.1233), tensor(0.0991), tensor(0.0190), tensor(0.0459), tensor(0.0252)]
sparse:
[tensor(0.2084), tensor(0.0925), tensor(0.0960), tensor(0.0341), tensor(0.0459), tensor(0.0252)]
[0, 4, 48917.921875, 7849.119140625, 91696.125, 1924.7879638671875, 8289.9013671875, 420.961669921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2153), tensor(0.0873), tensor(0.2811), tensor(0.0401), tensor(0.0541), tensor(0.0610)]
sparse:
[tensor(0.2112), tensor(0.1232), tensor(0.2585), tensor(0.0630), tensor(0.0541), tensor(0.0610)]
[0, 4, 44331.375, 7555.3876953125, 55056.28125, 2058.631103515625, 7994.388671875, 848.6282958984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1608), tensor(0.1541), tensor(0.0973), tensor(0.1164), tensor(0.0169), tensor(0.0218)]
sparse:
[tensor(0.1677), tensor(0.1163), tensor(0.0915), tensor(0.0863), tensor(0.0169), tensor(0.0218)]
[0, 4, 36552.3984375, 9759.3837890625, 74625.8984375, 2996.508544921875, 8509.3876953125, 501.61181640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2165), tensor(0.1245), tensor(0.2150), tensor(0.0535), tensor(0.0741), tensor(0.0387)]
sparse:
[tensor(0.2088), tensor(0.0824), tensor(0.2061), tensor(0.0566), tensor(0.0741), tensor(0.0387)]
[0, 4, 50974.87109375, 7835.60888671875, 45673.171875, 1857.689697265625, 11164.521484375, 884.829345703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1888), tensor(0.1152), tensor(0.0147), tensor(0.0389), tensor(0.0037), tensor(0.0016)]
sparse:
[tensor(0.1898), tensor(0.0953), tensor(0.0164), tensor(0.0533), tensor(0.0037), tensor(0.0016)]
[0, 4, 51446.953125, 7139.84130859375, 54864.9921875, 2735.11376953125, 793.2576904296875, 27.988086700439453]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2203), tensor(0.1053), tensor(0.1937), tensor(0.0527), tensor(0.0969), tensor(0.0336)]
sparse:
[tensor(0.2203), tensor(0.0887), tensor(0.1759), tensor(0.0563), tensor(0.0969), tensor(0.0336)]
[0, 4, 33618.3984375, 7132.6572265625, 69288.890625, 2545.97021484375, 11851.166015625, 795.5086669921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1722), tensor(0.1294), tensor(0.0891), tensor(0.0472), tensor(0.0303), tensor(0.0146)]
sparse:
[tensor(0.1742), tensor(0.1415), tensor(0.0850), tensor(0.0423), tensor(0.0303), tensor(0.0146)]
[0, 4, 34807.3125, 10399.70703125, 106415.125, 2177.053955078125, 12230.75390625, 477.7989807128906]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2502), tensor(0.1960), tensor(0.1577), tensor(0.1100), tensor(0.0489), tensor(0.0178)]
sparse:
[tensor(0.2489), tensor(0.1410), tensor(0.1551), tensor(0.0948), tensor(0.0489), tensor(0.0178)]
[0, 4, 64778.203125, 7660.10986328125, 68432.1875, 2310.843017578125, 7024.18505859375, 439.017822265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1240), tensor(0.1328), tensor(0.0707), tensor(0.0437), tensor(0.0065), tensor(0.0081)]
sparse:
[tensor(0.1284), tensor(0.1312), tensor(0.0690), tensor(0.0433), tensor(0.0065), tensor(0.0081)]
[0, 4, 49335.90234375, 10988.5146484375, 133493.265625, 4070.47802734375, 4201.24462890625, 157.5788116455078]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2976), tensor(0.1691), tensor(0.1844), tensor(0.0173), tensor(0.0313), tensor(0.0212)]
sparse:
[tensor(0.2806), tensor(0.0828), tensor(0.1754), tensor(0.0485), tensor(0.0313), tensor(0.0212)]
[0, 4, 67307.0234375, 7797.66748046875, 68468.390625, 1352.288818359375, 9081.4306640625, 450.78521728515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1505), tensor(0.1244), tensor(0.0120), tensor(0.0385), tensor(0.0004), tensor(0.0053)]
sparse:
[tensor(0.1561), tensor(0.0977), tensor(0.0127), tensor(0.0430), tensor(0.0004), tensor(0.0053)]
[0, 4, 43637.2890625, 11651.79296875, 140033.03125, 3052.70703125, 3123.1376953125, 37.23395919799805]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2598), tensor(0.0940), tensor(0.2264), tensor(0.0268), tensor(0.0880), tensor(0.0365)]
sparse:
[tensor(0.2563), tensor(0.0955), tensor(0.2140), tensor(0.0433), tensor(0.0880), tensor(0.0365)]
[0, 4, 59363.9296875, 7828.361328125, 55105.8515625, 1688.152587890625, 9287.5859375, 681.2138671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1719), tensor(0.1198), tensor(0.0583), tensor(0.0543), tensor(0.0262), tensor(0.0330)]
sparse:
[tensor(0.1670), tensor(0.1183), tensor(0.0592), tensor(0.0486), tensor(0.0262), tensor(0.0330)]
[0, 4, 33891.01171875, 8648.0556640625, 60968.6640625, 3685.4853515625, 11474.8623046875, 493.58135986328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2688), tensor(0.1429), tensor(0.2714), tensor(0.0610), tensor(0.0851), tensor(0.0382)]
sparse:
[tensor(0.2549), tensor(0.0807), tensor(0.2513), tensor(0.0767), tensor(0.0851), tensor(0.0382)]
[0, 4, 28075.46875, 6658.5625, 33397.01171875, 1639.722412109375, 8198.009765625, 698.6988525390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2088), tensor(0.1210), tensor(0.1076), tensor(0.0527), tensor(0.0475), tensor(0.0328)]
sparse:
[tensor(0.2116), tensor(0.0964), tensor(0.1043), tensor(0.0593), tensor(0.0475), tensor(0.0328)]
[0, 4, 61821.2578125, 7813.19921875, 67158.296875, 2444.075927734375, 15629.1796875, 821.8093872070312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2438), tensor(0.1270), tensor(0.2647), tensor(0.0792), tensor(0.0702), tensor(0.0510)]
sparse:
[tensor(0.2338), tensor(0.0926), tensor(0.2441), tensor(0.0990), tensor(0.0702), tensor(0.0510)]
[0, 4, 27082.32421875, 6704.0068359375, 26453.77734375, 1420.3212890625, 7516.83251953125, 886.57421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2068), tensor(0.1582), tensor(0.0891), tensor(0.0316), tensor(0.0464), tensor(0.0197)]
sparse:
[tensor(0.2163), tensor(0.1053), tensor(0.0880), tensor(0.0365), tensor(0.0464), tensor(0.0197)]
[0, 4, 43216.9765625, 8273.8935546875, 81742.0234375, 1638.496337890625, 10971.01953125, 489.8485107421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1813), tensor(0.0931), tensor(0.0195), tensor(0.0217), tensor(0.0009), tensor(0.0032)]
sparse:
[tensor(0.1919), tensor(0.0793), tensor(0.0200), tensor(0.0298), tensor(0.0009), tensor(0.0032)]
[0, 4, 111989.75, 12034.6171875, 116013.65625, 2394.38818359375, 1295.760986328125, 60.28578567504883]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2729), tensor(0.1200), tensor(0.1574), tensor(0.0204), tensor(0.0611), tensor(0.0304)]
sparse:
[tensor(0.2791), tensor(0.0826), tensor(0.1447), tensor(0.0544), tensor(0.0611), tensor(0.0304)]
[0, 4, 53270.578125, 9990.8193359375, 68719.65625, 2057.986328125, 17882.89453125, 1044.828369140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1882), tensor(0.1192), tensor(0.0468), tensor(0.0569), tensor(0.0075), tensor(0.0093)]
sparse:
[tensor(0.1940), tensor(0.1052), tensor(0.0472), tensor(0.0573), tensor(0.0075), tensor(0.0093)]
[0, 4, 56398.58984375, 11660.935546875, 112054.890625, 2516.1337890625, 5899.7412109375, 163.91580200195312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2512), tensor(0.1105), tensor(0.1633), tensor(0.0724), tensor(0.0381), tensor(0.0284)]
sparse:
[tensor(0.2486), tensor(0.0829), tensor(0.1554), tensor(0.0613), tensor(0.0381), tensor(0.0284)]
[0, 4, 18303.146484375, 7179.8623046875, 49138.046875, 2134.23291015625, 7933.525390625, 546.2820434570312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2066), tensor(0.1175), tensor(0.0857), tensor(0.0312), tensor(0.0446), tensor(0.0192)]
sparse:
[tensor(0.2068), tensor(0.1052), tensor(0.0817), tensor(0.0599), tensor(0.0446), tensor(0.0192)]
[0, 4, 52323.8203125, 6928.015625, 50443.6484375, 2227.34619140625, 12340.640625, 471.47296142578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1675), tensor(0.0911), tensor(0.1020), tensor(0.0543), tensor(0.0519), tensor(0.0299)]
sparse:
[tensor(0.1901), tensor(0.1337), tensor(0.0958), tensor(0.0398), tensor(0.0519), tensor(0.0299)]
[0, 4, 74943.53125, 6160.71484375, 55826.43359375, 1329.522705078125, 7426.181640625, 499.5184326171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2005), tensor(0.1449), tensor(0.1885), tensor(0.0190), tensor(0.1017), tensor(0.0360)]
sparse:
[tensor(0.2025), tensor(0.1108), tensor(0.1792), tensor(0.0353), tensor(0.1017), tensor(0.0360)]
[0, 4, 43927.2421875, 8773.626953125, 84227.0, 2156.07861328125, 17095.91015625, 918.0072021484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2436), tensor(0.1193), tensor(0.0527), tensor(0.0265), tensor(0.0196), tensor(0.0159)]
sparse:
[tensor(0.2444), tensor(0.1136), tensor(0.0508), tensor(0.0521), tensor(0.0196), tensor(0.0159)]
[0, 4, 66533.0078125, 7534.119140625, 73830.03125, 2212.81103515625, 3854.6640625, 309.543701171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1854), tensor(0.1366), tensor(0.1587), tensor(0.0624), tensor(0.0814), tensor(0.0423)]
sparse:
[tensor(0.1873), tensor(0.1364), tensor(0.1531), tensor(0.0600), tensor(0.0814), tensor(0.0423)]
[0, 4, 35991.72265625, 7456.365234375, 50590.4609375, 2317.404541015625, 9897.9169921875, 721.1397705078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2542), tensor(0.1107), tensor(0.0836), tensor(0.0299), tensor(0.0377), tensor(0.0175)]
sparse:
[tensor(0.2749), tensor(0.1580), tensor(0.0818), tensor(0.0379), tensor(0.0377), tensor(0.0175)]
[0, 4, 56993.171875, 9353.23828125, 92568.625, 3203.685546875, 9063.220703125, 547.587890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1769), tensor(0.1098), tensor(0.0891), tensor(0.0159), tensor(0.0290), tensor(0.0320)]
sparse:
[tensor(0.1744), tensor(0.0985), tensor(0.0851), tensor(0.0322), tensor(0.0290), tensor(0.0320)]
[0, 4, 68665.0625, 8032.7080078125, 76742.875, 1617.728271484375, 11979.724609375, 697.6473388671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2447), tensor(0.1244), tensor(0.0745), tensor(0.0226), tensor(0.0270), tensor(0.0208)]
sparse:
[tensor(0.2455), tensor(0.0838), tensor(0.0687), tensor(0.0499), tensor(0.0270), tensor(0.0208)]
[0, 4, 33598.92578125, 6635.02685546875, 52538.23828125, 1667.110107421875, 9311.927734375, 602.1575927734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2033), tensor(0.1476), tensor(0.0996), tensor(0.0135), tensor(0.0317), tensor(0.0242)]
sparse:
[tensor(0.1981), tensor(0.1127), tensor(0.1010), tensor(0.0284), tensor(0.0317), tensor(0.0242)]
[0, 4, 42208.2265625, 7260.2412109375, 51425.96875, 2538.358154296875, 19962.07421875, 657.286376953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2615), tensor(0.1377), tensor(0.2659), tensor(0.0570), tensor(0.1690), tensor(0.0543)]
sparse:
[tensor(0.2511), tensor(0.1197), tensor(0.2519), tensor(0.0771), tensor(0.1690), tensor(0.0543)]
[0, 4, 123746.203125, 10570.234375, 99418.890625, 3945.929931640625, 18035.66015625, 1371.51025390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2369), tensor(0.2162), tensor(0.1921), tensor(0.0205), tensor(0.0880), tensor(0.0469)]
sparse:
[tensor(0.2313), tensor(0.0989), tensor(0.1787), tensor(0.0440), tensor(0.0880), tensor(0.0469)]
[0, 4, 49419.71484375, 8543.763671875, 50983.40625, 2710.771240234375, 15434.6357421875, 697.1580810546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2145), tensor(0.1084), tensor(0.0941), tensor(0.0178), tensor(0.0203), tensor(0.0149)]
sparse:
[tensor(0.2113), tensor(0.0957), tensor(0.0894), tensor(0.0366), tensor(0.0203), tensor(0.0149)]
[0, 4, 65298.3203125, 10751.50390625, 97166.515625, 2088.5986328125, 7914.142578125, 553.8822021484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2468), tensor(0.1678), tensor(0.1738), tensor(0.0285), tensor(0.0589), tensor(0.0375)]
sparse:
[tensor(0.2375), tensor(0.0758), tensor(0.1658), tensor(0.0412), tensor(0.0589), tensor(0.0375)]
[0, 4, 32270.537109375, 8284.8466796875, 72910.171875, 1463.0635986328125, 12521.943359375, 897.55419921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2593), tensor(0.1669), tensor(0.1623), tensor(0.0479), tensor(0.0633), tensor(0.0436)]
sparse:
[tensor(0.2576), tensor(0.1435), tensor(0.1539), tensor(0.0618), tensor(0.0633), tensor(0.0436)]
[0, 4, 89859.9375, 9867.017578125, 90028.3203125, 2107.639404296875, 11640.3310546875, 822.1250610351562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2400), tensor(0.2311), tensor(0.0910), tensor(0.0219), tensor(0.0288), tensor(0.0180)]
sparse:
[tensor(0.2490), tensor(0.1100), tensor(0.0868), tensor(0.0398), tensor(0.0288), tensor(0.0180)]
[0, 4, 55142.15625, 9073.193359375, 95940.40625, 2218.986572265625, 10236.1220703125, 412.369873046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2856), tensor(0.1268), tensor(0.2119), tensor(0.0369), tensor(0.0553), tensor(0.0337)]
sparse:
[tensor(0.2866), tensor(0.1039), tensor(0.2053), tensor(0.0560), tensor(0.0553), tensor(0.0337)]
[0, 4, 88759.359375, 10498.361328125, 97092.96875, 2907.94921875, 13217.84375, 857.7259521484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2513), tensor(0.2103), tensor(0.2647), tensor(0.0321), tensor(0.1007), tensor(0.0537)]
sparse:
[tensor(0.2424), tensor(0.1095), tensor(0.2526), tensor(0.0504), tensor(0.1007), tensor(0.0537)]
[0, 4, 68268.640625, 10185.837890625, 124185.8046875, 3500.621826171875, 17248.689453125, 1056.510009765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2269), tensor(0.1319), tensor(0.0561), tensor(0.0127), tensor(0.0050), tensor(0.0094)]
sparse:
[tensor(0.2389), tensor(0.0896), tensor(0.0553), tensor(0.0235), tensor(0.0050), tensor(0.0094)]
[0, 4, 64230.8203125, 8499.4560546875, 115016.7578125, 1144.8804931640625, 6515.5166015625, 201.90472412109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2118), tensor(0.1107), tensor(0.1622), tensor(0.1004), tensor(0.0102), tensor(0.0193)]
sparse:
[tensor(0.2155), tensor(0.0860), tensor(0.1591), tensor(0.0755), tensor(0.0102), tensor(0.0193)]
[0, 4, 38157.84765625, 8976.1962890625, 69175.2265625, 3059.552490234375, 8824.578125, 384.41607666015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2434), tensor(0.1128), tensor(0.0303), tensor(0.0237), tensor(0.0045), tensor(0.0042)]
sparse:
[tensor(0.2395), tensor(0.1138), tensor(0.0298), tensor(0.0321), tensor(0.0045), tensor(0.0042)]
[0, 4, 57230.0859375, 7659.80859375, 60078.3359375, 2540.421875, 1920.57421875, 116.69837188720703]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2163), tensor(0.1252), tensor(0.1640), tensor(0.0405), tensor(0.0270), tensor(0.0349)]
sparse:
[tensor(0.2114), tensor(0.1102), tensor(0.1526), tensor(0.0931), tensor(0.0270), tensor(0.0349)]
[0, 4, 31891.931640625, 7289.2724609375, 49898.421875, 1832.0576171875, 8908.7255859375, 562.139892578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2716), tensor(0.2352), tensor(0.0736), tensor(0.0339), tensor(0.0329), tensor(0.0222)]
sparse:
[tensor(0.2721), tensor(0.1013), tensor(0.0696), tensor(0.0439), tensor(0.0329), tensor(0.0222)]
[0, 4, 26151.71875, 7772.2294921875, 61347.02734375, 2853.591796875, 7684.3759765625, 588.3238525390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1725), tensor(0.1308), tensor(0.1084), tensor(0.0972), tensor(0.0252), tensor(0.0158)]
sparse:
[tensor(0.1896), tensor(0.1232), tensor(0.1022), tensor(0.0687), tensor(0.0252), tensor(0.0158)]
[0, 4, 71231.765625, 14256.134765625, 187107.875, 1653.3587646484375, 3794.199951171875, 396.3717041015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1920), tensor(0.1163), tensor(0.0618), tensor(0.0251), tensor(0.0379), tensor(0.0176)]
sparse:
[tensor(0.2013), tensor(0.1314), tensor(0.0610), tensor(0.0347), tensor(0.0379), tensor(0.0176)]
[0, 4, 43618.8203125, 9213.8984375, 132510.671875, 1351.5947265625, 18519.619140625, 597.21923828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2028), tensor(0.0996), tensor(0.1482), tensor(0.0247), tensor(0.0278), tensor(0.0193)]
sparse:
[tensor(0.2181), tensor(0.0764), tensor(0.1421), tensor(0.0383), tensor(0.0278), tensor(0.0193)]
[0, 4, 69740.390625, 11602.80859375, 91786.7265625, 2395.192626953125, 18458.8125, 893.1534423828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2062), tensor(0.2214), tensor(0.1077), tensor(0.0556), tensor(0.0423), tensor(0.0189)]
sparse:
[tensor(0.2058), tensor(0.1126), tensor(0.1026), tensor(0.0563), tensor(0.0423), tensor(0.0189)]
[0, 4, 47876.359375, 9506.705078125, 74813.1875, 2517.104736328125, 6531.37060546875, 637.7708740234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2690), tensor(0.1548), tensor(0.0913), tensor(0.0766), tensor(0.0177), tensor(0.0187)]
sparse:
[tensor(0.2696), tensor(0.1362), tensor(0.0884), tensor(0.0659), tensor(0.0177), tensor(0.0187)]
[0, 4, 35823.95703125, 6833.5693359375, 66736.296875, 2261.775390625, 12304.0224609375, 490.964111328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2088), tensor(0.1399), tensor(0.0940), tensor(0.0142), tensor(0.0523), tensor(0.0364)]
sparse:
[tensor(0.2188), tensor(0.0701), tensor(0.0853), tensor(0.0303), tensor(0.0523), tensor(0.0364)]
[0, 4, 73337.96875, 9130.2607421875, 68019.609375, 1903.1634521484375, 16383.3720703125, 707.372802734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1865), tensor(0.1210), tensor(0.1185), tensor(0.0215), tensor(0.0408), tensor(0.0418)]
sparse:
[tensor(0.1933), tensor(0.0988), tensor(0.1174), tensor(0.0360), tensor(0.0408), tensor(0.0418)]
[0, 4, 60471.51171875, 8940.673828125, 119580.390625, 1766.56396484375, 28176.349609375, 786.2092895507812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2138), tensor(0.1274), tensor(0.1747), tensor(0.0562), tensor(0.0638), tensor(0.0311)]
sparse:
[tensor(0.2162), tensor(0.0894), tensor(0.1642), tensor(0.0793), tensor(0.0638), tensor(0.0311)]
[0, 4, 51630.08203125, 9559.490234375, 82354.796875, 2653.21533203125, 12258.3408203125, 1034.4935302734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1633), tensor(0.1000), tensor(0.1500), tensor(0.0178), tensor(0.0765), tensor(0.0469)]
sparse:
[tensor(0.1668), tensor(0.1018), tensor(0.1409), tensor(0.0232), tensor(0.0765), tensor(0.0469)]
[0, 4, 26883.0078125, 9535.9384765625, 95471.6796875, 2425.57763671875, 14390.5830078125, 986.4525146484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2185), tensor(0.1254), tensor(0.1877), tensor(0.0420), tensor(0.0864), tensor(0.0780)]
sparse:
[tensor(0.2112), tensor(0.1264), tensor(0.1783), tensor(0.0542), tensor(0.0864), tensor(0.0780)]
[0, 4, 47745.484375, 6577.64306640625, 38137.4140625, 2073.49609375, 21022.48828125, 1037.575439453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2084), tensor(0.1149), tensor(0.1870), tensor(0.0369), tensor(0.0530), tensor(0.0410)]
sparse:
[tensor(0.2117), tensor(0.0830), tensor(0.1741), tensor(0.0490), tensor(0.0530), tensor(0.0410)]
[0, 4, 88244.3515625, 8424.236328125, 60977.33984375, 2830.73046875, 13953.326171875, 840.9965209960938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2126), tensor(0.1870), tensor(0.1659), tensor(0.0488), tensor(0.0579), tensor(0.0317)]
sparse:
[tensor(0.2060), tensor(0.0616), tensor(0.1539), tensor(0.0461), tensor(0.0579), tensor(0.0317)]
[0, 4, 37086.3515625, 7235.08447265625, 53636.3671875, 1804.9630126953125, 12179.208984375, 759.427001953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2322), tensor(0.1395), tensor(0.1891), tensor(0.0447), tensor(0.0429), tensor(0.0495)]
sparse:
[tensor(0.2350), tensor(0.1597), tensor(0.1848), tensor(0.0392), tensor(0.0429), tensor(0.0495)]
[0, 4, 43301.96875, 8452.1767578125, 67939.40625, 1497.75341796875, 17779.43359375, 1055.9833984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2150), tensor(0.1952), tensor(0.1579), tensor(0.0401), tensor(0.0339), tensor(0.0358)]
sparse:
[tensor(0.2047), tensor(0.0996), tensor(0.1411), tensor(0.0514), tensor(0.0339), tensor(0.0358)]
[0, 4, 34179.46875, 6359.240234375, 41047.5234375, 1417.494384765625, 5500.89697265625, 733.5523681640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2369), tensor(0.1230), tensor(0.1941), tensor(0.0414), tensor(0.0451), tensor(0.0415)]
sparse:
[tensor(0.2311), tensor(0.1115), tensor(0.1820), tensor(0.0787), tensor(0.0451), tensor(0.0415)]
[0, 4, 38113.95703125, 7399.23681640625, 63111.921875, 3261.94677734375, 15675.1796875, 752.320068359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2314), tensor(0.1170), tensor(0.1222), tensor(0.0822), tensor(0.0238), tensor(0.0182)]
sparse:
[tensor(0.2274), tensor(0.1174), tensor(0.1134), tensor(0.0666), tensor(0.0238), tensor(0.0182)]
[0, 4, 41024.03125, 6569.732421875, 52213.40625, 2082.000732421875, 4972.283203125, 403.2986145019531]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2131), tensor(0.1723), tensor(0.1784), tensor(0.0751), tensor(0.0317), tensor(0.0294)]
sparse:
[tensor(0.2101), tensor(0.0839), tensor(0.1658), tensor(0.0696), tensor(0.0317), tensor(0.0294)]
[0, 4, 46610.3125, 8216.0625, 68150.453125, 2457.30859375, 9779.0302734375, 426.96466064453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2415), tensor(0.1598), tensor(0.1642), tensor(0.0079), tensor(0.0690), tensor(0.0343)]
sparse:
[tensor(0.2430), tensor(0.1206), tensor(0.1622), tensor(0.0223), tensor(0.0690), tensor(0.0343)]
[0, 4, 61779.55859375, 6880.81005859375, 46597.04296875, 1291.0081787109375, 14532.7509765625, 791.2977294921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2116), tensor(0.1114), tensor(0.1536), tensor(0.0255), tensor(0.0391), tensor(0.0140)]
sparse:
[tensor(0.2100), tensor(0.1189), tensor(0.1403), tensor(0.0555), tensor(0.0391), tensor(0.0140)]
[0, 4, 43427.5625, 6710.26123046875, 44994.4609375, 2775.52734375, 8733.5673828125, 523.6829833984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2529), tensor(0.1605), tensor(0.1782), tensor(0.0147), tensor(0.0727), tensor(0.0281)]
sparse:
[tensor(0.2427), tensor(0.1082), tensor(0.1697), tensor(0.0345), tensor(0.0727), tensor(0.0281)]
[0, 4, 43956.62890625, 7859.7421875, 54786.11328125, 1285.94580078125, 7252.380859375, 619.5505981445312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2361), tensor(0.1411), tensor(0.1708), tensor(0.0406), tensor(0.0469), tensor(0.0259)]
sparse:
[tensor(0.2280), tensor(0.0772), tensor(0.1641), tensor(0.0531), tensor(0.0469), tensor(0.0259)]
[0, 4, 43389.4765625, 6716.2265625, 42197.9921875, 1553.063232421875, 11295.49609375, 707.6824340820312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2584), tensor(0.1264), tensor(0.1045), tensor(0.0463), tensor(0.0334), tensor(0.0260)]
sparse:
[tensor(0.2488), tensor(0.0950), tensor(0.1019), tensor(0.0431), tensor(0.0334), tensor(0.0260)]
[0, 4, 32564.60546875, 6414.07861328125, 42647.29296875, 2190.125732421875, 9016.8984375, 443.12518310546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1799), tensor(0.1163), tensor(0.0815), tensor(0.0610), tensor(0.0216), tensor(0.0103)]
sparse:
[tensor(0.1938), tensor(0.1305), tensor(0.0825), tensor(0.0564), tensor(0.0216), tensor(0.0103)]
[0, 4, 59194.9921875, 8871.1640625, 102491.4921875, 2798.290771484375, 6865.3798828125, 374.0382385253906]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3024), tensor(0.1834), tensor(0.2090), tensor(0.0251), tensor(0.0679), tensor(0.0530)]
sparse:
[tensor(0.2936), tensor(0.1435), tensor(0.2000), tensor(0.0413), tensor(0.0679), tensor(0.0530)]
[0, 4, 41120.640625, 8526.904296875, 49095.83203125, 1257.827392578125, 8895.642578125, 977.6683349609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2390), tensor(0.1142), tensor(0.2831), tensor(0.0572), tensor(0.0861), tensor(0.0538)]
sparse:
[tensor(0.2476), tensor(0.1082), tensor(0.2633), tensor(0.0632), tensor(0.0861), tensor(0.0538)]
[0, 4, 125613.984375, 15667.4765625, 194754.15625, 2939.454833984375, 13114.318359375, 989.5938110351562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2588), tensor(0.1967), tensor(0.0516), tensor(0.0464), tensor(0.0170), tensor(0.0119)]
sparse:
[tensor(0.2651), tensor(0.1045), tensor(0.0516), tensor(0.0468), tensor(0.0170), tensor(0.0119)]
[0, 4, 115670.84375, 12048.1259765625, 106356.84375, 4735.8134765625, 5694.125, 262.4778137207031]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1505), tensor(0.1349), tensor(0.0229), tensor(0.0083), tensor(0.0039), tensor(0.0037)]
sparse:
[tensor(0.1727), tensor(0.0795), tensor(0.0229), tensor(0.0163), tensor(0.0039), tensor(0.0037)]
[0, 4, 59889.4765625, 12568.1201171875, 151734.59375, 1380.4228515625, 1472.452392578125, 85.36485290527344]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3504), tensor(0.1808), tensor(0.2020), tensor(0.0521), tensor(0.1088), tensor(0.0487)]
sparse:
[tensor(0.3381), tensor(0.1137), tensor(0.1891), tensor(0.0538), tensor(0.1088), tensor(0.0487)]
[0, 4, 87537.359375, 10448.0703125, 77790.1171875, 3748.45166015625, 16165.515625, 1228.159423828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2191), tensor(0.2245), tensor(0.1698), tensor(0.0115), tensor(0.0787), tensor(0.0481)]
sparse:
[tensor(0.2200), tensor(0.1071), tensor(0.1603), tensor(0.0402), tensor(0.0787), tensor(0.0481)]
[0, 4, 54599.2265625, 12088.2060546875, 64336.0390625, 1165.3433837890625, 7664.94775390625, 713.4633178710938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2140), tensor(0.1594), tensor(0.1087), tensor(0.0204), tensor(0.0159), tensor(0.0207)]
sparse:
[tensor(0.2242), tensor(0.0837), tensor(0.0994), tensor(0.0532), tensor(0.0159), tensor(0.0207)]
[0, 4, 87967.703125, 10465.0087890625, 104720.0625, 1914.828369140625, 4891.90673828125, 452.113037109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2232), tensor(0.1665), tensor(0.0720), tensor(0.0273), tensor(0.0181), tensor(0.0154)]
sparse:
[tensor(0.2316), tensor(0.1248), tensor(0.0680), tensor(0.0251), tensor(0.0181), tensor(0.0154)]
[0, 4, 79917.515625, 10851.4453125, 135407.125, 1710.477294921875, 7087.7880859375, 386.0473937988281]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1934), tensor(0.1655), tensor(0.1326), tensor(0.0414), tensor(0.0297), tensor(0.0188)]
sparse:
[tensor(0.1946), tensor(0.1095), tensor(0.1258), tensor(0.0724), tensor(0.0297), tensor(0.0188)]
[0, 4, 27431.59765625, 7889.2744140625, 62321.1484375, 2189.531005859375, 3671.528564453125, 342.9097900390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2881), tensor(0.1372), tensor(0.1347), tensor(0.0639), tensor(0.0699), tensor(0.0308)]
sparse:
[tensor(0.2861), tensor(0.1028), tensor(0.1282), tensor(0.0494), tensor(0.0699), tensor(0.0308)]
[0, 4, 65166.96875, 7615.11865234375, 63264.6953125, 2334.56298828125, 10814.86328125, 845.3147583007812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1489), tensor(0.1122), tensor(0.0385), tensor(0.0233), tensor(0.0066), tensor(0.0050)]
sparse:
[tensor(0.1482), tensor(0.0747), tensor(0.0346), tensor(0.0240), tensor(0.0066), tensor(0.0050)]
[0, 4, 59293.1953125, 7414.0087890625, 80774.3125, 1673.341796875, 3292.28662109375, 110.21524047851562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2397), tensor(0.1433), tensor(0.0350), tensor(0.0332), tensor(0.0026), tensor(0.0055)]
sparse:
[tensor(0.2423), tensor(0.1147), tensor(0.0348), tensor(0.0326), tensor(0.0026), tensor(0.0055)]
[0, 4, 43816.7578125, 8126.7451171875, 56913.234375, 1509.81396484375, 3548.19921875, 86.61178588867188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1979), tensor(0.1753), tensor(0.1728), tensor(0.0143), tensor(0.0513), tensor(0.0615)]
sparse:
[tensor(0.1962), tensor(0.1179), tensor(0.1685), tensor(0.0249), tensor(0.0513), tensor(0.0615)]
[0, 4, 37903.359375, 9108.546875, 41790.3828125, 1080.8951416015625, 4803.7265625, 557.54833984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2629), tensor(0.1280), tensor(0.0463), tensor(0.0311), tensor(0.0068), tensor(0.0112)]
sparse:
[tensor(0.2608), tensor(0.1532), tensor(0.0469), tensor(0.0414), tensor(0.0068), tensor(0.0112)]
[0, 4, 44818.96875, 7905.5634765625, 57923.01953125, 2966.46533203125, 3752.8935546875, 221.97195434570312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2210), tensor(0.1270), tensor(0.1461), tensor(0.0373), tensor(0.0246), tensor(0.0241)]
sparse:
[tensor(0.2183), tensor(0.1202), tensor(0.1393), tensor(0.0498), tensor(0.0246), tensor(0.0241)]
[0, 4, 50459.8984375, 7080.1025390625, 46436.765625, 3327.25244140625, 17019.271484375, 721.2184448242188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2325), tensor(0.1455), tensor(0.1608), tensor(0.0193), tensor(0.0813), tensor(0.0447)]
sparse:
[tensor(0.2276), tensor(0.0909), tensor(0.1505), tensor(0.0593), tensor(0.0813), tensor(0.0447)]
[0, 4, 55678.6484375, 7452.474609375, 57141.5546875, 2100.491455078125, 12713.7216796875, 808.8121948242188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2814), tensor(0.1462), tensor(0.1512), tensor(0.0398), tensor(0.0482), tensor(0.0468)]
sparse:
[tensor(0.2912), tensor(0.0893), tensor(0.1434), tensor(0.0376), tensor(0.0482), tensor(0.0468)]
[0, 4, 105730.9140625, 8863.697265625, 100500.796875, 2345.23974609375, 20430.3671875, 951.6707763671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1521), tensor(0.1345), tensor(0.0622), tensor(0.0176), tensor(0.0148), tensor(0.0212)]
sparse:
[tensor(0.1630), tensor(0.1081), tensor(0.0594), tensor(0.0266), tensor(0.0148), tensor(0.0212)]
[0, 4, 58910.8671875, 11505.689453125, 191549.3125, 1578.349365234375, 11273.7568359375, 439.326416015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2709), tensor(0.1136), tensor(0.1622), tensor(0.0466), tensor(0.0656), tensor(0.0282)]
sparse:
[tensor(0.2687), tensor(0.0921), tensor(0.1536), tensor(0.0867), tensor(0.0656), tensor(0.0282)]
[0, 4, 46726.671875, 7228.9091796875, 69836.5546875, 2759.98486328125, 7267.97998046875, 446.7080078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1961), tensor(0.1187), tensor(0.0792), tensor(0.0611), tensor(0.0199), tensor(0.0172)]
sparse:
[tensor(0.1977), tensor(0.0814), tensor(0.0818), tensor(0.0652), tensor(0.0199), tensor(0.0172)]
[0, 4, 25993.025390625, 7448.01318359375, 73937.96875, 3255.365234375, 10222.388671875, 373.7528991699219]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2763), tensor(0.2244), tensor(0.1404), tensor(0.0480), tensor(0.0478), tensor(0.0798)]
sparse:
[tensor(0.2866), tensor(0.0915), tensor(0.1312), tensor(0.0506), tensor(0.0478), tensor(0.0798)]
[0, 4, 50914.390625, 8257.220703125, 78177.1875, 2680.359130859375, 15159.8154296875, 746.3004150390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1818), tensor(0.1307), tensor(0.0617), tensor(0.0631), tensor(0.0223), tensor(0.0222)]
sparse:
[tensor(0.1833), tensor(0.0908), tensor(0.0582), tensor(0.0484), tensor(0.0223), tensor(0.0222)]
[0, 4, 35858.48828125, 8569.9423828125, 72608.2734375, 2127.13427734375, 15168.859375, 655.29052734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2900), tensor(0.2514), tensor(0.2237), tensor(0.0335), tensor(0.1032), tensor(0.0535)]
sparse:
[tensor(0.2856), tensor(0.1661), tensor(0.2151), tensor(0.0453), tensor(0.1032), tensor(0.0535)]
[0, 4, 53587.76171875, 7746.169921875, 44833.2578125, 1644.638916015625, 10381.8046875, 831.8024291992188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2639), tensor(0.1210), tensor(0.1240), tensor(0.0139), tensor(0.0839), tensor(0.0374)]
sparse:
[tensor(0.2729), tensor(0.1212), tensor(0.1198), tensor(0.0325), tensor(0.0839), tensor(0.0374)]
[0, 4, 84900.8203125, 10080.82421875, 110049.0703125, 2651.26611328125, 19665.470703125, 836.3759765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1909), tensor(0.1826), tensor(0.1985), tensor(0.0221), tensor(0.0827), tensor(0.0411)]
sparse:
[tensor(0.1946), tensor(0.1051), tensor(0.1870), tensor(0.0332), tensor(0.0827), tensor(0.0411)]
[0, 4, 39205.265625, 9812.1103515625, 78746.015625, 1721.5880126953125, 6645.607421875, 583.8287353515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2704), tensor(0.1426), tensor(0.1830), tensor(0.0111), tensor(0.0629), tensor(0.0281)]
sparse:
[tensor(0.2723), tensor(0.0847), tensor(0.1739), tensor(0.0359), tensor(0.0629), tensor(0.0281)]
[0, 4, 65816.203125, 11215.388671875, 81777.90625, 2391.1220703125, 13483.771484375, 743.08837890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1862), tensor(0.1687), tensor(0.1363), tensor(0.0319), tensor(0.0518), tensor(0.0304)]
sparse:
[tensor(0.1951), tensor(0.1068), tensor(0.1336), tensor(0.0338), tensor(0.0518), tensor(0.0304)]
[0, 4, 66662.4375, 10179.359375, 142818.09375, 4001.33154296875, 11338.57421875, 554.6370849609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2813), tensor(0.2281), tensor(0.0885), tensor(0.0308), tensor(0.0438), tensor(0.0650)]
sparse:
[tensor(0.2722), tensor(0.1276), tensor(0.0823), tensor(0.0266), tensor(0.0438), tensor(0.0650)]
[0, 4, 46168.82421875, 8234.6328125, 65784.5625, 1481.13330078125, 8206.498046875, 801.1100463867188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1472), tensor(0.1095), tensor(0.0693), tensor(0.0537), tensor(0.0223), tensor(0.0126)]
sparse:
[tensor(0.1504), tensor(0.0773), tensor(0.0676), tensor(0.0599), tensor(0.0223), tensor(0.0126)]
[0, 4, 63170.953125, 10783.1923828125, 125711.234375, 3702.65673828125, 2412.347412109375, 275.7140808105469]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2962), tensor(0.1696), tensor(0.2169), tensor(0.0314), tensor(0.0776), tensor(0.0465)]
sparse:
[tensor(0.2930), tensor(0.1469), tensor(0.2024), tensor(0.0447), tensor(0.0776), tensor(0.0465)]
[0, 4, 27797.26171875, 8702.67578125, 67058.6484375, 2093.48876953125, 13436.1611328125, 873.9808349609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1438), tensor(0.1029), tensor(0.0489), tensor(0.0176), tensor(0.0234), tensor(0.0188)]
sparse:
[tensor(0.1479), tensor(0.1026), tensor(0.0467), tensor(0.0372), tensor(0.0234), tensor(0.0188)]
[0, 4, 67372.1875, 8707.8203125, 75885.7578125, 1645.5311279296875, 1860.75048828125, 215.3143310546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2721), tensor(0.1550), tensor(0.0881), tensor(0.0395), tensor(0.0264), tensor(0.0196)]
sparse:
[tensor(0.2736), tensor(0.1355), tensor(0.0872), tensor(0.0770), tensor(0.0264), tensor(0.0196)]
[0, 4, 47151.65625, 7577.01806640625, 48284.7890625, 2776.012451171875, 12411.359375, 639.7734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1810), tensor(0.1520), tensor(0.0866), tensor(0.0307), tensor(0.0273), tensor(0.0211)]
sparse:
[tensor(0.1881), tensor(0.0714), tensor(0.0894), tensor(0.0374), tensor(0.0273), tensor(0.0211)]
[0, 4, 62584.97265625, 16856.453125, 85003.1875, 1274.2777099609375, 4149.2880859375, 497.10260009765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2162), tensor(0.1278), tensor(0.1932), tensor(0.0520), tensor(0.0948), tensor(0.0290)]
sparse:
[tensor(0.2319), tensor(0.1502), tensor(0.1863), tensor(0.0482), tensor(0.0948), tensor(0.0290)]
[0, 4, 61106.96875, 10476.779296875, 102457.9765625, 2581.52880859375, 10402.7109375, 943.633544921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1812), tensor(0.1676), tensor(0.2584), tensor(0.0495), tensor(0.1110), tensor(0.0672)]
sparse:
[tensor(0.1923), tensor(0.1143), tensor(0.2452), tensor(0.0540), tensor(0.1110), tensor(0.0672)]
[0, 4, 58840.09375, 14783.44921875, 173026.6875, 2197.320556640625, 9538.1943359375, 1072.750244140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1976), tensor(0.1366), tensor(0.0820), tensor(0.0419), tensor(0.0130), tensor(0.0141)]
sparse:
[tensor(0.1978), tensor(0.0984), tensor(0.0812), tensor(0.0422), tensor(0.0130), tensor(0.0141)]
[0, 4, 42556.0546875, 10334.0009765625, 93443.421875, 2157.1826171875, 4294.49853515625, 287.63671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1775), tensor(0.1138), tensor(0.2144), tensor(0.0406), tensor(0.0358), tensor(0.0556)]
sparse:
[tensor(0.1844), tensor(0.1110), tensor(0.2019), tensor(0.0571), tensor(0.0358), tensor(0.0556)]
[0, 4, 42495.9140625, 9584.978515625, 108356.8984375, 2393.7060546875, 11263.216796875, 806.8473510742188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2226), tensor(0.1938), tensor(0.0972), tensor(0.0264), tensor(0.0468), tensor(0.0270)]
sparse:
[tensor(0.2179), tensor(0.0918), tensor(0.0940), tensor(0.0388), tensor(0.0468), tensor(0.0270)]
[0, 4, 33696.328125, 7409.91259765625, 70132.3125, 1297.50341796875, 13338.140625, 742.828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2249), tensor(0.1072), tensor(0.1054), tensor(0.0197), tensor(0.0309), tensor(0.0724)]
sparse:
[tensor(0.2245), tensor(0.0829), tensor(0.1028), tensor(0.0315), tensor(0.0309), tensor(0.0724)]
[0, 4, 58556.05859375, 6920.2646484375, 52845.046875, 1622.9979248046875, 19820.283203125, 623.993896484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1847), tensor(0.0787), tensor(0.0773), tensor(0.0493), tensor(0.0138), tensor(0.0123)]
sparse:
[tensor(0.1825), tensor(0.1069), tensor(0.0757), tensor(0.0416), tensor(0.0138), tensor(0.0123)]
[0, 4, 52209.859375, 9030.291015625, 76622.28125, 2071.81201171875, 6792.353515625, 335.91326904296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1592), tensor(0.1578), tensor(0.0955), tensor(0.0172), tensor(0.0412), tensor(0.0253)]
sparse:
[tensor(0.1740), tensor(0.1253), tensor(0.0920), tensor(0.0320), tensor(0.0412), tensor(0.0253)]
[0, 4, 44851.578125, 7154.64501953125, 69608.5625, 1773.8035888671875, 10608.88671875, 736.046142578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1914), tensor(0.0900), tensor(0.1490), tensor(0.0212), tensor(0.0828), tensor(0.0429)]
sparse:
[tensor(0.1812), tensor(0.0833), tensor(0.1408), tensor(0.0369), tensor(0.0828), tensor(0.0429)]
[0, 4, 31738.10546875, 7304.654296875, 53599.28125, 2031.0291748046875, 10606.388671875, 831.1876220703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2522), tensor(0.1934), tensor(0.2013), tensor(0.0373), tensor(0.0473), tensor(0.0389)]
sparse:
[tensor(0.2462), tensor(0.1031), tensor(0.1902), tensor(0.0661), tensor(0.0473), tensor(0.0389)]
[0, 4, 31429.3984375, 7311.255859375, 79328.109375, 2195.732666015625, 9504.8017578125, 820.8504638671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2188), tensor(0.1621), tensor(0.1563), tensor(0.0448), tensor(0.0369), tensor(0.0238)]
sparse:
[tensor(0.2116), tensor(0.1473), tensor(0.1483), tensor(0.0653), tensor(0.0369), tensor(0.0238)]
[0, 4, 48155.7890625, 7558.6572265625, 62085.4921875, 1651.098388671875, 10825.326171875, 666.1868896484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1972), tensor(0.1141), tensor(0.0951), tensor(0.0264), tensor(0.0363), tensor(0.0357)]
sparse:
[tensor(0.2159), tensor(0.1088), tensor(0.0925), tensor(0.0389), tensor(0.0363), tensor(0.0357)]
[0, 4, 86631.90625, 9006.2001953125, 126016.09375, 2908.47607421875, 12969.419921875, 826.6380615234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2123), tensor(0.1159), tensor(0.2693), tensor(0.0161), tensor(0.1092), tensor(0.0472)]
sparse:
[tensor(0.2083), tensor(0.1303), tensor(0.2539), tensor(0.0379), tensor(0.1092), tensor(0.0472)]
[0, 4, 49516.7734375, 11169.0986328125, 122273.921875, 2416.13916015625, 14616.1455078125, 1015.4496459960938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2152), tensor(0.1248), tensor(0.1767), tensor(0.0524), tensor(0.0277), tensor(0.0200)]
sparse:
[tensor(0.2227), tensor(0.1183), tensor(0.1639), tensor(0.0635), tensor(0.0277), tensor(0.0200)]
[0, 4, 62597.3671875, 9264.2177734375, 104290.1484375, 2920.04345703125, 9549.255859375, 547.701416015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2689), tensor(0.1554), tensor(0.2749), tensor(0.0525), tensor(0.1034), tensor(0.0407)]
sparse:
[tensor(0.2594), tensor(0.1289), tensor(0.2556), tensor(0.0575), tensor(0.1034), tensor(0.0407)]
[0, 4, 60800.6796875, 8465.7578125, 82416.375, 2479.00341796875, 7157.951171875, 712.536865234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1798), tensor(0.1718), tensor(0.1079), tensor(0.0369), tensor(0.0329), tensor(0.0307)]
sparse:
[tensor(0.1750), tensor(0.0926), tensor(0.1084), tensor(0.0580), tensor(0.0329), tensor(0.0307)]
[0, 4, 54385.58984375, 6501.7705078125, 52101.703125, 2884.57275390625, 21516.83984375, 738.6028442382812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2597), tensor(0.2014), tensor(0.2454), tensor(0.0640), tensor(0.0604), tensor(0.0523)]
sparse:
[tensor(0.2652), tensor(0.1109), tensor(0.2376), tensor(0.0679), tensor(0.0604), tensor(0.0523)]
[0, 4, 79986.921875, 8375.1552734375, 72300.40625, 2184.780517578125, 25694.3203125, 735.7258911132812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1936), tensor(0.1152), tensor(0.2036), tensor(0.0290), tensor(0.0810), tensor(0.0420)]
sparse:
[tensor(0.1901), tensor(0.1042), tensor(0.1915), tensor(0.0620), tensor(0.0810), tensor(0.0420)]
[0, 4, 49150.02734375, 6535.8212890625, 51523.453125, 2343.831298828125, 14700.2578125, 804.465087890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2434), tensor(0.1317), tensor(0.2311), tensor(0.0242), tensor(0.0780), tensor(0.0229)]
sparse:
[tensor(0.2496), tensor(0.1173), tensor(0.2217), tensor(0.0414), tensor(0.0780), tensor(0.0229)]
[0, 4, 41971.39453125, 8740.767578125, 107134.671875, 2573.3544921875, 17560.76171875, 637.5866088867188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2086), tensor(0.1022), tensor(0.1498), tensor(0.0199), tensor(0.0490), tensor(0.0438)]
sparse:
[tensor(0.2091), tensor(0.1097), tensor(0.1382), tensor(0.0478), tensor(0.0490), tensor(0.0438)]
[0, 4, 32881.0859375, 7604.19482421875, 75261.7890625, 1722.083984375, 9094.505859375, 1016.0809326171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2169), tensor(0.1603), tensor(0.2322), tensor(0.0334), tensor(0.0805), tensor(0.0382)]
sparse:
[tensor(0.2169), tensor(0.0957), tensor(0.2252), tensor(0.0490), tensor(0.0805), tensor(0.0382)]
[0, 4, 63293.34375, 7312.98046875, 37060.73828125, 1604.1617431640625, 9831.060546875, 636.310302734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2133), tensor(0.1572), tensor(0.1471), tensor(0.0459), tensor(0.0385), tensor(0.0337)]
sparse:
[tensor(0.2026), tensor(0.1118), tensor(0.1417), tensor(0.0488), tensor(0.0385), tensor(0.0337)]
[0, 4, 74963.3046875, 8092.35546875, 59315.09765625, 1955.776611328125, 9749.8291015625, 611.9419555664062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2212), tensor(0.1575), tensor(0.2924), tensor(0.0303), tensor(0.0650), tensor(0.0448)]
sparse:
[tensor(0.2197), tensor(0.1157), tensor(0.2684), tensor(0.0685), tensor(0.0650), tensor(0.0448)]
[0, 4, 39299.8203125, 9044.607421875, 64331.37890625, 2348.7431640625, 7403.5712890625, 622.2081298828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2174), tensor(0.1429), tensor(0.1591), tensor(0.0419), tensor(0.0805), tensor(0.0552)]
sparse:
[tensor(0.2127), tensor(0.0818), tensor(0.1500), tensor(0.0555), tensor(0.0805), tensor(0.0552)]
[0, 4, 64962.3203125, 8156.4794921875, 51201.6328125, 1522.4072265625, 8475.369140625, 863.1517333984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1679), tensor(0.0919), tensor(0.1877), tensor(0.0162), tensor(0.0314), tensor(0.0324)]
sparse:
[tensor(0.1729), tensor(0.0892), tensor(0.1822), tensor(0.0235), tensor(0.0314), tensor(0.0324)]
[0, 4, 43781.2421875, 7430.916015625, 68024.8125, 1423.36083984375, 22158.7265625, 815.3013916015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2630), tensor(0.1418), tensor(0.1400), tensor(0.0573), tensor(0.0442), tensor(0.0216)]
sparse:
[tensor(0.2632), tensor(0.0739), tensor(0.1381), tensor(0.0518), tensor(0.0442), tensor(0.0216)]
[0, 4, 36791.8046875, 9998.591796875, 97478.2109375, 3311.799072265625, 11772.521484375, 687.271240234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1771), tensor(0.1050), tensor(0.1085), tensor(0.0460), tensor(0.0480), tensor(0.0320)]
sparse:
[tensor(0.1840), tensor(0.1330), tensor(0.1112), tensor(0.0433), tensor(0.0480), tensor(0.0320)]
[0, 4, 60378.546875, 8559.044921875, 69490.625, 1792.63134765625, 17072.5703125, 643.6166381835938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2152), tensor(0.1299), tensor(0.0377), tensor(0.0251), tensor(0.0098), tensor(0.0125)]
sparse:
[tensor(0.2227), tensor(0.1280), tensor(0.0374), tensor(0.0384), tensor(0.0098), tensor(0.0125)]
[0, 4, 57332.8359375, 9080.3984375, 98191.25, 1269.8956298828125, 2894.07080078125, 243.836181640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1752), tensor(0.0899), tensor(0.1335), tensor(0.0239), tensor(0.0580), tensor(0.0466)]
sparse:
[tensor(0.1825), tensor(0.0809), tensor(0.1272), tensor(0.0292), tensor(0.0580), tensor(0.0466)]
[0, 4, 37462.55859375, 7185.7431640625, 79829.609375, 1277.7607421875, 13007.5419921875, 852.3692016601562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2267), tensor(0.1425), tensor(0.1356), tensor(0.0216), tensor(0.0755), tensor(0.0611)]
sparse:
[tensor(0.2272), tensor(0.1073), tensor(0.1289), tensor(0.0463), tensor(0.0755), tensor(0.0611)]
[0, 4, 29899.65625, 9007.4365234375, 88365.5390625, 1772.488525390625, 5284.59716796875, 598.941650390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1690), tensor(0.1216), tensor(0.1367), tensor(0.0207), tensor(0.0513), tensor(0.0212)]
sparse:
[tensor(0.1758), tensor(0.0637), tensor(0.1289), tensor(0.0402), tensor(0.0513), tensor(0.0212)]
[0, 4, 79069.390625, 7552.65380859375, 106037.9375, 2016.107177734375, 13620.228515625, 688.4442138671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2882), tensor(0.1800), tensor(0.1280), tensor(0.0991), tensor(0.0243), tensor(0.0189)]
sparse:
[tensor(0.2828), tensor(0.1255), tensor(0.1207), tensor(0.0737), tensor(0.0243), tensor(0.0189)]
[0, 4, 64190.703125, 8066.048828125, 54877.9375, 2628.494873046875, 11291.767578125, 597.3389892578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1421), tensor(0.2584), tensor(0.0314), tensor(0.0361), tensor(0.0045), tensor(0.0075)]
sparse:
[tensor(0.1566), tensor(0.0989), tensor(0.0330), tensor(0.0365), tensor(0.0045), tensor(0.0075)]
[0, 4, 64583.59765625, 11660.1455078125, 225600.34375, 1900.3580322265625, 2053.421875, 131.8209991455078]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2171), tensor(0.1290), tensor(0.0658), tensor(0.0322), tensor(0.0430), tensor(0.0230)]
sparse:
[tensor(0.2446), tensor(0.1744), tensor(0.0587), tensor(0.0407), tensor(0.0430), tensor(0.0230)]
[0, 4, 86531.046875, 7783.548828125, 49568.00390625, 2881.960693359375, 11168.9345703125, 686.038330078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2586), tensor(0.1225), tensor(0.1101), tensor(0.0305), tensor(0.0698), tensor(0.0272)]
sparse:
[tensor(0.2751), tensor(0.1335), tensor(0.1105), tensor(0.0638), tensor(0.0698), tensor(0.0272)]
[0, 4, 78081.703125, 8655.1005859375, 89191.65625, 3586.455810546875, 19500.064453125, 585.6927490234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1819), tensor(0.0990), tensor(0.1070), tensor(0.0489), tensor(0.0174), tensor(0.0195)]
sparse:
[tensor(0.1930), tensor(0.0873), tensor(0.0968), tensor(0.0490), tensor(0.0174), tensor(0.0195)]
[0, 4, 40138.609375, 6734.8974609375, 31159.939453125, 1577.1722412109375, 6789.14794921875, 466.2273254394531]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2415), tensor(0.1029), tensor(0.0933), tensor(0.0209), tensor(0.0293), tensor(0.0272)]
sparse:
[tensor(0.2401), tensor(0.1029), tensor(0.0906), tensor(0.0447), tensor(0.0293), tensor(0.0272)]
[0, 4, 67673.9296875, 7182.50390625, 94259.4140625, 2149.671142578125, 10640.23828125, 631.12060546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2240), tensor(0.1211), tensor(0.1722), tensor(0.0169), tensor(0.0710), tensor(0.0345)]
sparse:
[tensor(0.2179), tensor(0.0673), tensor(0.1612), tensor(0.0461), tensor(0.0710), tensor(0.0345)]
[0, 4, 38621.03515625, 6762.361328125, 52896.328125, 1658.43115234375, 10074.609375, 614.0426025390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2251), tensor(0.0964), tensor(0.1201), tensor(0.0228), tensor(0.0441), tensor(0.0260)]
sparse:
[tensor(0.2308), tensor(0.1059), tensor(0.1132), tensor(0.0372), tensor(0.0441), tensor(0.0260)]
[0, 4, 38238.6328125, 6581.64453125, 53186.98828125, 1122.68798828125, 6988.5419921875, 586.0452880859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2538), tensor(0.1832), tensor(0.1028), tensor(0.0989), tensor(0.0066), tensor(0.0163)]
sparse:
[tensor(0.2489), tensor(0.1079), tensor(0.1068), tensor(0.0920), tensor(0.0066), tensor(0.0163)]
[0, 4, 38575.73046875, 8107.765625, 64719.81640625, 2646.21435546875, 5569.69384765625, 239.43710327148438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2222), tensor(0.1018), tensor(0.1429), tensor(0.0483), tensor(0.0805), tensor(0.0348)]
sparse:
[tensor(0.2180), tensor(0.1400), tensor(0.1355), tensor(0.0493), tensor(0.0805), tensor(0.0348)]
[0, 4, 53772.171875, 8685.982421875, 54003.7421875, 1725.10693359375, 12977.43359375, 826.0127563476562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1600), tensor(0.1220), tensor(0.0686), tensor(0.0185), tensor(0.0650), tensor(0.0257)]
sparse:
[tensor(0.1656), tensor(0.0912), tensor(0.0712), tensor(0.0237), tensor(0.0650), tensor(0.0257)]
[0, 4, 35361.39453125, 10209.822265625, 171365.96875, 2011.64208984375, 19323.21875, 1074.570556640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2882), tensor(0.1332), tensor(0.2022), tensor(0.0296), tensor(0.0485), tensor(0.0485)]
sparse:
[tensor(0.2858), tensor(0.1088), tensor(0.1865), tensor(0.0762), tensor(0.0485), tensor(0.0485)]
[0, 4, 64349.11328125, 7849.123046875, 61569.68359375, 2268.509033203125, 6488.92431640625, 674.2366943359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1692), tensor(0.1260), tensor(0.1215), tensor(0.0282), tensor(0.0448), tensor(0.0334)]
sparse:
[tensor(0.1683), tensor(0.0980), tensor(0.1176), tensor(0.0502), tensor(0.0448), tensor(0.0334)]
[0, 4, 49898.47265625, 8432.69140625, 74584.953125, 2268.71240234375, 11850.609375, 623.5391845703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3324), tensor(0.1472), tensor(0.2075), tensor(0.1087), tensor(0.0590), tensor(0.0309)]
sparse:
[tensor(0.3360), tensor(0.1460), tensor(0.1917), tensor(0.0879), tensor(0.0590), tensor(0.0309)]
[0, 4, 81873.7109375, 8601.06640625, 58211.4765625, 2921.041259765625, 12425.8720703125, 846.533203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2084), tensor(0.1539), tensor(0.1328), tensor(0.0677), tensor(0.0273), tensor(0.0296)]
sparse:
[tensor(0.2108), tensor(0.0948), tensor(0.1309), tensor(0.0612), tensor(0.0273), tensor(0.0296)]
[0, 4, 42899.51171875, 9495.0078125, 66393.8359375, 2537.22802734375, 9208.162109375, 540.811767578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2781), tensor(0.1428), tensor(0.0602), tensor(0.0754), tensor(0.0117), tensor(0.0062)]
sparse:
[tensor(0.2784), tensor(0.0892), tensor(0.0571), tensor(0.0607), tensor(0.0117), tensor(0.0062)]
[0, 4, 58590.3671875, 8445.1123046875, 59671.32421875, 2468.9921875, 2754.9501953125, 214.16366577148438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2054), tensor(0.0927), tensor(0.1173), tensor(0.0794), tensor(0.0233), tensor(0.0225)]
sparse:
[tensor(0.2094), tensor(0.1234), tensor(0.1141), tensor(0.0709), tensor(0.0233), tensor(0.0225)]
[0, 4, 74102.640625, 7718.46240234375, 69665.4609375, 2273.337890625, 5030.89453125, 362.938720703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2296), tensor(0.1553), tensor(0.1440), tensor(0.0309), tensor(0.0666), tensor(0.0313)]
sparse:
[tensor(0.2328), tensor(0.1228), tensor(0.1406), tensor(0.0433), tensor(0.0666), tensor(0.0313)]
[0, 4, 37772.4609375, 8675.7646484375, 87432.40625, 2012.8759765625, 13605.85546875, 790.9661254882812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2081), tensor(0.1055), tensor(0.1753), tensor(0.0454), tensor(0.0718), tensor(0.0699)]
sparse:
[tensor(0.2118), tensor(0.1358), tensor(0.1620), tensor(0.0480), tensor(0.0718), tensor(0.0699)]
[0, 4, 84193.25, 9111.8271484375, 90998.7109375, 2164.2021484375, 14966.39453125, 1101.2396240234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2367), tensor(0.1208), tensor(0.2197), tensor(0.0186), tensor(0.0650), tensor(0.0352)]
sparse:
[tensor(0.2365), tensor(0.1183), tensor(0.2014), tensor(0.0494), tensor(0.0650), tensor(0.0352)]
[0, 4, 77650.9375, 8103.9150390625, 60098.828125, 1546.720458984375, 13580.3671875, 770.7982788085938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1970), tensor(0.1244), tensor(0.1819), tensor(0.0718), tensor(0.0512), tensor(0.0256)]
sparse:
[tensor(0.1944), tensor(0.1103), tensor(0.1688), tensor(0.0922), tensor(0.0512), tensor(0.0256)]
[0, 4, 49780.4140625, 9391.9150390625, 53743.671875, 2162.2744140625, 8260.47265625, 576.8690185546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1983), tensor(0.1276), tensor(0.1167), tensor(0.0287), tensor(0.0316), tensor(0.0119)]
sparse:
[tensor(0.2050), tensor(0.1019), tensor(0.1096), tensor(0.0504), tensor(0.0316), tensor(0.0119)]
[0, 4, 59411.9921875, 7238.20068359375, 48385.9921875, 1547.639404296875, 6590.5751953125, 397.1780090332031]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2350), tensor(0.1431), tensor(0.2544), tensor(0.1025), tensor(0.0779), tensor(0.0391)]
sparse:
[tensor(0.2273), tensor(0.1178), tensor(0.2433), tensor(0.1049), tensor(0.0779), tensor(0.0391)]
[0, 4, 45519.4921875, 8148.20751953125, 43569.3671875, 2140.607666015625, 6117.595703125, 713.9288330078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2516), tensor(0.1048), tensor(0.2094), tensor(0.0337), tensor(0.0446), tensor(0.0291)]
sparse:
[tensor(0.2473), tensor(0.1271), tensor(0.1971), tensor(0.0691), tensor(0.0446), tensor(0.0291)]
[0, 4, 58289.5234375, 7402.7724609375, 48066.140625, 1687.104736328125, 23017.669921875, 821.8713989257812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2576), tensor(0.2160), tensor(0.2143), tensor(0.0703), tensor(0.0861), tensor(0.0656)]
sparse:
[tensor(0.2496), tensor(0.0704), tensor(0.2043), tensor(0.0716), tensor(0.0861), tensor(0.0656)]
[0, 4, 27610.861328125, 6729.94140625, 37932.51953125, 2051.498779296875, 8541.93359375, 1038.579833984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2182), tensor(0.1293), tensor(0.1267), tensor(0.0271), tensor(0.0402), tensor(0.0184)]
sparse:
[tensor(0.2229), tensor(0.1717), tensor(0.1169), tensor(0.0432), tensor(0.0402), tensor(0.0184)]
[0, 4, 35915.734375, 8827.896484375, 63616.3984375, 2662.34423828125, 11700.21484375, 417.0257568359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2255), tensor(0.1360), tensor(0.1536), tensor(0.0320), tensor(0.0479), tensor(0.0158)]
sparse:
[tensor(0.2183), tensor(0.0871), tensor(0.1467), tensor(0.0419), tensor(0.0479), tensor(0.0158)]
[0, 4, 72870.125, 8186.953125, 49698.1953125, 1624.017333984375, 6664.94189453125, 464.3088073730469]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1692), tensor(0.1098), tensor(0.0887), tensor(0.0354), tensor(0.0358), tensor(0.0151)]
sparse:
[tensor(0.1812), tensor(0.1339), tensor(0.0823), tensor(0.0378), tensor(0.0358), tensor(0.0151)]
[0, 4, 42561.7109375, 10822.3330078125, 142925.4375, 1431.99853515625, 9649.884765625, 359.22491455078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2149), tensor(0.1597), tensor(0.1023), tensor(0.0203), tensor(0.0300), tensor(0.0233)]
sparse:
[tensor(0.2149), tensor(0.0864), tensor(0.0983), tensor(0.0448), tensor(0.0300), tensor(0.0233)]
[0, 4, 53929.38671875, 6374.9384765625, 31471.515625, 1758.187744140625, 4308.8779296875, 419.4818420410156]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1611), tensor(0.1297), tensor(0.0997), tensor(0.0294), tensor(0.0352), tensor(0.0246)]
sparse:
[tensor(0.1593), tensor(0.1076), tensor(0.0893), tensor(0.0320), tensor(0.0352), tensor(0.0246)]
[0, 4, 44718.015625, 8879.22265625, 99914.625, 1543.037109375, 4739.9365234375, 373.0999755859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1860), tensor(0.1416), tensor(0.2166), tensor(0.0518), tensor(0.0714), tensor(0.0313)]
sparse:
[tensor(0.1882), tensor(0.1230), tensor(0.2047), tensor(0.0462), tensor(0.0714), tensor(0.0313)]
[0, 4, 41670.1015625, 7772.1025390625, 53464.02734375, 1600.258544921875, 6008.443359375, 795.9317626953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1763), tensor(0.1524), tensor(0.1809), tensor(0.0266), tensor(0.0733), tensor(0.0249)]
sparse:
[tensor(0.1746), tensor(0.1371), tensor(0.1689), tensor(0.0369), tensor(0.0733), tensor(0.0249)]
[0, 4, 71101.40625, 8366.8916015625, 77233.921875, 1905.785400390625, 19629.373046875, 623.5101318359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2139), tensor(0.1105), tensor(0.2660), tensor(0.0401), tensor(0.0957), tensor(0.0529)]
sparse:
[tensor(0.2041), tensor(0.1166), tensor(0.2508), tensor(0.0818), tensor(0.0957), tensor(0.0529)]
[0, 4, 45619.125, 7121.5654296875, 42231.2265625, 1589.9114990234375, 6947.04296875, 784.569580078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2244), tensor(0.1352), tensor(0.1703), tensor(0.0383), tensor(0.0708), tensor(0.0408)]
sparse:
[tensor(0.2248), tensor(0.0895), tensor(0.1629), tensor(0.0494), tensor(0.0708), tensor(0.0408)]
[0, 4, 72679.71875, 8267.494140625, 81264.640625, 2527.89013671875, 14875.865234375, 970.4295654296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2273), tensor(0.1543), tensor(0.0434), tensor(0.0376), tensor(0.0078), tensor(0.0051)]
sparse:
[tensor(0.2296), tensor(0.1126), tensor(0.0453), tensor(0.0367), tensor(0.0078), tensor(0.0051)]
[0, 4, 49514.8125, 8837.1865234375, 64873.7890625, 2002.5997314453125, 1402.767822265625, 81.29883575439453]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1571), tensor(0.1515), tensor(0.1540), tensor(0.0472), tensor(0.0462), tensor(0.0311)]
sparse:
[tensor(0.1607), tensor(0.0831), tensor(0.1463), tensor(0.0506), tensor(0.0462), tensor(0.0311)]
[0, 4, 42697.59765625, 7633.83642578125, 52596.48828125, 1563.0400390625, 10818.3388671875, 631.5597534179688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2570), tensor(0.1266), tensor(0.1933), tensor(0.0182), tensor(0.0705), tensor(0.0267)]
sparse:
[tensor(0.2531), tensor(0.0813), tensor(0.1838), tensor(0.0372), tensor(0.0705), tensor(0.0267)]
[0, 4, 51968.7421875, 7291.779296875, 52524.796875, 1950.327392578125, 6519.4404296875, 514.9183349609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1862), tensor(0.1350), tensor(0.1818), tensor(0.0316), tensor(0.0773), tensor(0.0391)]
sparse:
[tensor(0.1856), tensor(0.1588), tensor(0.1720), tensor(0.0814), tensor(0.0773), tensor(0.0391)]
[0, 4, 97622.2265625, 9451.376953125, 53663.83203125, 1902.120849609375, 4858.50048828125, 641.7782592773438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2602), tensor(0.1023), tensor(0.2985), tensor(0.0303), tensor(0.1435), tensor(0.0491)]
sparse:
[tensor(0.2598), tensor(0.1227), tensor(0.2828), tensor(0.0361), tensor(0.1435), tensor(0.0491)]
[0, 4, 91043.5078125, 7736.5380859375, 48215.1171875, 3053.366455078125, 20083.9609375, 959.1296997070312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1291), tensor(0.1051), tensor(0.0585), tensor(0.0245), tensor(0.0288), tensor(0.0090)]
sparse:
[tensor(0.1386), tensor(0.0950), tensor(0.0556), tensor(0.0274), tensor(0.0288), tensor(0.0090)]
[0, 4, 36217.1953125, 10146.1865234375, 136566.484375, 1900.91796875, 2845.8427734375, 221.30624389648438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2484), tensor(0.1065), tensor(0.2043), tensor(0.0420), tensor(0.0935), tensor(0.0273)]
sparse:
[tensor(0.2426), tensor(0.0948), tensor(0.1936), tensor(0.0440), tensor(0.0935), tensor(0.0273)]
[0, 4, 43791.15234375, 6971.95361328125, 47443.5390625, 1858.127685546875, 6856.662109375, 493.47369384765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1621), tensor(0.1108), tensor(0.1134), tensor(0.0284), tensor(0.0607), tensor(0.0272)]
sparse:
[tensor(0.1640), tensor(0.1319), tensor(0.1127), tensor(0.0658), tensor(0.0607), tensor(0.0272)]
[0, 4, 33939.58203125, 7601.99462890625, 53696.390625, 4463.013671875, 4210.2216796875, 475.131103515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2609), tensor(0.1579), tensor(0.1737), tensor(0.0918), tensor(0.0675), tensor(0.0358)]
sparse:
[tensor(0.2536), tensor(0.1194), tensor(0.1608), tensor(0.0770), tensor(0.0675), tensor(0.0358)]
[0, 4, 37317.0546875, 6089.1435546875, 32310.53125, 2513.93994140625, 4453.51513671875, 484.0689697265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2315), tensor(0.1266), tensor(0.1079), tensor(0.0238), tensor(0.0468), tensor(0.0304)]
sparse:
[tensor(0.2277), tensor(0.1204), tensor(0.1055), tensor(0.0422), tensor(0.0468), tensor(0.0304)]
[0, 4, 79522.296875, 8034.384765625, 81817.734375, 2603.40234375, 12470.4765625, 519.758056640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2358), tensor(0.0997), tensor(0.1627), tensor(0.0149), tensor(0.0412), tensor(0.0258)]
sparse:
[tensor(0.2311), tensor(0.0921), tensor(0.1539), tensor(0.0380), tensor(0.0412), tensor(0.0258)]
[0, 4, 20819.96875, 6356.0908203125, 46055.96875, 1663.760986328125, 6004.4384765625, 473.742919921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2356), tensor(0.1150), tensor(0.1525), tensor(0.0216), tensor(0.0510), tensor(0.0297)]
sparse:
[tensor(0.2303), tensor(0.0958), tensor(0.1438), tensor(0.0484), tensor(0.0510), tensor(0.0297)]
[0, 4, 50961.12109375, 7955.95263671875, 49150.1875, 1973.2474365234375, 7380.65625, 783.9921264648438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2294), tensor(0.1790), tensor(0.1518), tensor(0.0282), tensor(0.0419), tensor(0.0164)]
sparse:
[tensor(0.2236), tensor(0.1036), tensor(0.1465), tensor(0.0541), tensor(0.0419), tensor(0.0164)]
[0, 4, 35567.5234375, 8286.787109375, 104663.125, 1710.571533203125, 5536.177734375, 399.547119140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1750), tensor(0.1027), tensor(0.1341), tensor(0.0383), tensor(0.1000), tensor(0.0272)]
sparse:
[tensor(0.1741), tensor(0.0886), tensor(0.1243), tensor(0.0671), tensor(0.1000), tensor(0.0272)]
[0, 4, 38368.609375, 7163.55859375, 41013.96875, 2540.88623046875, 20348.44140625, 572.320556640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2692), tensor(0.1528), tensor(0.2131), tensor(0.0196), tensor(0.0715), tensor(0.0544)]
sparse:
[tensor(0.2595), tensor(0.1429), tensor(0.2077), tensor(0.0440), tensor(0.0715), tensor(0.0544)]
[0, 4, 46239.94140625, 8587.193359375, 55747.421875, 2728.699951171875, 9609.4111328125, 707.4630126953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2246), tensor(0.2161), tensor(0.0875), tensor(0.0654), tensor(0.0235), tensor(0.0166)]
sparse:
[tensor(0.2289), tensor(0.1298), tensor(0.0858), tensor(0.0611), tensor(0.0235), tensor(0.0166)]
[0, 4, 81084.8125, 8019.2509765625, 51971.9375, 1972.253173828125, 5317.76904296875, 345.13037109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2150), tensor(0.1378), tensor(0.2090), tensor(0.0192), tensor(0.1147), tensor(0.0329)]
sparse:
[tensor(0.2205), tensor(0.0948), tensor(0.2003), tensor(0.0331), tensor(0.1147), tensor(0.0329)]
[0, 4, 44549.65625, 8703.9990234375, 66229.3828125, 2228.60791015625, 10633.951171875, 550.1383056640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2253), tensor(0.1605), tensor(0.0917), tensor(0.0275), tensor(0.0692), tensor(0.0403)]
sparse:
[tensor(0.2393), tensor(0.1153), tensor(0.0872), tensor(0.0396), tensor(0.0692), tensor(0.0403)]
[0, 4, 68874.578125, 9488.0234375, 154677.3125, 3562.744384765625, 16937.30078125, 1774.833740234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1705), tensor(0.1446), tensor(0.1290), tensor(0.0462), tensor(0.0508), tensor(0.0253)]
sparse:
[tensor(0.1816), tensor(0.0867), tensor(0.1221), tensor(0.0550), tensor(0.0508), tensor(0.0253)]
[0, 4, 56593.09765625, 10402.552734375, 98656.15625, 2345.730712890625, 10198.111328125, 706.6014404296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2059), tensor(0.1465), tensor(0.0388), tensor(0.0349), tensor(0.0092), tensor(0.0058)]
sparse:
[tensor(0.2233), tensor(0.1630), tensor(0.0374), tensor(0.0379), tensor(0.0092), tensor(0.0058)]
[0, 4, 53923.7109375, 8827.927734375, 103873.71875, 2058.125732421875, 2591.671142578125, 180.8715057373047]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2198), tensor(0.1338), tensor(0.1896), tensor(0.0554), tensor(0.0886), tensor(0.0373)]
sparse:
[tensor(0.2214), tensor(0.1538), tensor(0.1842), tensor(0.0614), tensor(0.0886), tensor(0.0373)]
[0, 4, 43660.03515625, 9728.74609375, 103590.84375, 2713.64404296875, 8731.919921875, 713.4986572265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2265), tensor(0.1728), tensor(0.0456), tensor(0.0481), tensor(0.0095), tensor(0.0251)]
sparse:
[tensor(0.2357), tensor(0.1099), tensor(0.0458), tensor(0.0483), tensor(0.0095), tensor(0.0251)]
[0, 4, 81145.0078125, 7892.453125, 74952.15625, 4066.0576171875, 10152.345703125, 403.683349609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1825), tensor(0.1519), tensor(0.0692), tensor(0.0255), tensor(0.0132), tensor(0.0104)]
sparse:
[tensor(0.1803), tensor(0.0883), tensor(0.0729), tensor(0.0414), tensor(0.0132), tensor(0.0104)]
[0, 4, 39551.30859375, 11325.44140625, 83782.7734375, 3552.735107421875, 2649.296875, 233.95603942871094]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2595), tensor(0.1390), tensor(0.0931), tensor(0.0316), tensor(0.0233), tensor(0.0260)]
sparse:
[tensor(0.2560), tensor(0.1025), tensor(0.0897), tensor(0.0300), tensor(0.0233), tensor(0.0260)]
[0, 4, 77392.15625, 9899.1181640625, 120269.0078125, 1655.2666015625, 12796.9697265625, 595.3673095703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2737), tensor(0.1090), tensor(0.2772), tensor(0.0388), tensor(0.0727), tensor(0.0444)]
sparse:
[tensor(0.2593), tensor(0.1438), tensor(0.2615), tensor(0.0427), tensor(0.0727), tensor(0.0444)]
[0, 4, 54151.1484375, 10937.1484375, 92302.5390625, 2000.7000732421875, 14987.11328125, 959.490478515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2217), tensor(0.1596), tensor(0.0650), tensor(0.0251), tensor(0.0235), tensor(0.0095)]
sparse:
[tensor(0.2301), tensor(0.0876), tensor(0.0620), tensor(0.0285), tensor(0.0235), tensor(0.0095)]
[0, 4, 35966.7109375, 10258.802734375, 178433.640625, 3265.340087890625, 9283.7666015625, 326.1075439453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2552), tensor(0.2164), tensor(0.2320), tensor(0.0315), tensor(0.0872), tensor(0.0547)]
sparse:
[tensor(0.2432), tensor(0.0827), tensor(0.2106), tensor(0.0759), tensor(0.0872), tensor(0.0547)]
[0, 4, 57938.5625, 9832.041015625, 103688.2578125, 3094.705078125, 16957.1015625, 975.1121826171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1879), tensor(0.1436), tensor(0.1343), tensor(0.0891), tensor(0.0432), tensor(0.0193)]
sparse:
[tensor(0.1938), tensor(0.1001), tensor(0.1294), tensor(0.0710), tensor(0.0432), tensor(0.0193)]
[0, 4, 77228.734375, 9525.7099609375, 95244.3828125, 1938.3575439453125, 9386.9111328125, 597.7859497070312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2665), tensor(0.1468), tensor(0.1811), tensor(0.0421), tensor(0.0667), tensor(0.0625)]
sparse:
[tensor(0.2552), tensor(0.1240), tensor(0.1717), tensor(0.0539), tensor(0.0667), tensor(0.0625)]
[0, 4, 22431.720703125, 7298.9580078125, 51066.89453125, 1830.2294921875, 17186.2578125, 671.4346923828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2518), tensor(0.1703), tensor(0.1539), tensor(0.0249), tensor(0.0634), tensor(0.0328)]
sparse:
[tensor(0.2652), tensor(0.1546), tensor(0.1555), tensor(0.0570), tensor(0.0634), tensor(0.0328)]
[0, 4, 115619.3515625, 10061.6533203125, 188643.5, 1910.470703125, 9015.5849609375, 617.1600341796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1321), tensor(0.0920), tensor(0.0966), tensor(0.0309), tensor(0.0448), tensor(0.0239)]
sparse:
[tensor(0.1423), tensor(0.0770), tensor(0.0944), tensor(0.0369), tensor(0.0448), tensor(0.0239)]
[0, 4, 66707.921875, 11655.0927734375, 181154.75, 4302.20703125, 10293.556640625, 798.860107421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2711), tensor(0.1450), tensor(0.2120), tensor(0.0126), tensor(0.0558), tensor(0.0548)]
sparse:
[tensor(0.2791), tensor(0.1248), tensor(0.2018), tensor(0.0306), tensor(0.0558), tensor(0.0548)]
[0, 4, 59724.1484375, 10007.88671875, 101374.1015625, 1897.065673828125, 13466.7080078125, 977.7886962890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1576), tensor(0.0995), tensor(0.1082), tensor(0.0447), tensor(0.0588), tensor(0.0323)]
sparse:
[tensor(0.1688), tensor(0.0818), tensor(0.1013), tensor(0.0603), tensor(0.0588), tensor(0.0323)]
[0, 4, 57322.1171875, 12794.1875, 123586.109375, 2164.4716796875, 15618.955078125, 616.852294921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2366), tensor(0.1600), tensor(0.2248), tensor(0.0300), tensor(0.0623), tensor(0.0312)]
sparse:
[tensor(0.2362), tensor(0.1106), tensor(0.2110), tensor(0.0330), tensor(0.0623), tensor(0.0312)]
[0, 4, 32728.85546875, 8548.22265625, 82661.421875, 1529.03271484375, 9611.322265625, 970.498779296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1751), tensor(0.1023), tensor(0.1493), tensor(0.0214), tensor(0.0955), tensor(0.0424)]
sparse:
[tensor(0.1742), tensor(0.1279), tensor(0.1469), tensor(0.0403), tensor(0.0955), tensor(0.0424)]
[0, 4, 51642.81640625, 7865.830078125, 62244.375, 3503.78466796875, 25035.13671875, 828.342529296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2028), tensor(0.1122), tensor(0.1315), tensor(0.0201), tensor(0.0419), tensor(0.0245)]
sparse:
[tensor(0.2057), tensor(0.0719), tensor(0.1267), tensor(0.0201), tensor(0.0419), tensor(0.0245)]
[0, 4, 45203.8515625, 6730.5146484375, 81963.796875, 2388.32470703125, 10044.8046875, 387.25823974609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2074), tensor(0.1399), tensor(0.1368), tensor(0.0355), tensor(0.0546), tensor(0.0221)]
sparse:
[tensor(0.2042), tensor(0.1369), tensor(0.1273), tensor(0.0465), tensor(0.0546), tensor(0.0221)]
[0, 4, 29854.78515625, 8445.5791015625, 69746.8125, 1825.4044189453125, 9173.521484375, 540.4927978515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3421), tensor(0.1583), tensor(0.2678), tensor(0.0308), tensor(0.0811), tensor(0.0480)]
sparse:
[tensor(0.3234), tensor(0.1443), tensor(0.2579), tensor(0.0430), tensor(0.0811), tensor(0.0480)]
[0, 4, 49884.9375, 8968.40625, 73446.671875, 2031.712890625, 19318.603515625, 1099.9388427734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1475), tensor(0.1486), tensor(0.1386), tensor(0.0701), tensor(0.0522), tensor(0.0341)]
sparse:
[tensor(0.1497), tensor(0.1154), tensor(0.1275), tensor(0.0662), tensor(0.0522), tensor(0.0341)]
[0, 4, 48629.64453125, 8164.205078125, 53342.71875, 1874.5245361328125, 5912.2373046875, 576.2315063476562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2459), tensor(0.1027), tensor(0.2087), tensor(0.0263), tensor(0.0522), tensor(0.0197)]
sparse:
[tensor(0.2441), tensor(0.1087), tensor(0.1967), tensor(0.0645), tensor(0.0522), tensor(0.0197)]
[0, 4, 26503.6640625, 10242.638671875, 79461.125, 1378.45654296875, 5312.96435546875, 700.6875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1838), tensor(0.1769), tensor(0.1060), tensor(0.0442), tensor(0.0487), tensor(0.0463)]
sparse:
[tensor(0.1897), tensor(0.1290), tensor(0.1031), tensor(0.0400), tensor(0.0487), tensor(0.0463)]
[0, 4, 38730.0546875, 8567.1875, 105383.453125, 2236.62158203125, 12287.546875, 666.1505737304688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3192), tensor(0.1407), tensor(0.2368), tensor(0.0273), tensor(0.0560), tensor(0.0304)]
sparse:
[tensor(0.3138), tensor(0.1519), tensor(0.2210), tensor(0.0389), tensor(0.0560), tensor(0.0304)]
[0, 4, 55971.82421875, 8082.443359375, 61045.61328125, 1806.5947265625, 10468.734375, 649.3635864257812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2015), tensor(0.2156), tensor(0.1558), tensor(0.0196), tensor(0.0895), tensor(0.0460)]
sparse:
[tensor(0.1992), tensor(0.0970), tensor(0.1482), tensor(0.0638), tensor(0.0895), tensor(0.0460)]
[0, 4, 45082.89453125, 6974.724609375, 54878.38671875, 1583.354736328125, 6738.64990234375, 581.43017578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2200), tensor(0.1198), tensor(0.1257), tensor(0.0278), tensor(0.0358), tensor(0.0272)]
sparse:
[tensor(0.2448), tensor(0.1174), tensor(0.1209), tensor(0.0347), tensor(0.0358), tensor(0.0272)]
[0, 4, 69260.53125, 9479.3212890625, 124185.453125, 2260.29736328125, 8856.6796875, 695.8735961914062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1935), tensor(0.1897), tensor(0.1517), tensor(0.1158), tensor(0.0528), tensor(0.0247)]
sparse:
[tensor(0.1951), tensor(0.0733), tensor(0.1408), tensor(0.0836), tensor(0.0528), tensor(0.0247)]
[0, 4, 23973.1171875, 7410.8662109375, 46053.90625, 2566.4658203125, 5973.2734375, 392.77215576171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1832), tensor(0.1459), tensor(0.0672), tensor(0.0208), tensor(0.0391), tensor(0.0376)]
sparse:
[tensor(0.1819), tensor(0.0959), tensor(0.0598), tensor(0.0384), tensor(0.0391), tensor(0.0376)]
[0, 4, 31104.38671875, 8428.03125, 92361.5859375, 1803.4715576171875, 11071.40234375, 1000.660400390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2124), tensor(0.1158), tensor(0.1634), tensor(0.0821), tensor(0.0880), tensor(0.0336)]
sparse:
[tensor(0.2049), tensor(0.1236), tensor(0.1526), tensor(0.0713), tensor(0.0880), tensor(0.0336)]
[0, 4, 38169.41015625, 6988.787109375, 42498.7265625, 2162.996337890625, 13242.861328125, 985.41943359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1792), tensor(0.1625), tensor(0.1407), tensor(0.0866), tensor(0.0241), tensor(0.0240)]
sparse:
[tensor(0.1729), tensor(0.0966), tensor(0.1329), tensor(0.0755), tensor(0.0241), tensor(0.0240)]
[0, 4, 45106.8515625, 5986.6884765625, 31755.947265625, 2084.30224609375, 7390.919921875, 406.88433837890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2233), tensor(0.1448), tensor(0.1665), tensor(0.0408), tensor(0.0526), tensor(0.0450)]
sparse:
[tensor(0.2285), tensor(0.1121), tensor(0.1582), tensor(0.0530), tensor(0.0526), tensor(0.0450)]
[0, 4, 68687.5234375, 9654.41015625, 145638.0, 2666.76611328125, 7570.8154296875, 442.7578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2002), tensor(0.1838), tensor(0.2455), tensor(0.0172), tensor(0.0603), tensor(0.0444)]
sparse:
[tensor(0.2063), tensor(0.1563), tensor(0.2268), tensor(0.0432), tensor(0.0603), tensor(0.0444)]
[0, 4, 56589.703125, 8036.037109375, 62659.06640625, 2353.037109375, 10339.701171875, 1055.081787109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2123), tensor(0.1078), tensor(0.1807), tensor(0.0624), tensor(0.0647), tensor(0.0415)]
sparse:
[tensor(0.2137), tensor(0.0938), tensor(0.1688), tensor(0.0577), tensor(0.0647), tensor(0.0415)]
[0, 4, 50572.125, 7819.748046875, 100649.28125, 2379.796630859375, 4844.17822265625, 749.5469360351562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1818), tensor(0.0949), tensor(0.2018), tensor(0.0270), tensor(0.0571), tensor(0.0349)]
sparse:
[tensor(0.1792), tensor(0.0682), tensor(0.1905), tensor(0.0337), tensor(0.0571), tensor(0.0349)]
[0, 4, 37303.5234375, 8230.3701171875, 58719.6328125, 1630.1552734375, 10186.185546875, 835.75390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1631), tensor(0.1085), tensor(0.0797), tensor(0.0333), tensor(0.0345), tensor(0.0138)]
sparse:
[tensor(0.1573), tensor(0.0946), tensor(0.0747), tensor(0.0303), tensor(0.0345), tensor(0.0138)]
[0, 4, 35166.41015625, 9362.669921875, 86434.984375, 2804.3642578125, 9378.712890625, 604.0734252929688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1971), tensor(0.1310), tensor(0.2324), tensor(0.0197), tensor(0.0562), tensor(0.0384)]
sparse:
[tensor(0.1992), tensor(0.1222), tensor(0.2202), tensor(0.0467), tensor(0.0562), tensor(0.0384)]
[0, 4, 34098.3359375, 7903.69384765625, 65146.5859375, 2223.0947265625, 6451.205078125, 677.3143310546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1894), tensor(0.1293), tensor(0.1859), tensor(0.0386), tensor(0.0794), tensor(0.0294)]
sparse:
[tensor(0.1900), tensor(0.1282), tensor(0.1764), tensor(0.0480), tensor(0.0794), tensor(0.0294)]
[0, 4, 52219.4375, 8458.71484375, 99683.8515625, 1731.1649169921875, 8869.880859375, 573.64013671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2152), tensor(0.1255), tensor(0.2285), tensor(0.0297), tensor(0.0675), tensor(0.0519)]
sparse:
[tensor(0.2155), tensor(0.1463), tensor(0.2195), tensor(0.0410), tensor(0.0675), tensor(0.0519)]
[0, 4, 65566.5703125, 8508.244140625, 47322.640625, 1649.352294921875, 16478.6484375, 879.8883056640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1746), tensor(0.0989), tensor(0.0715), tensor(0.0213), tensor(0.0275), tensor(0.0107)]
sparse:
[tensor(0.1858), tensor(0.1122), tensor(0.0707), tensor(0.0280), tensor(0.0275), tensor(0.0107)]
[0, 4, 85264.4609375, 8311.7763671875, 91963.7109375, 2010.64013671875, 6774.7109375, 387.23248291015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1612), tensor(0.1358), tensor(0.1653), tensor(0.0238), tensor(0.0713), tensor(0.0557)]
sparse:
[tensor(0.1663), tensor(0.1264), tensor(0.1551), tensor(0.0368), tensor(0.0713), tensor(0.0557)]
[0, 4, 29716.84765625, 8590.6552734375, 109037.5390625, 2585.55517578125, 16404.78515625, 1016.1691284179688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2407), tensor(0.1246), tensor(0.2438), tensor(0.0367), tensor(0.0587), tensor(0.0336)]
sparse:
[tensor(0.2470), tensor(0.1667), tensor(0.2270), tensor(0.0457), tensor(0.0587), tensor(0.0336)]
[0, 4, 53327.4375, 7704.7890625, 83107.875, 1462.2945556640625, 7519.29345703125, 699.0166015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2575), tensor(0.2470), tensor(0.1500), tensor(0.0263), tensor(0.0458), tensor(0.0296)]
sparse:
[tensor(0.2456), tensor(0.0987), tensor(0.1419), tensor(0.0514), tensor(0.0458), tensor(0.0296)]
[0, 4, 103623.15625, 7691.28515625, 68554.703125, 3068.97509765625, 7250.3427734375, 604.904541015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2277), tensor(0.1447), tensor(0.0429), tensor(0.0412), tensor(0.0087), tensor(0.0109)]
sparse:
[tensor(0.2291), tensor(0.1125), tensor(0.0486), tensor(0.0525), tensor(0.0087), tensor(0.0109)]
[0, 4, 42749.9921875, 10814.072265625, 58159.7578125, 2447.622314453125, 4294.126953125, 202.38327026367188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1535), tensor(0.1148), tensor(0.2290), tensor(0.0432), tensor(0.0686), tensor(0.0393)]
sparse:
[tensor(0.1555), tensor(0.0882), tensor(0.2137), tensor(0.0508), tensor(0.0686), tensor(0.0393)]
[0, 4, 77271.3046875, 9462.6845703125, 139562.875, 3317.334716796875, 9471.0302734375, 669.250244140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2346), tensor(0.1091), tensor(0.0975), tensor(0.0465), tensor(0.0196), tensor(0.0241)]
sparse:
[tensor(0.2339), tensor(0.0939), tensor(0.0876), tensor(0.0461), tensor(0.0196), tensor(0.0241)]
[0, 4, 36461.0390625, 10048.349609375, 141030.0, 3205.26806640625, 5491.39794921875, 435.34112548828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2197), tensor(0.1159), tensor(0.0761), tensor(0.0445), tensor(0.0301), tensor(0.0172)]
sparse:
[tensor(0.2240), tensor(0.1199), tensor(0.0714), tensor(0.0486), tensor(0.0301), tensor(0.0172)]
[0, 4, 49572.953125, 8541.91796875, 118524.234375, 2821.43310546875, 4838.3779296875, 281.33624267578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2096), tensor(0.1112), tensor(0.1366), tensor(0.0179), tensor(0.0284), tensor(0.0315)]
sparse:
[tensor(0.2064), tensor(0.1007), tensor(0.1345), tensor(0.0404), tensor(0.0284), tensor(0.0315)]
[0, 4, 32050.501953125, 6585.1806640625, 69420.0234375, 1751.5611572265625, 7854.923828125, 424.66558837890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1845), tensor(0.1754), tensor(0.0429), tensor(0.0118), tensor(0.0220), tensor(0.0204)]
sparse:
[tensor(0.1801), tensor(0.1115), tensor(0.0396), tensor(0.0232), tensor(0.0220), tensor(0.0204)]
[0, 4, 42795.296875, 7503.86572265625, 60300.1640625, 1346.155029296875, 8445.455078125, 448.9866638183594]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2057), tensor(0.1195), tensor(0.1984), tensor(0.0281), tensor(0.0732), tensor(0.0458)]
sparse:
[tensor(0.2014), tensor(0.0712), tensor(0.1893), tensor(0.0317), tensor(0.0732), tensor(0.0458)]
[0, 4, 23427.26171875, 7012.7197265625, 32644.953125, 1590.141845703125, 7490.38037109375, 621.8282470703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1780), tensor(0.0814), tensor(0.0770), tensor(0.0309), tensor(0.0407), tensor(0.0579)]
sparse:
[tensor(0.1858), tensor(0.1406), tensor(0.0708), tensor(0.0349), tensor(0.0407), tensor(0.0579)]
[0, 4, 63847.28125, 9147.80859375, 108597.875, 2963.383056640625, 18100.21875, 1037.9056396484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2184), tensor(0.2099), tensor(0.2191), tensor(0.0346), tensor(0.0721), tensor(0.0310)]
sparse:
[tensor(0.2149), tensor(0.0954), tensor(0.2079), tensor(0.0388), tensor(0.0721), tensor(0.0310)]
[0, 4, 46543.1953125, 7815.22509765625, 85182.8515625, 2662.585205078125, 10861.017578125, 633.8202514648438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1888), tensor(0.1291), tensor(0.1106), tensor(0.0253), tensor(0.0301), tensor(0.0383)]
sparse:
[tensor(0.1950), tensor(0.1375), tensor(0.1047), tensor(0.0472), tensor(0.0301), tensor(0.0383)]
[0, 4, 59323.57421875, 11595.392578125, 134909.171875, 2743.77587890625, 12624.1796875, 950.6658935546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2600), tensor(0.1298), tensor(0.1559), tensor(0.0294), tensor(0.0479), tensor(0.0222)]
sparse:
[tensor(0.2609), tensor(0.1251), tensor(0.1445), tensor(0.0620), tensor(0.0479), tensor(0.0222)]
[0, 4, 72669.390625, 8452.9736328125, 64209.45703125, 1898.1785888671875, 5502.6376953125, 416.5168762207031]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1956), tensor(0.0853), tensor(0.0771), tensor(0.1195), tensor(0.0169), tensor(0.0291)]
sparse:
[tensor(0.1977), tensor(0.1033), tensor(0.0779), tensor(0.1066), tensor(0.0169), tensor(0.0291)]
[0, 4, 58722.7109375, 7124.8671875, 70915.3828125, 2643.52587890625, 5949.24609375, 335.7380676269531]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2495), tensor(0.1678), tensor(0.1827), tensor(0.0399), tensor(0.0565), tensor(0.0339)]
sparse:
[tensor(0.2523), tensor(0.0965), tensor(0.1733), tensor(0.0424), tensor(0.0565), tensor(0.0339)]
[0, 4, 37659.87890625, 7413.83251953125, 56041.0, 1707.9969482421875, 8325.36328125, 683.584228515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1859), tensor(0.1012), tensor(0.0992), tensor(0.0536), tensor(0.0617), tensor(0.0317)]
sparse:
[tensor(0.1878), tensor(0.1055), tensor(0.0940), tensor(0.0905), tensor(0.0617), tensor(0.0317)]
[0, 4, 45942.953125, 8841.927734375, 54003.33984375, 2800.7646484375, 11894.3076171875, 982.2626953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2839), tensor(0.1580), tensor(0.2151), tensor(0.0208), tensor(0.0811), tensor(0.0378)]
sparse:
[tensor(0.2797), tensor(0.0768), tensor(0.2076), tensor(0.0312), tensor(0.0811), tensor(0.0378)]
[0, 4, 26110.6015625, 7522.46728515625, 45586.65625, 1130.698486328125, 7798.23828125, 607.0338134765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1213), tensor(0.1261), tensor(0.0744), tensor(0.0442), tensor(0.0531), tensor(0.0403)]
sparse:
[tensor(0.1319), tensor(0.0811), tensor(0.0738), tensor(0.0398), tensor(0.0531), tensor(0.0403)]
[0, 4, 82592.3984375, 11086.96484375, 130895.140625, 3148.17236328125, 21523.484375, 899.4923095703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2819), tensor(0.1052), tensor(0.1333), tensor(0.0553), tensor(0.0304), tensor(0.0220)]
sparse:
[tensor(0.2822), tensor(0.1148), tensor(0.1264), tensor(0.0471), tensor(0.0304), tensor(0.0220)]
[0, 4, 47310.5390625, 7634.978515625, 46799.46875, 2027.211181640625, 5418.1962890625, 396.2336730957031]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2090), tensor(0.1130), tensor(0.1123), tensor(0.0538), tensor(0.0263), tensor(0.0271)]
sparse:
[tensor(0.2153), tensor(0.1273), tensor(0.1075), tensor(0.0461), tensor(0.0263), tensor(0.0271)]
[0, 4, 43283.3515625, 7753.6416015625, 79361.390625, 2066.159423828125, 12162.271484375, 719.7684936523438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2193), tensor(0.1336), tensor(0.1477), tensor(0.0499), tensor(0.0347), tensor(0.0164)]
sparse:
[tensor(0.2150), tensor(0.0952), tensor(0.1417), tensor(0.0480), tensor(0.0347), tensor(0.0164)]
[0, 4, 32521.16015625, 7085.7021484375, 33675.0234375, 1961.29931640625, 10287.9453125, 495.90838623046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2151), tensor(0.2290), tensor(0.1473), tensor(0.0341), tensor(0.0669), tensor(0.0321)]
sparse:
[tensor(0.2148), tensor(0.1250), tensor(0.1380), tensor(0.0465), tensor(0.0669), tensor(0.0321)]
[0, 4, 24553.509765625, 7343.642578125, 46918.16796875, 2619.09375, 16867.939453125, 747.7108154296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2343), tensor(0.1173), tensor(0.1911), tensor(0.0236), tensor(0.0824), tensor(0.0454)]
sparse:
[tensor(0.2321), tensor(0.0862), tensor(0.1820), tensor(0.0324), tensor(0.0824), tensor(0.0454)]
[0, 4, 55656.2421875, 7347.4189453125, 60560.1640625, 1538.5916748046875, 9616.54296875, 612.3734130859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1776), tensor(0.0925), tensor(0.0993), tensor(0.0421), tensor(0.0480), tensor(0.0275)]
sparse:
[tensor(0.2041), tensor(0.1031), tensor(0.0995), tensor(0.0395), tensor(0.0480), tensor(0.0275)]
[0, 4, 64405.453125, 12712.21875, 134920.625, 2250.57958984375, 19264.779296875, 761.6046142578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2064), tensor(0.2099), tensor(0.0245), tensor(0.0379), tensor(0.0081), tensor(0.0087)]
sparse:
[tensor(0.2165), tensor(0.1835), tensor(0.0251), tensor(0.0381), tensor(0.0081), tensor(0.0087)]
[0, 4, 51251.4921875, 11164.8271484375, 114948.5234375, 3523.017578125, 6796.4921875, 278.6056823730469]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2119), tensor(0.1531), tensor(0.1097), tensor(0.0651), tensor(0.0103), tensor(0.0153)]
sparse:
[tensor(0.2149), tensor(0.0965), tensor(0.1155), tensor(0.0842), tensor(0.0103), tensor(0.0153)]
[0, 4, 102361.125, 10129.37109375, 96661.859375, 4008.248046875, 5645.41650390625, 249.54656982421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2369), tensor(0.1034), tensor(0.1844), tensor(0.0565), tensor(0.0457), tensor(0.0329)]
sparse:
[tensor(0.2252), tensor(0.1207), tensor(0.1734), tensor(0.0532), tensor(0.0457), tensor(0.0329)]
[0, 4, 48869.65234375, 11897.025390625, 57148.5625, 2601.09326171875, 10983.12109375, 617.7286376953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2230), tensor(0.1856), tensor(0.0767), tensor(0.0536), tensor(0.0210), tensor(0.0255)]
sparse:
[tensor(0.2289), tensor(0.1155), tensor(0.0749), tensor(0.0486), tensor(0.0210), tensor(0.0255)]
[0, 4, 46666.8046875, 10035.01171875, 76919.96875, 3104.38720703125, 10476.244140625, 321.6448974609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2001), tensor(0.1131), tensor(0.2062), tensor(0.0208), tensor(0.1526), tensor(0.0256)]
sparse:
[tensor(0.2030), tensor(0.1135), tensor(0.2009), tensor(0.0251), tensor(0.1526), tensor(0.0256)]
[0, 4, 64775.109375, 10660.943359375, 84001.25, 2670.791015625, 15798.552734375, 851.9478759765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2309), tensor(0.1599), tensor(0.1529), tensor(0.0581), tensor(0.0557), tensor(0.0335)]
sparse:
[tensor(0.2265), tensor(0.1318), tensor(0.1471), tensor(0.0628), tensor(0.0557), tensor(0.0335)]
[0, 4, 35220.875, 7705.4267578125, 58495.921875, 2429.128173828125, 16995.765625, 794.6836547851562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2178), tensor(0.1387), tensor(0.1285), tensor(0.0266), tensor(0.0406), tensor(0.0120)]
sparse:
[tensor(0.2152), tensor(0.1427), tensor(0.1204), tensor(0.0321), tensor(0.0406), tensor(0.0120)]
[0, 4, 75719.265625, 7544.57275390625, 75533.765625, 1988.8472900390625, 8482.25390625, 384.2523193359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2036), tensor(0.1134), tensor(0.0875), tensor(0.0204), tensor(0.0472), tensor(0.0519)]
sparse:
[tensor(0.2057), tensor(0.0584), tensor(0.0811), tensor(0.0414), tensor(0.0472), tensor(0.0519)]
[0, 4, 37403.6796875, 5462.1943359375, 34967.53515625, 2478.836181640625, 18013.318359375, 880.62451171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2506), tensor(0.0984), tensor(0.1816), tensor(0.0262), tensor(0.1077), tensor(0.0204)]
sparse:
[tensor(0.2479), tensor(0.1254), tensor(0.1717), tensor(0.0618), tensor(0.1077), tensor(0.0204)]
[0, 4, 35387.21875, 8486.83984375, 57695.5546875, 2305.56982421875, 9111.5, 416.8416442871094]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1754), tensor(0.1188), tensor(0.1714), tensor(0.0137), tensor(0.0802), tensor(0.0675)]
sparse:
[tensor(0.1834), tensor(0.1053), tensor(0.1615), tensor(0.0380), tensor(0.0802), tensor(0.0675)]
[0, 4, 36611.890625, 8265.630859375, 86937.3984375, 1757.01123046875, 19973.783203125, 1010.8345336914062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2116), tensor(0.1089), tensor(0.0659), tensor(0.0410), tensor(0.0156), tensor(0.0138)]
sparse:
[tensor(0.2035), tensor(0.0867), tensor(0.0638), tensor(0.0416), tensor(0.0156), tensor(0.0138)]
[0, 4, 40783.77734375, 7822.7138671875, 74004.1796875, 1476.9305419921875, 6296.32763671875, 374.72998046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2257), tensor(0.1261), tensor(0.2540), tensor(0.0173), tensor(0.1071), tensor(0.0514)]
sparse:
[tensor(0.2207), tensor(0.0747), tensor(0.2421), tensor(0.0522), tensor(0.1071), tensor(0.0514)]
[0, 4, 73265.265625, 9763.794921875, 67162.03125, 1943.09423828125, 11483.87109375, 963.6578979492188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1572), tensor(0.2083), tensor(0.0363), tensor(0.0148), tensor(0.0090), tensor(0.0045)]
sparse:
[tensor(0.1540), tensor(0.0891), tensor(0.0343), tensor(0.0269), tensor(0.0090), tensor(0.0045)]
[0, 4, 83816.234375, 7032.36572265625, 69599.0234375, 967.4739379882812, 1737.8134765625, 162.91146850585938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1340), tensor(0.1212), tensor(0.0722), tensor(0.0163), tensor(0.0157), tensor(0.0119)]
sparse:
[tensor(0.1410), tensor(0.1034), tensor(0.0689), tensor(0.0357), tensor(0.0157), tensor(0.0119)]
[0, 4, 51962.796875, 9057.134765625, 78337.9609375, 2459.656982421875, 4031.77099609375, 253.73150634765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2236), tensor(0.1295), tensor(0.1085), tensor(0.0124), tensor(0.0544), tensor(0.0167)]
sparse:
[tensor(0.2231), tensor(0.1176), tensor(0.1025), tensor(0.0295), tensor(0.0544), tensor(0.0167)]
[0, 4, 39008.44921875, 8112.720703125, 63960.6484375, 1182.784423828125, 3748.141845703125, 351.7618408203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2236), tensor(0.1265), tensor(0.2234), tensor(0.0235), tensor(0.0840), tensor(0.0591)]
sparse:
[tensor(0.2333), tensor(0.0973), tensor(0.2089), tensor(0.0623), tensor(0.0840), tensor(0.0591)]
[0, 4, 71983.5859375, 8520.53515625, 68600.28125, 1771.22998046875, 9556.6044921875, 788.2880859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2028), tensor(0.0948), tensor(0.1097), tensor(0.0253), tensor(0.0589), tensor(0.0158)]
sparse:
[tensor(0.2240), tensor(0.0959), tensor(0.1004), tensor(0.0307), tensor(0.0589), tensor(0.0158)]
[0, 4, 93967.765625, 11731.056640625, 157986.890625, 1847.0601806640625, 5227.8251953125, 444.63885498046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2558), tensor(0.1695), tensor(0.1118), tensor(0.0343), tensor(0.0297), tensor(0.0152)]
sparse:
[tensor(0.2615), tensor(0.1319), tensor(0.1024), tensor(0.0430), tensor(0.0297), tensor(0.0152)]
[0, 4, 94952.140625, 8973.595703125, 91107.609375, 1802.410888671875, 6109.3583984375, 450.228271484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2274), tensor(0.1021), tensor(0.0821), tensor(0.0151), tensor(0.0349), tensor(0.0120)]
sparse:
[tensor(0.2306), tensor(0.1010), tensor(0.0792), tensor(0.0295), tensor(0.0349), tensor(0.0120)]
[0, 4, 68146.921875, 8245.505859375, 74621.125, 2067.457763671875, 4421.55859375, 370.62060546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2173), tensor(0.1773), tensor(0.1923), tensor(0.0319), tensor(0.0774), tensor(0.0324)]
sparse:
[tensor(0.2269), tensor(0.1189), tensor(0.1804), tensor(0.0476), tensor(0.0774), tensor(0.0324)]
[0, 4, 54484.4140625, 7482.3828125, 54079.34765625, 1947.640869140625, 10593.8525390625, 996.7022705078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2768), tensor(0.1365), tensor(0.1107), tensor(0.0243), tensor(0.0237), tensor(0.0122)]
sparse:
[tensor(0.2811), tensor(0.1209), tensor(0.1093), tensor(0.0483), tensor(0.0237), tensor(0.0122)]
[0, 4, 98728.21875, 7354.8154296875, 56098.62109375, 2003.6614990234375, 7519.140625, 427.46710205078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2230), tensor(0.3508), tensor(0.0953), tensor(0.0235), tensor(0.0393), tensor(0.0156)]
sparse:
[tensor(0.2286), tensor(0.1277), tensor(0.0914), tensor(0.0362), tensor(0.0393), tensor(0.0156)]
[0, 4, 68074.0234375, 14571.7060546875, 179317.0, 3175.8125, 8083.779296875, 406.19622802734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2023), tensor(0.1370), tensor(0.0779), tensor(0.0423), tensor(0.0271), tensor(0.0156)]
sparse:
[tensor(0.1995), tensor(0.0778), tensor(0.0772), tensor(0.0392), tensor(0.0271), tensor(0.0156)]
[0, 4, 140848.03125, 16725.8359375, 103648.71875, 1957.299560546875, 3207.44970703125, 255.37750244140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2315), tensor(0.1423), tensor(0.1193), tensor(0.0265), tensor(0.0487), tensor(0.0223)]
sparse:
[tensor(0.2367), tensor(0.0888), tensor(0.1190), tensor(0.0475), tensor(0.0487), tensor(0.0223)]
[0, 4, 56735.859375, 8560.77734375, 81002.390625, 2806.4345703125, 9946.20703125, 533.608642578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2313), tensor(0.1665), tensor(0.1285), tensor(0.0144), tensor(0.0484), tensor(0.0240)]
sparse:
[tensor(0.2387), tensor(0.1065), tensor(0.1206), tensor(0.0379), tensor(0.0484), tensor(0.0240)]
[0, 4, 56357.59375, 9619.328125, 74361.234375, 2227.668701171875, 9639.486328125, 696.5462036132812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2424), tensor(0.0935), tensor(0.1420), tensor(0.0288), tensor(0.0497), tensor(0.0328)]
sparse:
[tensor(0.2592), tensor(0.1171), tensor(0.1327), tensor(0.0470), tensor(0.0497), tensor(0.0328)]
[0, 4, 62509.5390625, 8221.02734375, 54544.3515625, 2788.62890625, 11971.921875, 751.71337890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2365), tensor(0.1454), tensor(0.1357), tensor(0.0383), tensor(0.0244), tensor(0.0158)]
sparse:
[tensor(0.2352), tensor(0.0982), tensor(0.1257), tensor(0.0791), tensor(0.0244), tensor(0.0158)]
[0, 4, 28518.13671875, 7090.5732421875, 63960.59375, 2041.404052734375, 4943.45458984375, 336.0591125488281]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2858), tensor(0.1823), tensor(0.1699), tensor(0.0122), tensor(0.0831), tensor(0.0379)]
sparse:
[tensor(0.2870), tensor(0.1006), tensor(0.1623), tensor(0.0353), tensor(0.0831), tensor(0.0379)]
[0, 4, 48503.34765625, 7119.01611328125, 42514.2890625, 1893.500244140625, 22950.123046875, 729.9442138671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3075), tensor(0.2869), tensor(0.1394), tensor(0.0241), tensor(0.0534), tensor(0.0196)]
sparse:
[tensor(0.3035), tensor(0.0912), tensor(0.1324), tensor(0.0611), tensor(0.0534), tensor(0.0196)]
[0, 4, 64203.7578125, 8983.26171875, 80757.671875, 2952.700927734375, 8886.607421875, 502.99884033203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2001), tensor(0.1161), tensor(0.0730), tensor(0.0227), tensor(0.0164), tensor(0.0064)]
sparse:
[tensor(0.2138), tensor(0.1104), tensor(0.0704), tensor(0.0381), tensor(0.0164), tensor(0.0064)]
[0, 4, 81768.4140625, 7778.9873046875, 140998.0625, 2211.545166015625, 3334.209716796875, 295.54193115234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1514), tensor(0.1209), tensor(0.0323), tensor(0.0272), tensor(0.0036), tensor(0.0044)]
sparse:
[tensor(0.1723), tensor(0.1467), tensor(0.0362), tensor(0.0467), tensor(0.0036), tensor(0.0044)]
[0, 4, 56339.3203125, 9158.4853515625, 214899.71875, 2167.766357421875, 2366.140625, 102.26995086669922]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3286), tensor(0.1421), tensor(0.1123), tensor(0.0201), tensor(0.0359), tensor(0.0399)]
sparse:
[tensor(0.3201), tensor(0.1280), tensor(0.1076), tensor(0.0404), tensor(0.0359), tensor(0.0399)]
[0, 4, 55679.0703125, 7963.486328125, 85221.8984375, 2539.36279296875, 32610.2421875, 1134.43310546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1820), tensor(0.1258), tensor(0.2766), tensor(0.0171), tensor(0.0718), tensor(0.0511)]
sparse:
[tensor(0.1829), tensor(0.1001), tensor(0.2502), tensor(0.0350), tensor(0.0718), tensor(0.0511)]
[0, 4, 47311.2734375, 9037.16796875, 79509.796875, 1974.312255859375, 8967.1787109375, 836.4290771484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3146), tensor(0.1607), tensor(0.1294), tensor(0.0235), tensor(0.0813), tensor(0.0633)]
sparse:
[tensor(0.2941), tensor(0.1418), tensor(0.1260), tensor(0.0425), tensor(0.0813), tensor(0.0633)]
[0, 4, 30916.8515625, 9445.53125, 54690.671875, 1833.1409912109375, 17865.134765625, 984.60986328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1936), tensor(0.0939), tensor(0.1826), tensor(0.0702), tensor(0.0486), tensor(0.0277)]
sparse:
[tensor(0.2016), tensor(0.1481), tensor(0.1704), tensor(0.0584), tensor(0.0486), tensor(0.0277)]
[0, 4, 72511.921875, 10034.1005859375, 74113.859375, 2423.16552734375, 9068.109375, 686.6962890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2728), tensor(0.1331), tensor(0.1648), tensor(0.0710), tensor(0.0814), tensor(0.0390)]
sparse:
[tensor(0.2618), tensor(0.1270), tensor(0.1549), tensor(0.0680), tensor(0.0814), tensor(0.0390)]
[0, 4, 27471.7265625, 7148.9267578125, 51130.1171875, 3207.87109375, 12466.1044921875, 966.5736083984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2255), tensor(0.1772), tensor(0.1376), tensor(0.0374), tensor(0.0387), tensor(0.0261)]
sparse:
[tensor(0.2455), tensor(0.0954), tensor(0.1324), tensor(0.0654), tensor(0.0387), tensor(0.0261)]
[0, 4, 71490.75, 8071.775390625, 60328.1796875, 2243.88671875, 6355.0908203125, 621.8740234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1615), tensor(0.1284), tensor(0.0367), tensor(0.0295), tensor(0.0176), tensor(0.0075)]
sparse:
[tensor(0.1827), tensor(0.1308), tensor(0.0359), tensor(0.0332), tensor(0.0176), tensor(0.0075)]
[0, 4, 35405.3203125, 14793.63671875, 209111.84375, 1562.123779296875, 3869.6533203125, 236.43118286132812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2038), tensor(0.1533), tensor(0.2497), tensor(0.0386), tensor(0.0762), tensor(0.0495)]
sparse:
[tensor(0.2080), tensor(0.1297), tensor(0.2333), tensor(0.0487), tensor(0.0762), tensor(0.0495)]
[0, 4, 39623.21875, 10278.294921875, 72386.609375, 1369.1923828125, 9010.6005859375, 881.854248046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2162), tensor(0.1143), tensor(0.1285), tensor(0.0210), tensor(0.0599), tensor(0.0207)]
sparse:
[tensor(0.2224), tensor(0.1334), tensor(0.1200), tensor(0.0437), tensor(0.0599), tensor(0.0207)]
[0, 4, 40087.05078125, 7672.9853515625, 80361.546875, 3112.9853515625, 13678.259765625, 882.113037109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2443), tensor(0.1191), tensor(0.0965), tensor(0.0703), tensor(0.0158), tensor(0.0105)]
sparse:
[tensor(0.2599), tensor(0.1068), tensor(0.0880), tensor(0.0598), tensor(0.0158), tensor(0.0105)]
[0, 4, 61832.62890625, 7700.001953125, 88723.6640625, 3180.1103515625, 5563.92822265625, 243.98312377929688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2123), tensor(0.1458), tensor(0.1338), tensor(0.0308), tensor(0.0638), tensor(0.0411)]
sparse:
[tensor(0.2134), tensor(0.1614), tensor(0.1230), tensor(0.0501), tensor(0.0638), tensor(0.0411)]
[0, 4, 36041.4609375, 7922.94189453125, 53610.1328125, 3513.55712890625, 28262.212890625, 1025.334228515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1635), tensor(0.1331), tensor(0.0236), tensor(0.0199), tensor(0.0128), tensor(0.0119)]
sparse:
[tensor(0.1772), tensor(0.0863), tensor(0.0236), tensor(0.0376), tensor(0.0128), tensor(0.0119)]
[0, 4, 92346.7421875, 8526.509765625, 93120.4453125, 2552.80078125, 5014.7197265625, 242.9471435546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2717), tensor(0.1276), tensor(0.0589), tensor(0.0497), tensor(0.0101), tensor(0.0190)]
sparse:
[tensor(0.2662), tensor(0.1330), tensor(0.0620), tensor(0.0600), tensor(0.0101), tensor(0.0190)]
[0, 4, 52688.60546875, 8907.4072265625, 110654.453125, 2072.7783203125, 5503.48876953125, 295.15130615234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2101), tensor(0.1298), tensor(0.1183), tensor(0.0476), tensor(0.0607), tensor(0.0209)]
sparse:
[tensor(0.2136), tensor(0.1173), tensor(0.1117), tensor(0.0448), tensor(0.0607), tensor(0.0209)]
[0, 4, 40695.75390625, 10482.794921875, 87188.8203125, 2009.616455078125, 22906.14453125, 622.3436279296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2529), tensor(0.1424), tensor(0.1094), tensor(0.0202), tensor(0.0515), tensor(0.0263)]
sparse:
[tensor(0.2577), tensor(0.0949), tensor(0.1068), tensor(0.0325), tensor(0.0515), tensor(0.0263)]
[0, 4, 45326.078125, 8099.94970703125, 98682.9140625, 3101.6533203125, 12425.00390625, 642.905517578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2227), tensor(0.1513), tensor(0.2028), tensor(0.0325), tensor(0.0671), tensor(0.0364)]
sparse:
[tensor(0.2245), tensor(0.1232), tensor(0.1874), tensor(0.0440), tensor(0.0671), tensor(0.0364)]
[0, 4, 42673.7734375, 7259.537109375, 66950.3671875, 2035.47021484375, 6157.826171875, 522.382568359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3035), tensor(0.1922), tensor(0.1966), tensor(0.0325), tensor(0.0974), tensor(0.0486)]
sparse:
[tensor(0.2896), tensor(0.1484), tensor(0.1894), tensor(0.0440), tensor(0.0974), tensor(0.0486)]
[0, 4, 54101.109375, 8244.5419921875, 56657.078125, 1987.964111328125, 18936.40234375, 1113.1727294921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2002), tensor(0.2294), tensor(0.1383), tensor(0.0190), tensor(0.0425), tensor(0.0191)]
sparse:
[tensor(0.1982), tensor(0.1182), tensor(0.1344), tensor(0.0330), tensor(0.0425), tensor(0.0191)]
[0, 4, 50309.43359375, 7549.287109375, 59923.5390625, 2559.416748046875, 14443.169921875, 623.3123168945312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2782), tensor(0.1121), tensor(0.0570), tensor(0.0452), tensor(0.0161), tensor(0.0106)]
sparse:
[tensor(0.2750), tensor(0.1505), tensor(0.0569), tensor(0.0440), tensor(0.0161), tensor(0.0106)]
[0, 4, 77497.890625, 6180.02734375, 42072.1875, 2113.9814453125, 5425.13720703125, 378.46722412109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2070), tensor(0.1019), tensor(0.1363), tensor(0.1080), tensor(0.0242), tensor(0.0199)]
sparse:
[tensor(0.2097), tensor(0.1283), tensor(0.1335), tensor(0.0978), tensor(0.0242), tensor(0.0199)]
[0, 4, 43255.35546875, 7377.66796875, 69298.515625, 3643.98583984375, 17103.09375, 343.60546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2104), tensor(0.2036), tensor(0.1980), tensor(0.0298), tensor(0.0728), tensor(0.0361)]
sparse:
[tensor(0.2030), tensor(0.0985), tensor(0.1862), tensor(0.0402), tensor(0.0728), tensor(0.0361)]
[0, 4, 31662.240234375, 7078.1435546875, 33136.56640625, 1432.3369140625, 12923.046875, 782.37890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1954), tensor(0.1422), tensor(0.1563), tensor(0.0235), tensor(0.0798), tensor(0.0269)]
sparse:
[tensor(0.1864), tensor(0.0822), tensor(0.1466), tensor(0.0343), tensor(0.0798), tensor(0.0269)]
[0, 4, 85131.765625, 7069.84765625, 53985.51953125, 1890.8841552734375, 13837.5302734375, 875.617919921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2503), tensor(0.1148), tensor(0.0517), tensor(0.0335), tensor(0.0350), tensor(0.0233)]
sparse:
[tensor(0.2493), tensor(0.0976), tensor(0.0537), tensor(0.0351), tensor(0.0350), tensor(0.0233)]
[0, 4, 40606.75, 10812.64453125, 99084.6875, 2578.734130859375, 7255.39111328125, 497.3117980957031]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1372), tensor(0.1494), tensor(0.0352), tensor(0.0114), tensor(0.0113), tensor(0.0045)]
sparse:
[tensor(0.1542), tensor(0.0867), tensor(0.0342), tensor(0.0147), tensor(0.0113), tensor(0.0045)]
[0, 4, 98402.4921875, 7412.0810546875, 173423.71875, 1912.301513671875, 4134.1220703125, 164.7393035888672]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3016), tensor(0.1426), tensor(0.2558), tensor(0.0276), tensor(0.1283), tensor(0.0717)]
sparse:
[tensor(0.2952), tensor(0.0871), tensor(0.2513), tensor(0.0624), tensor(0.1283), tensor(0.0717)]
[0, 4, 64319.0859375, 10401.5009765625, 111093.1953125, 3709.385498046875, 26569.6171875, 1159.869384765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1333), tensor(0.0879), tensor(0.0581), tensor(0.0176), tensor(0.0219), tensor(0.0092)]
sparse:
[tensor(0.1390), tensor(0.0935), tensor(0.0584), tensor(0.0331), tensor(0.0219), tensor(0.0092)]
[0, 4, 39085.5390625, 6753.6083984375, 57585.01953125, 1573.8240966796875, 8221.2490234375, 201.1650390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2406), tensor(0.1275), tensor(0.1172), tensor(0.0427), tensor(0.0326), tensor(0.0199)]
sparse:
[tensor(0.2405), tensor(0.1437), tensor(0.1173), tensor(0.0610), tensor(0.0326), tensor(0.0199)]
[0, 4, 32432.064453125, 8153.07861328125, 72663.890625, 2383.13232421875, 8206.9013671875, 351.35540771484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1236), tensor(0.1860), tensor(0.0437), tensor(0.0367), tensor(0.0154), tensor(0.0143)]
sparse:
[tensor(0.1423), tensor(0.1515), tensor(0.0435), tensor(0.0362), tensor(0.0154), tensor(0.0143)]
[0, 4, 49519.30859375, 8811.23828125, 142538.828125, 2661.92138671875, 10598.8916015625, 413.2158203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2912), tensor(0.1500), tensor(0.2214), tensor(0.0294), tensor(0.0593), tensor(0.0350)]
sparse:
[tensor(0.2807), tensor(0.1034), tensor(0.2129), tensor(0.0529), tensor(0.0593), tensor(0.0350)]
[0, 4, 59154.01953125, 7287.2353515625, 65755.65625, 2704.233642578125, 15159.962890625, 828.3829345703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1852), tensor(0.1077), tensor(0.0248), tensor(0.0402), tensor(0.0028), tensor(0.0052)]
sparse:
[tensor(0.1922), tensor(0.0854), tensor(0.0256), tensor(0.0453), tensor(0.0028), tensor(0.0052)]
[0, 4, 57804.640625, 8691.3349609375, 108716.375, 2073.25244140625, 2185.3447265625, 74.80599975585938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2849), tensor(0.1274), tensor(0.1726), tensor(0.0425), tensor(0.0584), tensor(0.0364)]
sparse:
[tensor(0.2803), tensor(0.0853), tensor(0.1614), tensor(0.0466), tensor(0.0584), tensor(0.0364)]
[0, 4, 61102.00390625, 7887.365234375, 54014.15625, 3366.8955078125, 11835.755859375, 735.0968627929688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1886), tensor(0.1205), tensor(0.0192), tensor(0.0456), tensor(0.0026), tensor(0.0046)]
sparse:
[tensor(0.1890), tensor(0.0831), tensor(0.0183), tensor(0.0452), tensor(0.0026), tensor(0.0046)]
[0, 4, 54986.4765625, 6180.4716796875, 55568.60546875, 2662.582763671875, 1869.4688720703125, 79.64605712890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2372), tensor(0.2031), tensor(0.1039), tensor(0.0320), tensor(0.0243), tensor(0.0150)]
sparse:
[tensor(0.2436), tensor(0.1118), tensor(0.1011), tensor(0.0412), tensor(0.0243), tensor(0.0150)]
[0, 4, 29237.875, 7286.6474609375, 53408.85546875, 2087.203125, 7072.962890625, 343.2359619140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2225), tensor(0.2280), tensor(0.2042), tensor(0.0303), tensor(0.0537), tensor(0.0399)]
sparse:
[tensor(0.2077), tensor(0.0872), tensor(0.2008), tensor(0.0534), tensor(0.0537), tensor(0.0399)]
[0, 4, 59374.9921875, 7423.73974609375, 51440.23046875, 2463.8076171875, 21176.5390625, 1263.315185546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2445), tensor(0.1445), tensor(0.1610), tensor(0.0088), tensor(0.0543), tensor(0.0253)]
sparse:
[tensor(0.2674), tensor(0.1351), tensor(0.1430), tensor(0.0280), tensor(0.0543), tensor(0.0253)]
[0, 4, 95407.5625, 6939.05322265625, 53779.8515625, 1252.329833984375, 12093.1689453125, 545.692626953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2002), tensor(0.1035), tensor(0.1126), tensor(0.0364), tensor(0.0396), tensor(0.0328)]
sparse:
[tensor(0.1968), tensor(0.0776), tensor(0.1055), tensor(0.0408), tensor(0.0396), tensor(0.0328)]
[0, 4, 69647.3125, 7966.30322265625, 49630.7265625, 2713.75341796875, 14666.12890625, 840.9400024414062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3747), tensor(0.1368), tensor(0.1449), tensor(0.0490), tensor(0.0641), tensor(0.0404)]
sparse:
[tensor(0.3670), tensor(0.0864), tensor(0.1410), tensor(0.0452), tensor(0.0641), tensor(0.0404)]
[0, 4, 58202.82421875, 9033.828125, 71215.140625, 1937.410888671875, 15608.837890625, 790.69287109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1578), tensor(0.1683), tensor(0.2970), tensor(0.0668), tensor(0.0891), tensor(0.0734)]
sparse:
[tensor(0.1545), tensor(0.0787), tensor(0.2807), tensor(0.0666), tensor(0.0891), tensor(0.0734)]
[0, 4, 79578.546875, 11658.728515625, 145379.921875, 3643.84521484375, 39968.94140625, 1649.00634765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2130), tensor(0.1145), tensor(0.0908), tensor(0.0156), tensor(0.0455), tensor(0.0474)]
sparse:
[tensor(0.2272), tensor(0.1240), tensor(0.0892), tensor(0.0288), tensor(0.0455), tensor(0.0474)]
[0, 4, 58629.8828125, 8674.3466796875, 75244.125, 3456.492431640625, 36966.5703125, 722.7017211914062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1989), tensor(0.0920), tensor(0.1194), tensor(0.0246), tensor(0.0237), tensor(0.0355)]
sparse:
[tensor(0.2036), tensor(0.1126), tensor(0.1176), tensor(0.0454), tensor(0.0237), tensor(0.0355)]
[0, 4, 59390.65234375, 7724.97119140625, 83784.9296875, 2471.67138671875, 19575.8046875, 604.5819091796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1971), tensor(0.1515), tensor(0.0221), tensor(0.0528), tensor(0.0012), tensor(0.0029)]
sparse:
[tensor(0.1958), tensor(0.0604), tensor(0.0218), tensor(0.0545), tensor(0.0012), tensor(0.0029)]
[0, 4, 33349.90625, 9076.619140625, 42643.86328125, 1811.3634033203125, 829.0912475585938, 31.158782958984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2037), tensor(0.1146), tensor(0.1978), tensor(0.0284), tensor(0.0408), tensor(0.0391)]
sparse:
[tensor(0.2015), tensor(0.0948), tensor(0.1807), tensor(0.0674), tensor(0.0408), tensor(0.0391)]
[0, 4, 57758.71875, 8264.11328125, 76537.59375, 2957.75927734375, 10832.3525390625, 753.620361328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2430), tensor(0.1808), tensor(0.0804), tensor(0.0223), tensor(0.0418), tensor(0.0238)]
sparse:
[tensor(0.2419), tensor(0.1435), tensor(0.0789), tensor(0.0415), tensor(0.0418), tensor(0.0238)]
[0, 4, 38649.73828125, 9135.25390625, 66183.984375, 1533.8428955078125, 8670.73828125, 461.39105224609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2162), tensor(0.1442), tensor(0.1568), tensor(0.0671), tensor(0.0605), tensor(0.0443)]
sparse:
[tensor(0.2111), tensor(0.1419), tensor(0.1512), tensor(0.0672), tensor(0.0605), tensor(0.0443)]
[0, 4, 47837.70703125, 8164.17626953125, 51786.71875, 2284.51806640625, 12268.275390625, 1006.2022094726562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1845), tensor(0.1063), tensor(0.0943), tensor(0.0140), tensor(0.0815), tensor(0.0374)]
sparse:
[tensor(0.1844), tensor(0.0974), tensor(0.0857), tensor(0.0437), tensor(0.0815), tensor(0.0374)]
[0, 4, 56532.8359375, 7474.9599609375, 73848.0703125, 2093.311767578125, 9827.921875, 604.9393310546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1903), tensor(0.1622), tensor(0.0724), tensor(0.0299), tensor(0.0115), tensor(0.0091)]
sparse:
[tensor(0.1977), tensor(0.0988), tensor(0.0730), tensor(0.0508), tensor(0.0115), tensor(0.0091)]
[0, 4, 30459.56640625, 8955.970703125, 152986.84375, 2224.701171875, 2788.437255859375, 221.03289794921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2001), tensor(0.1566), tensor(0.0394), tensor(0.0293), tensor(0.0064), tensor(0.0071)]
sparse:
[tensor(0.2050), tensor(0.0965), tensor(0.0391), tensor(0.0341), tensor(0.0064), tensor(0.0071)]
[0, 4, 51102.64453125, 7858.77734375, 88251.1953125, 1737.3411865234375, 4091.363037109375, 157.13079833984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2393), tensor(0.1094), tensor(0.1027), tensor(0.0284), tensor(0.0318), tensor(0.0211)]
sparse:
[tensor(0.2407), tensor(0.1028), tensor(0.0987), tensor(0.0453), tensor(0.0318), tensor(0.0211)]
[0, 4, 75606.109375, 10531.26171875, 104810.0, 2197.581298828125, 16876.97265625, 377.3431701660156]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2022), tensor(0.1413), tensor(0.0827), tensor(0.0433), tensor(0.0180), tensor(0.0154)]
sparse:
[tensor(0.2047), tensor(0.1578), tensor(0.0800), tensor(0.0414), tensor(0.0180), tensor(0.0154)]
[0, 4, 26727.234375, 11246.599609375, 129110.40625, 2196.081787109375, 12291.6015625, 335.500244140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2473), tensor(0.1902), tensor(0.1433), tensor(0.0441), tensor(0.0470), tensor(0.0300)]
sparse:
[tensor(0.2499), tensor(0.1119), tensor(0.1369), tensor(0.0567), tensor(0.0470), tensor(0.0300)]
[0, 4, 56540.57421875, 10319.416015625, 70459.8984375, 2307.59423828125, 9280.3349609375, 717.3984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2367), tensor(0.1286), tensor(0.0535), tensor(0.0527), tensor(0.0196), tensor(0.0131)]
sparse:
[tensor(0.2314), tensor(0.1174), tensor(0.0540), tensor(0.0485), tensor(0.0196), tensor(0.0131)]
[0, 4, 23603.23046875, 7566.2958984375, 56004.640625, 1845.02001953125, 9759.19140625, 331.98907470703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2277), tensor(0.1238), tensor(0.1273), tensor(0.0300), tensor(0.0300), tensor(0.0248)]
sparse:
[tensor(0.2234), tensor(0.0831), tensor(0.1177), tensor(0.0652), tensor(0.0300), tensor(0.0248)]
[0, 4, 38908.45703125, 7575.2421875, 46310.79296875, 2492.846435546875, 9638.162109375, 369.265869140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2332), tensor(0.1593), tensor(0.0852), tensor(0.0533), tensor(0.0318), tensor(0.0182)]
sparse:
[tensor(0.2437), tensor(0.0720), tensor(0.0820), tensor(0.0450), tensor(0.0318), tensor(0.0182)]
[0, 4, 23770.41796875, 8084.5078125, 76581.6015625, 1706.98046875, 9144.9248046875, 515.4014282226562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1795), tensor(0.1391), tensor(0.0788), tensor(0.0655), tensor(0.0200), tensor(0.0217)]
sparse:
[tensor(0.2116), tensor(0.1284), tensor(0.0839), tensor(0.0733), tensor(0.0200), tensor(0.0217)]
[0, 4, 118750.515625, 16873.064453125, 308890.59375, 6343.611328125, 6684.53515625, 404.4098815917969]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4197), tensor(0.2760), tensor(0.3258), tensor(0.0494), tensor(0.1300), tensor(0.0997)]
sparse:
[tensor(0.4087), tensor(0.1894), tensor(0.3126), tensor(0.0862), tensor(0.1300), tensor(0.0997)]
[0, 4, 60894.984375, 8800.498046875, 68093.03125, 2918.331787109375, 13022.8955078125, 1038.0068359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2359), tensor(0.2048), tensor(0.1008), tensor(0.0376), tensor(0.0402), tensor(0.0253)]
sparse:
[tensor(0.2149), tensor(0.0807), tensor(0.0982), tensor(0.0400), tensor(0.0402), tensor(0.0253)]
[0, 4, 95212.046875, 10776.6005859375, 115795.0625, 3565.17333984375, 12297.986328125, 525.8131103515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3184), tensor(0.3433), tensor(0.2115), tensor(0.0452), tensor(0.0506), tensor(0.0271)]
sparse:
[tensor(0.3070), tensor(0.1465), tensor(0.2000), tensor(0.0533), tensor(0.0506), tensor(0.0271)]
[0, 4, 199627.8125, 12992.1640625, 206504.953125, 3668.5908203125, 14405.5, 634.683837890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1787), tensor(0.3014), tensor(0.0393), tensor(0.0240), tensor(0.0062), tensor(0.0061)]
sparse:
[tensor(0.1955), tensor(0.0792), tensor(0.0396), tensor(0.0426), tensor(0.0062), tensor(0.0061)]
[0, 4, 517506.40625, 11801.474609375, 335591.40625, 2619.47021484375, 5788.525390625, 168.87869262695312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4063), tensor(0.1196), tensor(0.1221), tensor(0.0192), tensor(0.0278), tensor(0.0165)]
sparse:
[tensor(0.4149), tensor(0.1170), tensor(0.1184), tensor(0.0422), tensor(0.0278), tensor(0.0165)]
[0, 4, 66302.8671875, 9356.3271484375, 62117.4140625, 2060.980712890625, 6283.50927734375, 431.751708984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2153), tensor(0.1939), tensor(0.1078), tensor(0.0297), tensor(0.0308), tensor(0.0151)]
sparse:
[tensor(0.2325), tensor(0.0814), tensor(0.1026), tensor(0.0457), tensor(0.0308), tensor(0.0151)]
[0, 4, 29987.09375, 11498.294921875, 103276.8203125, 1944.1143798828125, 7447.20458984375, 494.1005859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2603), tensor(0.1501), tensor(0.0912), tensor(0.0201), tensor(0.0274), tensor(0.0148)]
sparse:
[tensor(0.2771), tensor(0.1246), tensor(0.0859), tensor(0.0417), tensor(0.0274), tensor(0.0148)]
[0, 4, 59450.2734375, 9949.818359375, 92512.265625, 2236.269775390625, 6678.91064453125, 425.93768310546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1938), tensor(0.0974), tensor(0.0688), tensor(0.0349), tensor(0.0191), tensor(0.0357)]
sparse:
[tensor(0.1966), tensor(0.1332), tensor(0.0667), tensor(0.0379), tensor(0.0191), tensor(0.0357)]
[0, 4, 68181.953125, 12505.3779296875, 261248.140625, 3308.567138671875, 8423.814453125, 733.532470703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2356), tensor(0.1401), tensor(0.1613), tensor(0.0218), tensor(0.0526), tensor(0.0290)]
sparse:
[tensor(0.2306), tensor(0.1022), tensor(0.1465), tensor(0.0353), tensor(0.0526), tensor(0.0290)]
[0, 4, 44004.5078125, 6618.4306640625, 56821.12890625, 1627.2039794921875, 8261.3046875, 587.061279296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1688), tensor(0.1050), tensor(0.0514), tensor(0.0277), tensor(0.0095), tensor(0.0096)]
sparse:
[tensor(0.1764), tensor(0.1111), tensor(0.0538), tensor(0.0336), tensor(0.0095), tensor(0.0096)]
[0, 4, 49443.03515625, 11150.8466796875, 84444.859375, 1789.40380859375, 2963.82470703125, 188.03024291992188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2449), tensor(0.1110), tensor(0.2039), tensor(0.0239), tensor(0.0517), tensor(0.0438)]
sparse:
[tensor(0.2462), tensor(0.1125), tensor(0.1945), tensor(0.0454), tensor(0.0517), tensor(0.0438)]
[0, 4, 42761.859375, 8695.2236328125, 89538.2421875, 2398.05859375, 10925.9765625, 780.807861328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1922), tensor(0.1367), tensor(0.0753), tensor(0.0484), tensor(0.0168), tensor(0.0131)]
sparse:
[tensor(0.2057), tensor(0.1200), tensor(0.0791), tensor(0.0768), tensor(0.0168), tensor(0.0131)]
[0, 4, 41971.265625, 6833.2890625, 48867.796875, 1884.658203125, 5326.7060546875, 336.7577819824219]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2775), tensor(0.2514), tensor(0.2690), tensor(0.0425), tensor(0.0958), tensor(0.0488)]
sparse:
[tensor(0.2672), tensor(0.0993), tensor(0.2539), tensor(0.0610), tensor(0.0958), tensor(0.0488)]
[0, 4, 60067.3984375, 7733.5576171875, 51135.578125, 2004.998046875, 10351.615234375, 793.4156494140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2968), tensor(0.1342), tensor(0.1967), tensor(0.0347), tensor(0.0960), tensor(0.0599)]
sparse:
[tensor(0.2888), tensor(0.0995), tensor(0.1835), tensor(0.0676), tensor(0.0960), tensor(0.0599)]
[0, 4, 123084.9609375, 9210.982421875, 113657.3125, 2369.622802734375, 13525.072265625, 960.71484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2500), tensor(0.1439), tensor(0.1684), tensor(0.0154), tensor(0.1131), tensor(0.0462)]
sparse:
[tensor(0.2786), tensor(0.1181), tensor(0.1629), tensor(0.0321), tensor(0.1131), tensor(0.0462)]
[0, 4, 88392.7890625, 9763.494140625, 105469.359375, 2424.228759765625, 24539.21875, 1172.2908935546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2437), tensor(0.1926), tensor(0.2264), tensor(0.0530), tensor(0.0682), tensor(0.0328)]
sparse:
[tensor(0.2451), tensor(0.1021), tensor(0.2174), tensor(0.0680), tensor(0.0682), tensor(0.0328)]
[0, 4, 128416.109375, 13746.947265625, 158634.125, 2972.8564453125, 11404.70703125, 1176.8681640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2081), tensor(0.2533), tensor(0.2468), tensor(0.0429), tensor(0.0427), tensor(0.0479)]
sparse:
[tensor(0.2141), tensor(0.1004), tensor(0.2391), tensor(0.0536), tensor(0.0427), tensor(0.0479)]
[0, 4, 43187.50390625, 15562.73046875, 107556.3515625, 1808.2083740234375, 13424.640625, 838.4896240234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2849), tensor(0.1400), tensor(0.1148), tensor(0.0890), tensor(0.0504), tensor(0.0431)]
sparse:
[tensor(0.2823), tensor(0.1037), tensor(0.1119), tensor(0.0757), tensor(0.0504), tensor(0.0431)]
[0, 4, 115294.625, 9027.7626953125, 107263.90625, 2327.631591796875, 15918.2353515625, 916.1077880859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1976), tensor(0.1348), tensor(0.1311), tensor(0.0449), tensor(0.0038), tensor(0.0073)]
sparse:
[tensor(0.2036), tensor(0.1414), tensor(0.1202), tensor(0.0810), tensor(0.0038), tensor(0.0073)]
[0, 4, 45956.90625, 9492.330078125, 90783.890625, 2058.502197265625, 4340.9375, 115.09628295898438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2079), tensor(0.0949), tensor(0.1922), tensor(0.0188), tensor(0.0969), tensor(0.0467)]
sparse:
[tensor(0.2155), tensor(0.1277), tensor(0.1845), tensor(0.0569), tensor(0.0969), tensor(0.0467)]
[0, 4, 46055.609375, 9659.904296875, 119399.390625, 2651.478515625, 15677.833984375, 680.2427978515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2076), tensor(0.1139), tensor(0.2416), tensor(0.0268), tensor(0.0568), tensor(0.0640)]
sparse:
[tensor(0.2021), tensor(0.0646), tensor(0.2317), tensor(0.0435), tensor(0.0568), tensor(0.0640)]
[0, 4, 39779.91796875, 7425.2353515625, 42805.40625, 900.4746704101562, 6034.18896484375, 610.677734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2659), tensor(0.2656), tensor(0.1737), tensor(0.0389), tensor(0.0393), tensor(0.0304)]
sparse:
[tensor(0.2715), tensor(0.0904), tensor(0.1676), tensor(0.0811), tensor(0.0393), tensor(0.0304)]
[0, 4, 47695.5703125, 7608.333984375, 54300.68359375, 2383.319580078125, 11217.2548828125, 687.8597412109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2188), tensor(0.1875), tensor(0.1116), tensor(0.0271), tensor(0.0219), tensor(0.0196)]
sparse:
[tensor(0.2176), tensor(0.1366), tensor(0.1029), tensor(0.0471), tensor(0.0219), tensor(0.0196)]
[0, 4, 53801.67578125, 8251.015625, 64836.5390625, 2360.9345703125, 12109.21484375, 704.5433349609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1954), tensor(0.1445), tensor(0.0596), tensor(0.0250), tensor(0.0198), tensor(0.0077)]
sparse:
[tensor(0.1953), tensor(0.0952), tensor(0.0577), tensor(0.0286), tensor(0.0198), tensor(0.0077)]
[0, 4, 65119.75, 7174.72998046875, 93542.6953125, 1571.974609375, 3185.239013671875, 265.345458984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2188), tensor(0.1135), tensor(0.2283), tensor(0.0480), tensor(0.0756), tensor(0.0434)]
sparse:
[tensor(0.2179), tensor(0.0995), tensor(0.2199), tensor(0.0571), tensor(0.0756), tensor(0.0434)]
[0, 4, 80957.1171875, 7742.009765625, 53440.390625, 1474.271240234375, 8147.68359375, 676.0359497070312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2723), tensor(0.1557), tensor(0.2033), tensor(0.0558), tensor(0.0620), tensor(0.0364)]
sparse:
[tensor(0.2681), tensor(0.1173), tensor(0.1919), tensor(0.0631), tensor(0.0620), tensor(0.0364)]
[0, 4, 31584.35546875, 10113.2099609375, 88929.59375, 2809.79296875, 10475.17578125, 966.0274658203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2428), tensor(0.1395), tensor(0.1680), tensor(0.0848), tensor(0.0477), tensor(0.0205)]
sparse:
[tensor(0.2324), tensor(0.0740), tensor(0.1511), tensor(0.0718), tensor(0.0477), tensor(0.0205)]
[0, 4, 85142.2890625, 9969.357421875, 54179.9375, 1812.4581298828125, 6053.37353515625, 518.0950317382812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2064), tensor(0.1072), tensor(0.1245), tensor(0.0363), tensor(0.0231), tensor(0.0253)]
sparse:
[tensor(0.2205), tensor(0.1095), tensor(0.1210), tensor(0.0424), tensor(0.0231), tensor(0.0253)]
[0, 4, 51385.75, 9218.6650390625, 174672.90625, 2968.028076171875, 9407.103515625, 386.34771728515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2428), tensor(0.1006), tensor(0.0574), tensor(0.1055), tensor(0.0068), tensor(0.0097)]
sparse:
[tensor(0.2399), tensor(0.1097), tensor(0.0690), tensor(0.1197), tensor(0.0068), tensor(0.0097)]
[0, 4, 45276.78515625, 8221.685546875, 86846.171875, 3376.3154296875, 5104.5712890625, 164.89089965820312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1624), tensor(0.1386), tensor(0.1696), tensor(0.0187), tensor(0.0487), tensor(0.0249)]
sparse:
[tensor(0.1666), tensor(0.1046), tensor(0.1643), tensor(0.0424), tensor(0.0487), tensor(0.0249)]
[0, 4, 33481.1640625, 10016.6962890625, 84844.125, 1606.0035400390625, 10810.443359375, 718.9982299804688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2712), tensor(0.2829), tensor(0.0502), tensor(0.0289), tensor(0.0097), tensor(0.0108)]
sparse:
[tensor(0.2675), tensor(0.1477), tensor(0.0486), tensor(0.0532), tensor(0.0097), tensor(0.0108)]
[0, 4, 22654.35546875, 8911.1220703125, 47027.5390625, 1876.346923828125, 1623.748291015625, 179.67835998535156]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2187), tensor(0.1335), tensor(0.2300), tensor(0.0273), tensor(0.0613), tensor(0.0385)]
sparse:
[tensor(0.2136), tensor(0.0922), tensor(0.2146), tensor(0.0772), tensor(0.0613), tensor(0.0385)]
[0, 4, 51613.8125, 7833.0927734375, 40913.49609375, 2383.84814453125, 9006.431640625, 953.1397705078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2047), tensor(0.1313), tensor(0.1114), tensor(0.0406), tensor(0.0765), tensor(0.0733)]
sparse:
[tensor(0.2080), tensor(0.1173), tensor(0.1056), tensor(0.0415), tensor(0.0765), tensor(0.0733)]
[0, 4, 62441.81640625, 7791.7685546875, 89670.3828125, 2089.74267578125, 32551.498046875, 1131.902099609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2123), tensor(0.1107), tensor(0.2122), tensor(0.1011), tensor(0.0840), tensor(0.0247)]
sparse:
[tensor(0.2142), tensor(0.0967), tensor(0.1941), tensor(0.0763), tensor(0.0840), tensor(0.0247)]
[0, 4, 85482.53125, 10563.8701171875, 49761.6015625, 2080.4716796875, 8908.4970703125, 728.001708984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2499), tensor(0.1534), tensor(0.0882), tensor(0.0500), tensor(0.0392), tensor(0.0363)]
sparse:
[tensor(0.2514), tensor(0.1458), tensor(0.0864), tensor(0.0458), tensor(0.0392), tensor(0.0363)]
[0, 4, 25395.220703125, 9191.146484375, 78871.796875, 1515.989501953125, 9042.103515625, 487.7029113769531]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2266), tensor(0.1226), tensor(0.2157), tensor(0.0312), tensor(0.0721), tensor(0.0298)]
sparse:
[tensor(0.2190), tensor(0.1154), tensor(0.2044), tensor(0.0704), tensor(0.0721), tensor(0.0298)]
[0, 4, 50628.015625, 8136.5205078125, 59405.6796875, 1990.116943359375, 10128.046875, 838.3931274414062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2415), tensor(0.1748), tensor(0.1076), tensor(0.0357), tensor(0.0417), tensor(0.0318)]
sparse:
[tensor(0.2437), tensor(0.1016), tensor(0.1025), tensor(0.0331), tensor(0.0417), tensor(0.0318)]
[0, 4, 34052.375, 7359.43310546875, 45788.328125, 1881.256591796875, 12705.03125, 529.2058715820312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1886), tensor(0.1447), tensor(0.1803), tensor(0.0257), tensor(0.0572), tensor(0.0318)]
sparse:
[tensor(0.1913), tensor(0.1344), tensor(0.1721), tensor(0.0399), tensor(0.0572), tensor(0.0318)]
[0, 4, 35412.73828125, 7524.111328125, 58922.171875, 1545.96240234375, 9185.8203125, 810.7542114257812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2460), tensor(0.1227), tensor(0.1601), tensor(0.0253), tensor(0.0893), tensor(0.0888)]
sparse:
[tensor(0.2541), tensor(0.1173), tensor(0.1517), tensor(0.0409), tensor(0.0893), tensor(0.0888)]
[0, 4, 90619.1171875, 7689.74267578125, 78519.8125, 3164.029296875, 11546.1953125, 1364.833984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2183), tensor(0.1418), tensor(0.1355), tensor(0.0665), tensor(0.0493), tensor(0.0588)]
sparse:
[tensor(0.2163), tensor(0.1330), tensor(0.1334), tensor(0.0591), tensor(0.0493), tensor(0.0588)]
[0, 4, 50201.8671875, 8802.58984375, 133743.65625, 3743.675048828125, 15158.166015625, 606.953857421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2258), tensor(0.1255), tensor(0.1587), tensor(0.0246), tensor(0.0833), tensor(0.0357)]
sparse:
[tensor(0.2252), tensor(0.1122), tensor(0.1555), tensor(0.0297), tensor(0.0833), tensor(0.0357)]
[0, 4, 35397.53125, 7429.8779296875, 58203.26171875, 2098.9111328125, 12160.51171875, 941.69140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1789), tensor(0.1004), tensor(0.0772), tensor(0.0244), tensor(0.0128), tensor(0.0135)]
sparse:
[tensor(0.1786), tensor(0.1028), tensor(0.0753), tensor(0.0480), tensor(0.0128), tensor(0.0135)]
[0, 4, 71740.578125, 7288.68359375, 107293.09375, 3160.32568359375, 7094.576171875, 298.57440185546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2954), tensor(0.1107), tensor(0.2193), tensor(0.0568), tensor(0.0973), tensor(0.0340)]
sparse:
[tensor(0.2902), tensor(0.1422), tensor(0.2083), tensor(0.0669), tensor(0.0973), tensor(0.0340)]
[0, 4, 61409.890625, 9051.568359375, 80827.390625, 2075.051025390625, 8361.46875, 750.7061157226562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1970), tensor(0.1292), tensor(0.0970), tensor(0.0349), tensor(0.0266), tensor(0.0241)]
sparse:
[tensor(0.2047), tensor(0.0919), tensor(0.0952), tensor(0.0365), tensor(0.0266), tensor(0.0241)]
[0, 4, 43036.1796875, 11975.1630859375, 174854.59375, 2690.4248046875, 7405.3642578125, 438.9643249511719]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2711), tensor(0.1754), tensor(0.0380), tensor(0.0482), tensor(0.0070), tensor(0.0054)]
sparse:
[tensor(0.2695), tensor(0.1474), tensor(0.0408), tensor(0.0540), tensor(0.0070), tensor(0.0054)]
[0, 4, 41098.671875, 8610.388671875, 84055.140625, 1704.520263671875, 1934.623046875, 130.60873413085938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1724), tensor(0.1489), tensor(0.1588), tensor(0.0298), tensor(0.0852), tensor(0.0645)]
sparse:
[tensor(0.1713), tensor(0.0950), tensor(0.1505), tensor(0.0336), tensor(0.0852), tensor(0.0645)]
[0, 4, 41467.078125, 10038.056640625, 89363.578125, 2567.95068359375, 19033.318359375, 1126.896240234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2592), tensor(0.1136), tensor(0.0858), tensor(0.0115), tensor(0.0221), tensor(0.0126)]
sparse:
[tensor(0.2647), tensor(0.1074), tensor(0.0819), tensor(0.0295), tensor(0.0221), tensor(0.0126)]
[0, 4, 124047.9609375, 7982.85400390625, 72547.453125, 2224.65869140625, 3542.93701171875, 419.3815002441406]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1136), tensor(0.1769), tensor(0.0864), tensor(0.0307), tensor(0.0124), tensor(0.0265)]
sparse:
[tensor(0.1128), tensor(0.0923), tensor(0.0864), tensor(0.0486), tensor(0.0124), tensor(0.0265)]
[0, 4, 86158.640625, 7599.87890625, 63605.79296875, 2304.671142578125, 3410.81982421875, 259.5725402832031]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2226), tensor(0.1148), tensor(0.1148), tensor(0.0203), tensor(0.0942), tensor(0.0406)]
sparse:
[tensor(0.2465), tensor(0.1085), tensor(0.1063), tensor(0.0261), tensor(0.0942), tensor(0.0406)]
[0, 4, 42323.8359375, 9587.93359375, 64188.6640625, 1174.74267578125, 14427.337890625, 797.8255004882812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1384), tensor(0.1542), tensor(0.0960), tensor(0.0381), tensor(0.0241), tensor(0.0217)]
sparse:
[tensor(0.1477), tensor(0.1301), tensor(0.0903), tensor(0.0374), tensor(0.0241), tensor(0.0217)]
[0, 4, 51990.5390625, 10313.0810546875, 144298.578125, 2377.720703125, 3523.661376953125, 388.47283935546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2202), tensor(0.1267), tensor(0.1584), tensor(0.0432), tensor(0.0460), tensor(0.0264)]
sparse:
[tensor(0.2155), tensor(0.1044), tensor(0.1478), tensor(0.0484), tensor(0.0460), tensor(0.0264)]
[0, 4, 43349.125, 7645.6064453125, 57877.7578125, 1875.60693359375, 9804.7890625, 738.4342651367188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1905), tensor(0.2209), tensor(0.0752), tensor(0.0628), tensor(0.0498), tensor(0.0357)]
sparse:
[tensor(0.1861), tensor(0.1065), tensor(0.0739), tensor(0.0658), tensor(0.0498), tensor(0.0357)]
[0, 4, 102353.578125, 10389.986328125, 230441.8125, 4521.787109375, 14525.7294921875, 515.4002685546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3232), tensor(0.3471), tensor(0.1466), tensor(0.0842), tensor(0.0541), tensor(0.0370)]
sparse:
[tensor(0.3087), tensor(0.1173), tensor(0.1383), tensor(0.1134), tensor(0.0541), tensor(0.0370)]
[0, 4, 77136.515625, 7943.25830078125, 52314.23828125, 3585.67822265625, 13478.5029296875, 661.5032958984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2721), tensor(0.4710), tensor(0.1147), tensor(0.0600), tensor(0.0233), tensor(0.0135)]
sparse:
[tensor(0.2536), tensor(0.1718), tensor(0.1124), tensor(0.0555), tensor(0.0233), tensor(0.0135)]
[0, 4, 72576.7890625, 17471.7578125, 178420.5, 4857.4775390625, 5575.9326171875, 339.02789306640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1835), tensor(0.1432), tensor(0.0907), tensor(0.0138), tensor(0.0239), tensor(0.0306)]
sparse:
[tensor(0.1932), tensor(0.0717), tensor(0.0860), tensor(0.0198), tensor(0.0239), tensor(0.0306)]
[0, 4, 157837.96875, 7152.037109375, 61761.54296875, 2175.11279296875, 11083.818359375, 561.1034545898438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4061), tensor(0.2245), tensor(0.2236), tensor(0.0811), tensor(0.1054), tensor(0.0321)]
sparse:
[tensor(0.3921), tensor(0.2792), tensor(0.2011), tensor(0.0792), tensor(0.1054), tensor(0.0321)]
[0, 4, 186421.203125, 9487.3515625, 96304.5859375, 4251.33984375, 17136.18359375, 823.21630859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4000), tensor(0.2222), tensor(0.3539), tensor(0.1273), tensor(0.0790), tensor(0.0434)]
sparse:
[tensor(0.3998), tensor(0.0782), tensor(0.3252), tensor(0.1279), tensor(0.0790), tensor(0.0434)]
[0, 4, 275605.875, 11812.265625, 115883.578125, 2926.896484375, 11126.291015625, 725.8828125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4960), tensor(0.1411), tensor(0.1412), tensor(0.0480), tensor(0.0601), tensor(0.0491)]
sparse:
[tensor(0.4889), tensor(0.1882), tensor(0.1371), tensor(0.0972), tensor(0.0601), tensor(0.0491)]
[0, 4, 132358.9375, 9402.34375, 86083.3359375, 2697.390625, 24040.720703125, 880.3162231445312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.4355), tensor(0.2853), tensor(0.2707), tensor(0.0397), tensor(0.0613), tensor(0.0438)]
sparse:
[tensor(0.4211), tensor(0.1249), tensor(0.2530), tensor(0.0672), tensor(0.0613), tensor(0.0438)]
[0, 4, 123536.1015625, 10943.2783203125, 77369.0234375, 1288.699951171875, 9476.869140625, 713.2930297851562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2511), tensor(0.1456), tensor(0.2758), tensor(0.0399), tensor(0.0510), tensor(0.0523)]
sparse:
[tensor(0.2582), tensor(0.0808), tensor(0.2565), tensor(0.0486), tensor(0.0510), tensor(0.0523)]
[0, 4, 123482.1171875, 10001.552734375, 81755.7578125, 3239.7158203125, 8655.458984375, 851.1815795898438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2726), tensor(0.1573), tensor(0.0863), tensor(0.0577), tensor(0.0440), tensor(0.0259)]
sparse:
[tensor(0.2738), tensor(0.1060), tensor(0.0837), tensor(0.0550), tensor(0.0440), tensor(0.0259)]
[0, 4, 44698.4765625, 9121.916015625, 92532.140625, 2567.23681640625, 15422.705078125, 716.709716796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2381), tensor(0.1268), tensor(0.1653), tensor(0.0238), tensor(0.0469), tensor(0.0224)]
sparse:
[tensor(0.2576), tensor(0.0877), tensor(0.1508), tensor(0.0327), tensor(0.0469), tensor(0.0224)]
[0, 4, 62875.65234375, 12274.1923828125, 193745.859375, 1074.6422119140625, 6075.2392578125, 515.21630859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1794), tensor(0.0983), tensor(0.0153), tensor(0.0283), tensor(0.0005), tensor(0.0008)]
sparse:
[tensor(0.1803), tensor(0.1170), tensor(0.0160), tensor(0.0442), tensor(0.0005), tensor(0.0008)]
[0, 4, 27758.3671875, 10545.0078125, 103565.34375, 3090.136962890625, 1073.542236328125, 9.812150955200195]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2867), tensor(0.1126), tensor(0.2034), tensor(0.0196), tensor(0.0350), tensor(0.0270)]
sparse:
[tensor(0.2937), tensor(0.1555), tensor(0.1926), tensor(0.0405), tensor(0.0350), tensor(0.0270)]
[0, 4, 44497.55859375, 8625.7177734375, 104447.046875, 1832.921630859375, 14207.859375, 774.6610107421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1691), tensor(0.1041), tensor(0.0388), tensor(0.0439), tensor(0.0035), tensor(0.0065)]
sparse:
[tensor(0.1724), tensor(0.1176), tensor(0.0398), tensor(0.0545), tensor(0.0035), tensor(0.0065)]
[0, 4, 34922.31640625, 9945.0419921875, 65005.9453125, 2945.79638671875, 2332.583740234375, 54.888877868652344]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2556), tensor(0.1004), tensor(0.2152), tensor(0.0171), tensor(0.0355), tensor(0.0312)]
sparse:
[tensor(0.2634), tensor(0.0837), tensor(0.1992), tensor(0.0390), tensor(0.0355), tensor(0.0312)]
[0, 4, 35972.65625, 6152.96630859375, 62295.66796875, 1461.642822265625, 11478.1669921875, 686.2515258789062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1942), tensor(0.1391), tensor(0.0771), tensor(0.0342), tensor(0.0416), tensor(0.0294)]
sparse:
[tensor(0.1940), tensor(0.0631), tensor(0.0788), tensor(0.0564), tensor(0.0416), tensor(0.0294)]
[0, 4, 41941.59765625, 9406.806640625, 73971.28125, 2464.635009765625, 13594.1171875, 446.9083251953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2041), tensor(0.0953), tensor(0.1973), tensor(0.0223), tensor(0.0691), tensor(0.0370)]
sparse:
[tensor(0.1984), tensor(0.1024), tensor(0.1853), tensor(0.0426), tensor(0.0691), tensor(0.0370)]
[0, 4, 54840.04296875, 8209.015625, 75644.5390625, 2110.05078125, 17524.3671875, 912.4300537109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1840), tensor(0.2331), tensor(0.0987), tensor(0.0708), tensor(0.0479), tensor(0.0411)]
sparse:
[tensor(0.1828), tensor(0.1343), tensor(0.0931), tensor(0.0664), tensor(0.0479), tensor(0.0411)]
[0, 4, 49355.4375, 10361.2431640625, 65558.84375, 2780.68212890625, 20593.61328125, 934.0636596679688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1986), tensor(0.1968), tensor(0.2028), tensor(0.1150), tensor(0.0337), tensor(0.0252)]
sparse:
[tensor(0.2046), tensor(0.0963), tensor(0.1970), tensor(0.1069), tensor(0.0337), tensor(0.0252)]
[0, 4, 72790.25, 11048.8779296875, 114297.8359375, 3445.46484375, 8987.744140625, 375.6539306640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1643), tensor(0.1370), tensor(0.0915), tensor(0.0940), tensor(0.0391), tensor(0.0253)]
sparse:
[tensor(0.1670), tensor(0.1125), tensor(0.0872), tensor(0.0749), tensor(0.0391), tensor(0.0253)]
[0, 4, 47847.4609375, 6843.83642578125, 42698.6015625, 2249.22509765625, 9126.849609375, 599.2338256835938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2078), tensor(0.1007), tensor(0.1290), tensor(0.0446), tensor(0.0134), tensor(0.0083)]
sparse:
[tensor(0.2152), tensor(0.1215), tensor(0.1293), tensor(0.0785), tensor(0.0134), tensor(0.0083)]
[0, 4, 40611.05078125, 10519.1640625, 81608.234375, 2289.222412109375, 3500.58203125, 231.05743408203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1814), tensor(0.1446), tensor(0.1743), tensor(0.0183), tensor(0.0963), tensor(0.0466)]
sparse:
[tensor(0.1791), tensor(0.1052), tensor(0.1665), tensor(0.0512), tensor(0.0963), tensor(0.0466)]
[0, 4, 55781.09375, 8560.119140625, 54771.046875, 2507.4169921875, 21999.96875, 927.8289794921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2556), tensor(0.1034), tensor(0.0984), tensor(0.0301), tensor(0.0810), tensor(0.0419)]
sparse:
[tensor(0.2734), tensor(0.1228), tensor(0.0942), tensor(0.0410), tensor(0.0810), tensor(0.0419)]
[0, 4, 63754.1171875, 8358.052734375, 74736.9375, 2247.947021484375, 15137.806640625, 950.747802734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2314), tensor(0.1638), tensor(0.1134), tensor(0.0147), tensor(0.0370), tensor(0.0160)]
sparse:
[tensor(0.2354), tensor(0.0992), tensor(0.1070), tensor(0.0330), tensor(0.0370), tensor(0.0160)]
[0, 4, 58565.609375, 10890.271484375, 124778.765625, 1825.41162109375, 7938.84716796875, 524.95458984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2401), tensor(0.1136), tensor(0.1748), tensor(0.0208), tensor(0.0592), tensor(0.0446)]
sparse:
[tensor(0.2363), tensor(0.0827), tensor(0.1631), tensor(0.0551), tensor(0.0592), tensor(0.0446)]
[0, 4, 69730.109375, 9110.125, 68036.375, 2710.13671875, 19556.50390625, 1140.52490234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1920), tensor(0.1289), tensor(0.0552), tensor(0.0262), tensor(0.0852), tensor(0.0522)]
sparse:
[tensor(0.2104), tensor(0.1015), tensor(0.0545), tensor(0.0290), tensor(0.0852), tensor(0.0522)]
[0, 4, 69136.3828125, 8945.1640625, 122624.6171875, 3340.2392578125, 35185.9609375, 1091.7056884765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1900), tensor(0.2481), tensor(0.1536), tensor(0.0280), tensor(0.0308), tensor(0.0304)]
sparse:
[tensor(0.1997), tensor(0.1503), tensor(0.1428), tensor(0.0539), tensor(0.0308), tensor(0.0304)]
[0, 4, 39091.12890625, 11269.1083984375, 122151.078125, 2205.26416015625, 6070.28125, 421.35369873046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2383), tensor(0.1157), tensor(0.0431), tensor(0.0181), tensor(0.0054), tensor(0.0091)]
sparse:
[tensor(0.2404), tensor(0.0714), tensor(0.0415), tensor(0.0387), tensor(0.0054), tensor(0.0091)]
[0, 4, 74281.96875, 9337.677734375, 98134.46875, 1040.4678955078125, 8958.2763671875, 162.88311767578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2932), tensor(0.1462), tensor(0.2247), tensor(0.0467), tensor(0.0661), tensor(0.0403)]
sparse:
[tensor(0.2930), tensor(0.1664), tensor(0.2104), tensor(0.0598), tensor(0.0661), tensor(0.0403)]
[0, 4, 54869.1171875, 8940.380859375, 68333.6875, 2378.28759765625, 9626.474609375, 770.1864013671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2257), tensor(0.1420), tensor(0.0628), tensor(0.0222), tensor(0.0094), tensor(0.0076)]
sparse:
[tensor(0.2283), tensor(0.0753), tensor(0.0611), tensor(0.0258), tensor(0.0094), tensor(0.0076)]
[0, 4, 88276.109375, 7946.95654296875, 96282.109375, 1646.1888427734375, 20488.1640625, 327.22186279296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2442), tensor(0.1642), tensor(0.2014), tensor(0.0561), tensor(0.0244), tensor(0.0217)]
sparse:
[tensor(0.2569), tensor(0.0973), tensor(0.1814), tensor(0.0534), tensor(0.0244), tensor(0.0217)]
[0, 4, 70019.59375, 10935.478515625, 169605.65625, 3242.652587890625, 10706.564453125, 469.79534912109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2356), tensor(0.1506), tensor(0.0443), tensor(0.0827), tensor(0.0085), tensor(0.0176)]
sparse:
[tensor(0.2376), tensor(0.1093), tensor(0.0475), tensor(0.0610), tensor(0.0085), tensor(0.0176)]
[0, 4, 40801.16015625, 9316.6640625, 50443.3671875, 1750.9053955078125, 4286.2734375, 250.057373046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2870), tensor(0.1540), tensor(0.1919), tensor(0.0488), tensor(0.0572), tensor(0.0474)]
sparse:
[tensor(0.2904), tensor(0.1212), tensor(0.1817), tensor(0.0605), tensor(0.0572), tensor(0.0474)]
[0, 4, 70178.203125, 8216.509765625, 67579.921875, 1929.8602294921875, 19199.62890625, 1042.585205078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2329), tensor(0.1054), tensor(0.1237), tensor(0.0208), tensor(0.0435), tensor(0.0271)]
sparse:
[tensor(0.2307), tensor(0.1063), tensor(0.1137), tensor(0.0652), tensor(0.0435), tensor(0.0271)]
[0, 4, 54242.9921875, 8718.974609375, 65652.03125, 1546.56884765625, 8611.970703125, 486.22296142578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2458), tensor(0.1104), tensor(0.2014), tensor(0.0168), tensor(0.0603), tensor(0.0297)]
sparse:
[tensor(0.2476), tensor(0.0924), tensor(0.1840), tensor(0.0316), tensor(0.0603), tensor(0.0297)]
[0, 4, 33241.2109375, 8850.9453125, 77446.28125, 1570.22119140625, 7655.2919921875, 567.8533935546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2110), tensor(0.1581), tensor(0.1354), tensor(0.0209), tensor(0.0547), tensor(0.0516)]
sparse:
[tensor(0.2083), tensor(0.0699), tensor(0.1287), tensor(0.0347), tensor(0.0547), tensor(0.0516)]
[0, 4, 26586.220703125, 8394.5224609375, 62440.81640625, 1166.015869140625, 6401.0986328125, 553.002197265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2149), tensor(0.1583), tensor(0.1712), tensor(0.0269), tensor(0.0488), tensor(0.0212)]
sparse:
[tensor(0.2129), tensor(0.0821), tensor(0.1568), tensor(0.0485), tensor(0.0488), tensor(0.0212)]
[0, 4, 45419.3125, 8780.0068359375, 57960.8515625, 1641.1708984375, 8574.1240234375, 554.853515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2371), tensor(0.1244), tensor(0.1349), tensor(0.0822), tensor(0.0633), tensor(0.0379)]
sparse:
[tensor(0.2403), tensor(0.0951), tensor(0.1278), tensor(0.0748), tensor(0.0633), tensor(0.0379)]
[0, 4, 62018.8359375, 8796.2890625, 68945.6484375, 2053.469482421875, 6314.9599609375, 727.3267822265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2365), tensor(0.1104), tensor(0.2680), tensor(0.0487), tensor(0.0726), tensor(0.0418)]
sparse:
[tensor(0.2275), tensor(0.1268), tensor(0.2486), tensor(0.0704), tensor(0.0726), tensor(0.0418)]
[0, 4, 44891.5, 7502.7744140625, 38910.26171875, 1550.4033203125, 8427.70703125, 768.1703491210938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2507), tensor(0.1068), tensor(0.1810), tensor(0.0341), tensor(0.1073), tensor(0.0644)]
sparse:
[tensor(0.2391), tensor(0.0977), tensor(0.1740), tensor(0.0456), tensor(0.1073), tensor(0.0644)]
[0, 4, 49027.99609375, 7366.89453125, 46600.7734375, 1521.5782470703125, 5014.0205078125, 667.3009033203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1902), tensor(0.2243), tensor(0.2286), tensor(0.0986), tensor(0.0596), tensor(0.0344)]
sparse:
[tensor(0.1885), tensor(0.0959), tensor(0.2076), tensor(0.0881), tensor(0.0596), tensor(0.0344)]
[0, 4, 50092.26171875, 8127.95947265625, 36278.73046875, 2064.87939453125, 4493.80859375, 595.687744140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1939), tensor(0.1944), tensor(0.1389), tensor(0.0811), tensor(0.0602), tensor(0.0463)]
sparse:
[tensor(0.2054), tensor(0.0895), tensor(0.1287), tensor(0.0515), tensor(0.0602), tensor(0.0463)]
[0, 4, 64607.23046875, 6706.2412109375, 66787.078125, 3282.419921875, 8442.728515625, 933.5557250976562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1480), tensor(0.1550), tensor(0.0726), tensor(0.0177), tensor(0.0224), tensor(0.0144)]
sparse:
[tensor(0.1522), tensor(0.0907), tensor(0.0707), tensor(0.0382), tensor(0.0224), tensor(0.0144)]
[0, 4, 51674.8203125, 9409.1943359375, 139865.21875, 2049.80419921875, 2254.75634765625, 261.16790771484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2457), tensor(0.1443), tensor(0.1810), tensor(0.0159), tensor(0.0946), tensor(0.0394)]
sparse:
[tensor(0.2449), tensor(0.1112), tensor(0.1755), tensor(0.0328), tensor(0.0946), tensor(0.0394)]
[0, 4, 71619.4609375, 9491.2734375, 83930.25, 2387.103515625, 10508.623046875, 692.40234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2075), tensor(0.1490), tensor(0.1118), tensor(0.0344), tensor(0.0397), tensor(0.0361)]
sparse:
[tensor(0.2132), tensor(0.1098), tensor(0.1053), tensor(0.0374), tensor(0.0397), tensor(0.0361)]
[0, 4, 81198.984375, 11079.6171875, 93901.109375, 1917.7764892578125, 8240.576171875, 624.92431640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2102), tensor(0.1753), tensor(0.1621), tensor(0.0401), tensor(0.0783), tensor(0.0394)]
sparse:
[tensor(0.2233), tensor(0.1844), tensor(0.1505), tensor(0.0459), tensor(0.0783), tensor(0.0394)]
[0, 4, 66592.2734375, 14188.33984375, 66863.0625, 3881.739013671875, 10341.5517578125, 594.494140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2107), tensor(0.1259), tensor(0.1371), tensor(0.0194), tensor(0.0538), tensor(0.0411)]
sparse:
[tensor(0.2156), tensor(0.1059), tensor(0.1279), tensor(0.0542), tensor(0.0538), tensor(0.0411)]
[0, 4, 42094.7578125, 7205.314453125, 46843.0546875, 2197.656982421875, 6414.5, 795.5778198242188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1790), tensor(0.0982), tensor(0.1274), tensor(0.0266), tensor(0.0596), tensor(0.0282)]
sparse:
[tensor(0.1901), tensor(0.1459), tensor(0.1231), tensor(0.0324), tensor(0.0596), tensor(0.0282)]
[0, 4, 35250.8828125, 7875.6484375, 57692.7421875, 2046.5494384765625, 8816.3671875, 567.6326293945312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2007), tensor(0.1867), tensor(0.0793), tensor(0.0202), tensor(0.0385), tensor(0.0149)]
sparse:
[tensor(0.2069), tensor(0.1210), tensor(0.0744), tensor(0.0414), tensor(0.0385), tensor(0.0149)]
[0, 4, 36277.7265625, 10194.873046875, 72427.078125, 1395.53466796875, 8072.66796875, 890.1079711914062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2033), tensor(0.1402), tensor(0.2027), tensor(0.0367), tensor(0.1401), tensor(0.0376)]
sparse:
[tensor(0.1944), tensor(0.1282), tensor(0.1970), tensor(0.0499), tensor(0.1401), tensor(0.0376)]
[0, 4, 47345.125, 9419.396484375, 56929.26171875, 2565.419921875, 9257.583984375, 692.1574096679688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2271), tensor(0.1271), tensor(0.2005), tensor(0.0512), tensor(0.0749), tensor(0.0314)]
sparse:
[tensor(0.2190), tensor(0.1248), tensor(0.1862), tensor(0.0711), tensor(0.0749), tensor(0.0314)]
[0, 4, 40021.55859375, 7721.4619140625, 57487.3515625, 1881.1829833984375, 9291.4501953125, 667.2449340820312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2243), tensor(0.1063), tensor(0.1406), tensor(0.0207), tensor(0.0816), tensor(0.0267)]
sparse:
[tensor(0.2182), tensor(0.1170), tensor(0.1439), tensor(0.0439), tensor(0.0816), tensor(0.0267)]
[0, 4, 51635.2890625, 8386.744140625, 67414.0234375, 3020.19873046875, 15682.962890625, 959.3916015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2034), tensor(0.1706), tensor(0.1734), tensor(0.0367), tensor(0.0471), tensor(0.0457)]
sparse:
[tensor(0.2034), tensor(0.1405), tensor(0.1641), tensor(0.0486), tensor(0.0471), tensor(0.0457)]
[0, 4, 41256.08203125, 7432.47900390625, 74139.96875, 3006.697265625, 8927.3359375, 864.813232421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2372), tensor(0.1255), tensor(0.1885), tensor(0.0152), tensor(0.0733), tensor(0.0379)]
sparse:
[tensor(0.2480), tensor(0.0804), tensor(0.1822), tensor(0.0376), tensor(0.0733), tensor(0.0379)]
[0, 4, 56226.84765625, 8601.58203125, 84962.15625, 1550.23046875, 9734.6298828125, 805.626220703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2322), tensor(0.1714), tensor(0.1339), tensor(0.0294), tensor(0.0507), tensor(0.0334)]
sparse:
[tensor(0.2394), tensor(0.1024), tensor(0.1300), tensor(0.0499), tensor(0.0507), tensor(0.0334)]
[0, 4, 79467.9375, 13491.5078125, 135423.8125, 2682.1357421875, 20114.41796875, 865.4985961914062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2099), tensor(0.2077), tensor(0.1168), tensor(0.0603), tensor(0.0687), tensor(0.0326)]
sparse:
[tensor(0.2066), tensor(0.0978), tensor(0.1110), tensor(0.0568), tensor(0.0687), tensor(0.0326)]
[0, 4, 40116.8203125, 11178.6025390625, 139491.359375, 2725.955078125, 9128.548828125, 564.4075927734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1793), tensor(0.1337), tensor(0.1096), tensor(0.0107), tensor(0.0158), tensor(0.0430)]
sparse:
[tensor(0.1870), tensor(0.0779), tensor(0.1062), tensor(0.0225), tensor(0.0158), tensor(0.0430)]
[0, 4, 69119.6796875, 8115.9208984375, 78810.9375, 1292.85791015625, 5061.45849609375, 438.7825927734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1656), tensor(0.1350), tensor(0.1639), tensor(0.0387), tensor(0.0463), tensor(0.0368)]
sparse:
[tensor(0.1804), tensor(0.1200), tensor(0.1520), tensor(0.0400), tensor(0.0463), tensor(0.0368)]
[0, 4, 28540.81640625, 7169.677734375, 125722.34375, 2182.615234375, 12872.140625, 879.8840942382812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2012), tensor(0.1033), tensor(0.1795), tensor(0.0417), tensor(0.1088), tensor(0.0435)]
sparse:
[tensor(0.2097), tensor(0.0842), tensor(0.1732), tensor(0.0500), tensor(0.1088), tensor(0.0435)]
[0, 4, 33057.90625, 14049.2314453125, 93302.46875, 2938.91796875, 11798.16796875, 700.892333984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2475), tensor(0.1711), tensor(0.1698), tensor(0.0371), tensor(0.0450), tensor(0.0433)]
sparse:
[tensor(0.2517), tensor(0.0809), tensor(0.1651), tensor(0.0443), tensor(0.0450), tensor(0.0433)]
[0, 4, 28128.58203125, 9604.888671875, 88381.921875, 1932.226318359375, 7430.4970703125, 656.1821899414062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2079), tensor(0.1109), tensor(0.1402), tensor(0.0471), tensor(0.0585), tensor(0.0314)]
sparse:
[tensor(0.2073), tensor(0.0902), tensor(0.1307), tensor(0.0547), tensor(0.0585), tensor(0.0314)]
[0, 4, 51796.26171875, 6481.4052734375, 60500.1171875, 2844.076416015625, 13537.04296875, 573.8592529296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2649), tensor(0.1871), tensor(0.1410), tensor(0.0318), tensor(0.0290), tensor(0.0302)]
sparse:
[tensor(0.2537), tensor(0.0730), tensor(0.1335), tensor(0.0414), tensor(0.0290), tensor(0.0302)]
[0, 4, 26064.509765625, 8921.6279296875, 69843.796875, 2041.70654296875, 11351.333984375, 559.205810546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2289), tensor(0.1279), tensor(0.1908), tensor(0.0255), tensor(0.1003), tensor(0.0326)]
sparse:
[tensor(0.2261), tensor(0.1658), tensor(0.1820), tensor(0.0438), tensor(0.1003), tensor(0.0326)]
[0, 4, 75292.515625, 6408.8212890625, 44353.203125, 1615.01025390625, 9481.69140625, 701.6914672851562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2143), tensor(0.2065), tensor(0.0919), tensor(0.0435), tensor(0.0194), tensor(0.0114)]
sparse:
[tensor(0.2132), tensor(0.1410), tensor(0.0891), tensor(0.0445), tensor(0.0194), tensor(0.0114)]
[0, 4, 37734.0859375, 7119.873046875, 44476.8203125, 2117.759765625, 5672.7548828125, 401.35223388671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2454), tensor(0.0912), tensor(0.1359), tensor(0.0173), tensor(0.0733), tensor(0.0362)]
sparse:
[tensor(0.2474), tensor(0.1346), tensor(0.1321), tensor(0.0527), tensor(0.0733), tensor(0.0362)]
[0, 4, 64681.76953125, 6481.81787109375, 46173.03125, 1755.135986328125, 8331.48046875, 838.6952514648438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2180), tensor(0.1269), tensor(0.1463), tensor(0.0195), tensor(0.0362), tensor(0.0295)]
sparse:
[tensor(0.2133), tensor(0.1382), tensor(0.1403), tensor(0.0472), tensor(0.0362), tensor(0.0295)]
[0, 4, 25348.060546875, 7986.3095703125, 49068.140625, 1716.9002685546875, 13643.294921875, 787.3931884765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1894), tensor(0.1707), tensor(0.1621), tensor(0.0303), tensor(0.0939), tensor(0.0573)]
sparse:
[tensor(0.1932), tensor(0.0816), tensor(0.1472), tensor(0.0400), tensor(0.0939), tensor(0.0573)]
[0, 4, 71002.0, 9876.3662109375, 101793.96875, 1606.13427734375, 10494.9052734375, 1024.1641845703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1675), tensor(0.1240), tensor(0.1160), tensor(0.0148), tensor(0.0631), tensor(0.0675)]
sparse:
[tensor(0.1779), tensor(0.0768), tensor(0.1122), tensor(0.0248), tensor(0.0631), tensor(0.0675)]
[0, 4, 75913.578125, 9371.8447265625, 94389.875, 2441.34912109375, 12233.6279296875, 941.689453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1306), tensor(0.0697), tensor(0.0948), tensor(0.0405), tensor(0.0595), tensor(0.0379)]
sparse:
[tensor(0.1431), tensor(0.1329), tensor(0.0954), tensor(0.0442), tensor(0.0595), tensor(0.0379)]
[0, 4, 64767.640625, 12039.357421875, 262095.125, 2574.163330078125, 25267.7109375, 830.3309936523438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2255), tensor(0.1458), tensor(0.0741), tensor(0.0226), tensor(0.0215), tensor(0.0150)]
sparse:
[tensor(0.2259), tensor(0.0799), tensor(0.0709), tensor(0.0344), tensor(0.0215), tensor(0.0150)]
[0, 4, 37027.796875, 7988.08349609375, 82757.75, 1940.696044921875, 7630.5947265625, 390.3714904785156]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2413), tensor(0.1851), tensor(0.1496), tensor(0.0485), tensor(0.0444), tensor(0.0319)]
sparse:
[tensor(0.2475), tensor(0.1149), tensor(0.1406), tensor(0.0691), tensor(0.0444), tensor(0.0319)]
[0, 4, 29227.99609375, 8311.533203125, 76759.1953125, 2313.3701171875, 11829.09765625, 696.584716796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1805), tensor(0.1086), tensor(0.1519), tensor(0.0239), tensor(0.0524), tensor(0.0327)]
sparse:
[tensor(0.1909), tensor(0.1603), tensor(0.1448), tensor(0.0360), tensor(0.0524), tensor(0.0327)]
[0, 4, 78664.109375, 8209.6435546875, 82876.6953125, 3116.806884765625, 12903.44921875, 676.014404296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3635), tensor(0.1669), tensor(0.1651), tensor(0.0297), tensor(0.1246), tensor(0.0566)]
sparse:
[tensor(0.3568), tensor(0.1432), tensor(0.1565), tensor(0.0689), tensor(0.1246), tensor(0.0566)]
[0, 4, 125048.859375, 9114.1796875, 81398.203125, 2586.1650390625, 27111.53125, 918.89892578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3179), tensor(0.3549), tensor(0.2349), tensor(0.0418), tensor(0.0663), tensor(0.0375)]
sparse:
[tensor(0.2978), tensor(0.1222), tensor(0.2236), tensor(0.0495), tensor(0.0663), tensor(0.0375)]
[0, 4, 58446.62109375, 8933.7841796875, 67293.4609375, 2581.37548828125, 21727.06640625, 951.7445068359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2917), tensor(0.5353), tensor(0.1264), tensor(0.0156), tensor(0.0428), tensor(0.0310)]
sparse:
[tensor(0.2744), tensor(0.1116), tensor(0.1221), tensor(0.0344), tensor(0.0428), tensor(0.0310)]
[0, 4, 92820.625, 8170.2626953125, 77718.96875, 2540.31982421875, 11722.0205078125, 628.880126953125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2556), tensor(0.2185), tensor(0.3881), tensor(0.0659), tensor(0.2226), tensor(0.1007)]
sparse:
[tensor(0.2670), tensor(0.1771), tensor(0.3707), tensor(0.0691), tensor(0.2226), tensor(0.1007)]
[0, 4, 1961063.875, 11285.2109375, 207930.0, 9709.728515625, 65623.09375, 1967.391845703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2539), tensor(0.1536), tensor(0.1010), tensor(0.0621), tensor(0.0233), tensor(0.0060)]
sparse:
[tensor(0.2680), tensor(0.0927), tensor(0.0899), tensor(0.0532), tensor(0.0233), tensor(0.0060)]
[0, 4, 113176.359375, 8078.78125, 114319.046875, 2258.47607421875, 8261.1328125, 299.626708984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3468), tensor(0.1263), tensor(0.0844), tensor(0.0260), tensor(0.0269), tensor(0.0090)]
sparse:
[tensor(0.3620), tensor(0.1107), tensor(0.0815), tensor(0.0469), tensor(0.0269), tensor(0.0090)]
[0, 4, 74433.171875, 9242.5390625, 125752.6484375, 3746.692138671875, 16538.158203125, 368.156005859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2853), tensor(0.1701), tensor(0.0708), tensor(0.0168), tensor(0.0098), tensor(0.0152)]
sparse:
[tensor(0.2897), tensor(0.1438), tensor(0.0673), tensor(0.0341), tensor(0.0098), tensor(0.0152)]
[0, 4, 46632.234375, 11523.8515625, 136102.65625, 2873.1669921875, 9475.30859375, 325.57470703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2700), tensor(0.1486), tensor(0.0999), tensor(0.0121), tensor(0.0470), tensor(0.0294)]
sparse:
[tensor(0.2597), tensor(0.0865), tensor(0.0970), tensor(0.0185), tensor(0.0470), tensor(0.0294)]
[0, 4, 97360.625, 13391.001953125, 130839.125, 1417.465576171875, 12539.029296875, 893.6818237304688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2510), tensor(0.1328), tensor(0.1150), tensor(0.0233), tensor(0.0441), tensor(0.0490)]
sparse:
[tensor(0.2564), tensor(0.1171), tensor(0.1180), tensor(0.0510), tensor(0.0441), tensor(0.0490)]
[0, 4, 59089.71484375, 9200.41796875, 97499.546875, 2541.0439453125, 20793.07421875, 647.5767822265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2903), tensor(0.1230), tensor(0.1779), tensor(0.0253), tensor(0.0340), tensor(0.0205)]
sparse:
[tensor(0.2854), tensor(0.0965), tensor(0.1671), tensor(0.0512), tensor(0.0340), tensor(0.0205)]
[0, 4, 53594.5, 8942.1083984375, 52016.78515625, 1820.256103515625, 9887.755859375, 493.58514404296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2459), tensor(0.1613), tensor(0.0976), tensor(0.1202), tensor(0.0107), tensor(0.0205)]
sparse:
[tensor(0.2408), tensor(0.0790), tensor(0.0938), tensor(0.0874), tensor(0.0107), tensor(0.0205)]
[0, 4, 34405.40625, 7907.8828125, 71808.4296875, 2243.52099609375, 7917.98486328125, 453.34716796875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2875), tensor(0.2024), tensor(0.2044), tensor(0.0196), tensor(0.0707), tensor(0.0296)]
sparse:
[tensor(0.2829), tensor(0.1109), tensor(0.1928), tensor(0.0410), tensor(0.0707), tensor(0.0296)]
[0, 4, 71347.640625, 7780.06494140625, 54291.15625, 1972.47607421875, 11252.130859375, 760.5496826171875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2273), tensor(0.1628), tensor(0.1124), tensor(0.1011), tensor(0.0251), tensor(0.0432)]
sparse:
[tensor(0.2377), tensor(0.1017), tensor(0.1091), tensor(0.0837), tensor(0.0251), tensor(0.0432)]
[0, 4, 104303.328125, 8936.1787109375, 75884.2109375, 2281.08935546875, 14706.74609375, 719.9354248046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1680), tensor(0.1071), tensor(0.1937), tensor(0.0236), tensor(0.0681), tensor(0.0185)]
sparse:
[tensor(0.1751), tensor(0.1277), tensor(0.1841), tensor(0.0496), tensor(0.0681), tensor(0.0185)]
[0, 4, 26088.763671875, 7394.00830078125, 99222.625, 2286.533203125, 18569.28515625, 510.28741455078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2708), tensor(0.0947), tensor(0.1530), tensor(0.0140), tensor(0.0739), tensor(0.0385)]
sparse:
[tensor(0.2724), tensor(0.1129), tensor(0.1526), tensor(0.0353), tensor(0.0739), tensor(0.0385)]
[0, 4, 63936.21484375, 8410.1845703125, 58154.8359375, 1902.65283203125, 16243.27734375, 1399.6396484375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2261), tensor(0.1741), tensor(0.1581), tensor(0.0248), tensor(0.0339), tensor(0.0155)]
sparse:
[tensor(0.2297), tensor(0.1050), tensor(0.1574), tensor(0.0506), tensor(0.0339), tensor(0.0155)]
[0, 4, 74085.78125, 11130.7587890625, 146751.578125, 3102.20849609375, 13933.458984375, 424.3923034667969]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2868), tensor(0.1308), tensor(0.1659), tensor(0.0322), tensor(0.0805), tensor(0.0364)]
sparse:
[tensor(0.2887), tensor(0.1182), tensor(0.1628), tensor(0.0365), tensor(0.0805), tensor(0.0364)]
[0, 4, 48028.0, 7474.736328125, 77062.21875, 1967.7147216796875, 11827.9541015625, 739.0240478515625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1868), tensor(0.1179), tensor(0.2435), tensor(0.0130), tensor(0.0553), tensor(0.0375)]
sparse:
[tensor(0.2047), tensor(0.1096), tensor(0.2370), tensor(0.0336), tensor(0.0553), tensor(0.0375)]
[0, 4, 62352.03125, 10026.27734375, 78242.9296875, 3270.70458984375, 19838.525390625, 861.2128295898438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1853), tensor(0.1127), tensor(0.0661), tensor(0.0203), tensor(0.0199), tensor(0.0106)]
sparse:
[tensor(0.1865), tensor(0.1013), tensor(0.0615), tensor(0.0454), tensor(0.0199), tensor(0.0106)]
[0, 4, 79292.09375, 8647.8779296875, 124274.296875, 1989.6171875, 3395.581298828125, 299.3445129394531]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2090), tensor(0.1184), tensor(0.2357), tensor(0.0143), tensor(0.0989), tensor(0.0400)]
sparse:
[tensor(0.2143), tensor(0.0944), tensor(0.2273), tensor(0.0395), tensor(0.0989), tensor(0.0400)]
[0, 4, 52624.2734375, 9322.89453125, 80029.5625, 2122.42724609375, 15990.1826171875, 918.22607421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1989), tensor(0.1249), tensor(0.1397), tensor(0.0322), tensor(0.0414), tensor(0.0238)]
sparse:
[tensor(0.2070), tensor(0.1292), tensor(0.1345), tensor(0.0527), tensor(0.0414), tensor(0.0238)]
[0, 4, 42926.40625, 7715.50390625, 54286.9296875, 1425.2615966796875, 7790.16162109375, 609.4779663085938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1313), tensor(0.1348), tensor(0.1082), tensor(0.0066), tensor(0.1090), tensor(0.0706)]
sparse:
[tensor(0.1388), tensor(0.0905), tensor(0.1060), tensor(0.0170), tensor(0.1090), tensor(0.0706)]
[0, 4, 50548.6015625, 8983.33203125, 139198.28125, 1471.569091796875, 50724.84765625, 685.67431640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2357), tensor(0.1192), tensor(0.2516), tensor(0.0689), tensor(0.0791), tensor(0.0344)]
sparse:
[tensor(0.2361), tensor(0.1426), tensor(0.2371), tensor(0.0621), tensor(0.0791), tensor(0.0344)]
[0, 4, 29467.33203125, 8113.2353515625, 51215.8984375, 2130.109375, 7442.94140625, 579.3341674804688]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2653), tensor(0.1324), tensor(0.1862), tensor(0.0718), tensor(0.0748), tensor(0.0282)]
sparse:
[tensor(0.2708), tensor(0.1065), tensor(0.1775), tensor(0.0703), tensor(0.0748), tensor(0.0282)]
[0, 4, 67516.609375, 8717.841796875, 92366.25, 3335.96435546875, 11646.6826171875, 662.1617431640625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1726), tensor(0.1275), tensor(0.0872), tensor(0.0367), tensor(0.0486), tensor(0.0217)]
sparse:
[tensor(0.1877), tensor(0.1345), tensor(0.0815), tensor(0.0338), tensor(0.0486), tensor(0.0217)]
[0, 4, 85767.5, 7850.1884765625, 128865.453125, 2481.81396484375, 25220.9765625, 693.072265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1734), tensor(0.1229), tensor(0.2117), tensor(0.0306), tensor(0.0460), tensor(0.0379)]
sparse:
[tensor(0.1802), tensor(0.1045), tensor(0.2071), tensor(0.0507), tensor(0.0460), tensor(0.0379)]
[0, 4, 43318.28125, 8412.0380859375, 130941.7421875, 2619.755126953125, 4673.56640625, 473.3604736328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2269), tensor(0.1774), tensor(0.2085), tensor(0.0327), tensor(0.0855), tensor(0.0458)]
sparse:
[tensor(0.2300), tensor(0.1570), tensor(0.2007), tensor(0.0364), tensor(0.0855), tensor(0.0458)]
[0, 4, 61369.5078125, 8306.771484375, 82872.1875, 2037.87109375, 15865.7275390625, 747.1180419921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1902), tensor(0.1325), tensor(0.1260), tensor(0.0850), tensor(0.0198), tensor(0.0145)]
sparse:
[tensor(0.1910), tensor(0.1040), tensor(0.1188), tensor(0.0597), tensor(0.0198), tensor(0.0145)]
[0, 4, 53471.75, 7512.60888671875, 55281.0625, 2388.21337890625, 5814.7529296875, 301.38616943359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2077), tensor(0.1306), tensor(0.1586), tensor(0.0227), tensor(0.1160), tensor(0.0804)]
sparse:
[tensor(0.2073), tensor(0.1263), tensor(0.1466), tensor(0.0476), tensor(0.1160), tensor(0.0804)]
[0, 4, 47019.5234375, 9380.056640625, 73536.484375, 2681.43408203125, 13621.2861328125, 1161.014892578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2308), tensor(0.2093), tensor(0.1696), tensor(0.0298), tensor(0.0289), tensor(0.0268)]
sparse:
[tensor(0.2259), tensor(0.1088), tensor(0.1594), tensor(0.0646), tensor(0.0289), tensor(0.0268)]
[0, 4, 44689.25, 7040.0517578125, 56694.1875, 2388.35107421875, 15041.16796875, 538.9229736328125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2121), tensor(0.1586), tensor(0.1013), tensor(0.0146), tensor(0.0592), tensor(0.0362)]
sparse:
[tensor(0.2147), tensor(0.0851), tensor(0.0979), tensor(0.0285), tensor(0.0592), tensor(0.0362)]
[0, 4, 55087.5234375, 7432.13916015625, 69281.9609375, 1666.0029296875, 14621.931640625, 755.8641357421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2949), tensor(0.1552), tensor(0.1948), tensor(0.0182), tensor(0.0474), tensor(0.0320)]
sparse:
[tensor(0.2915), tensor(0.1095), tensor(0.1852), tensor(0.0408), tensor(0.0474), tensor(0.0320)]
[0, 4, 119713.796875, 9127.123046875, 82958.6875, 2054.3056640625, 16660.95703125, 837.955322265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2303), tensor(0.2135), tensor(0.1997), tensor(0.0163), tensor(0.1228), tensor(0.0452)]
sparse:
[tensor(0.2319), tensor(0.1441), tensor(0.1947), tensor(0.0478), tensor(0.1228), tensor(0.0452)]
[0, 4, 59401.421875, 10415.9248046875, 70649.2109375, 1764.091796875, 14192.44921875, 1045.46630859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1923), tensor(0.1111), tensor(0.1976), tensor(0.0252), tensor(0.0379), tensor(0.0348)]
sparse:
[tensor(0.1921), tensor(0.0915), tensor(0.1822), tensor(0.0436), tensor(0.0379), tensor(0.0348)]
[0, 4, 64607.7109375, 8271.830078125, 83388.109375, 1536.3193359375, 6868.1923828125, 655.3707275390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2704), tensor(0.1112), tensor(0.2771), tensor(0.0411), tensor(0.1012), tensor(0.0637)]
sparse:
[tensor(0.2633), tensor(0.1185), tensor(0.2604), tensor(0.0638), tensor(0.1012), tensor(0.0637)]
[0, 4, 44569.00390625, 6724.8154296875, 43746.38671875, 1928.330322265625, 13452.8935546875, 1047.4287109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2261), tensor(0.1972), tensor(0.1564), tensor(0.0628), tensor(0.0281), tensor(0.0166)]
sparse:
[tensor(0.2207), tensor(0.0813), tensor(0.1537), tensor(0.0989), tensor(0.0281), tensor(0.0166)]
[0, 4, 36939.71875, 7229.2568359375, 62244.66015625, 3050.618408203125, 3979.7802734375, 254.39236450195312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1768), tensor(0.1012), tensor(0.0710), tensor(0.0275), tensor(0.0210), tensor(0.0137)]
sparse:
[tensor(0.1964), tensor(0.1137), tensor(0.0700), tensor(0.0523), tensor(0.0210), tensor(0.0137)]
[0, 4, 60891.171875, 9364.30078125, 124403.7890625, 2208.414794921875, 5376.2529296875, 381.9829406738281]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1760), tensor(0.1676), tensor(0.1061), tensor(0.0331), tensor(0.0152), tensor(0.0147)]
sparse:
[tensor(0.1793), tensor(0.1602), tensor(0.1087), tensor(0.0498), tensor(0.0152), tensor(0.0147)]
[0, 4, 54038.46875, 9637.38671875, 80439.0078125, 2062.1279296875, 5500.04345703125, 271.17742919921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2148), tensor(0.1886), tensor(0.1602), tensor(0.0700), tensor(0.1197), tensor(0.0306)]
sparse:
[tensor(0.2166), tensor(0.1375), tensor(0.1554), tensor(0.0663), tensor(0.1197), tensor(0.0306)]
[0, 4, 97355.140625, 8192.177734375, 61579.5390625, 2560.8115234375, 12631.46484375, 787.9576416015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1764), tensor(0.1677), tensor(0.2463), tensor(0.0465), tensor(0.0671), tensor(0.0430)]
sparse:
[tensor(0.1742), tensor(0.1233), tensor(0.2344), tensor(0.0615), tensor(0.0671), tensor(0.0430)]
[0, 4, 59278.1875, 8597.2958984375, 56310.64453125, 2893.550537109375, 24477.22265625, 970.21630859375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2453), tensor(0.1500), tensor(0.2105), tensor(0.0594), tensor(0.0752), tensor(0.0368)]
sparse:
[tensor(0.2488), tensor(0.1354), tensor(0.2028), tensor(0.1118), tensor(0.0752), tensor(0.0368)]
[0, 4, 34704.96484375, 8762.072265625, 73265.3984375, 1972.247314453125, 6552.580078125, 478.67547607421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1705), tensor(0.1312), tensor(0.1427), tensor(0.0372), tensor(0.0340), tensor(0.0343)]
sparse:
[tensor(0.1763), tensor(0.1025), tensor(0.1261), tensor(0.0587), tensor(0.0340), tensor(0.0343)]
[0, 4, 52916.0625, 8484.408203125, 65722.796875, 2697.413818359375, 24996.67578125, 767.3909301757812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2634), tensor(0.1015), tensor(0.2267), tensor(0.0201), tensor(0.0400), tensor(0.0522)]
sparse:
[tensor(0.2677), tensor(0.1030), tensor(0.2143), tensor(0.0384), tensor(0.0400), tensor(0.0522)]
[0, 4, 70992.546875, 9031.658203125, 88676.296875, 1119.622802734375, 6680.5537109375, 606.4995727539062]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1952), tensor(0.1745), tensor(0.2086), tensor(0.0678), tensor(0.0658), tensor(0.0393)]
sparse:
[tensor(0.1979), tensor(0.1100), tensor(0.1985), tensor(0.0942), tensor(0.0658), tensor(0.0393)]
[0, 4, 25970.3984375, 7491.5703125, 56562.03515625, 2436.201904296875, 9577.05859375, 638.05419921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2761), tensor(0.1586), tensor(0.1758), tensor(0.0222), tensor(0.0795), tensor(0.0331)]
sparse:
[tensor(0.2871), tensor(0.1418), tensor(0.1636), tensor(0.0502), tensor(0.0795), tensor(0.0331)]
[0, 4, 57360.84765625, 10709.423828125, 59086.1171875, 1946.9180908203125, 11217.3212890625, 866.557373046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1844), tensor(0.0938), tensor(0.2003), tensor(0.0190), tensor(0.0735), tensor(0.0434)]
sparse:
[tensor(0.1840), tensor(0.1043), tensor(0.1933), tensor(0.0285), tensor(0.0735), tensor(0.0434)]
[0, 4, 59979.3046875, 6688.69921875, 41647.46875, 1483.4029541015625, 16362.921875, 899.409912109375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2231), tensor(0.1258), tensor(0.1454), tensor(0.0294), tensor(0.0931), tensor(0.0301)]
sparse:
[tensor(0.2223), tensor(0.0634), tensor(0.1390), tensor(0.0385), tensor(0.0931), tensor(0.0301)]
[0, 4, 38084.29296875, 6914.283203125, 55455.69140625, 1792.4942626953125, 9549.4912109375, 549.6715087890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1557), tensor(0.1173), tensor(0.2124), tensor(0.0283), tensor(0.0474), tensor(0.0335)]
sparse:
[tensor(0.1629), tensor(0.1139), tensor(0.2080), tensor(0.0387), tensor(0.0474), tensor(0.0335)]
[0, 4, 26169.990234375, 7566.5439453125, 67270.453125, 2898.538818359375, 17375.818359375, 1007.9772338867188]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2428), tensor(0.1079), tensor(0.1241), tensor(0.1090), tensor(0.0325), tensor(0.0225)]
sparse:
[tensor(0.2519), tensor(0.1222), tensor(0.1224), tensor(0.1024), tensor(0.0325), tensor(0.0225)]
[0, 4, 34426.25, 9090.873046875, 78080.4375, 2681.38330078125, 4667.1298828125, 277.24774169921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1520), tensor(0.1028), tensor(0.2168), tensor(0.0257), tensor(0.0566), tensor(0.0521)]
sparse:
[tensor(0.1568), tensor(0.1060), tensor(0.2124), tensor(0.0473), tensor(0.0566), tensor(0.0521)]
[0, 4, 54682.0234375, 9007.298828125, 95865.015625, 3547.779296875, 22412.01171875, 602.1658325195312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3080), tensor(0.1489), tensor(0.1675), tensor(0.0252), tensor(0.0611), tensor(0.0271)]
sparse:
[tensor(0.3050), tensor(0.0710), tensor(0.1589), tensor(0.0455), tensor(0.0611), tensor(0.0271)]
[0, 4, 54301.05859375, 7748.17431640625, 57993.921875, 2067.053955078125, 14663.888671875, 774.44140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1767), tensor(0.1339), tensor(0.1673), tensor(0.0316), tensor(0.1045), tensor(0.0517)]
sparse:
[tensor(0.1741), tensor(0.0996), tensor(0.1598), tensor(0.0431), tensor(0.1045), tensor(0.0517)]
[0, 4, 133780.625, 7956.18115234375, 60941.9609375, 3800.22509765625, 33691.0234375, 1208.97900390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3360), tensor(0.2602), tensor(0.1835), tensor(0.0738), tensor(0.0730), tensor(0.0246)]
sparse:
[tensor(0.3213), tensor(0.1343), tensor(0.1708), tensor(0.0663), tensor(0.0730), tensor(0.0246)]
[0, 4, 35949.1171875, 7982.580078125, 48019.9140625, 2189.66357421875, 7591.640625, 602.0103759765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2221), tensor(0.1358), tensor(0.1361), tensor(0.0335), tensor(0.0717), tensor(0.0487)]
sparse:
[tensor(0.2259), tensor(0.1177), tensor(0.1329), tensor(0.0380), tensor(0.0717), tensor(0.0487)]
[0, 4, 67564.421875, 8127.09912109375, 80873.96875, 1997.03564453125, 20704.05078125, 1202.848388671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1751), tensor(0.1567), tensor(0.0989), tensor(0.0420), tensor(0.0210), tensor(0.0177)]
sparse:
[tensor(0.1820), tensor(0.1051), tensor(0.0916), tensor(0.0474), tensor(0.0210), tensor(0.0177)]
[0, 4, 93569.765625, 11817.654296875, 226705.515625, 2919.211669921875, 7695.34912109375, 603.785888671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2523), tensor(0.1440), tensor(0.1138), tensor(0.0296), tensor(0.0494), tensor(0.0291)]
sparse:
[tensor(0.2563), tensor(0.0909), tensor(0.1104), tensor(0.0373), tensor(0.0494), tensor(0.0291)]
[0, 4, 136071.03125, 8811.7109375, 94786.890625, 1633.3681640625, 7790.63720703125, 769.2315063476562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1845), tensor(0.1094), tensor(0.1162), tensor(0.0326), tensor(0.0866), tensor(0.0330)]
sparse:
[tensor(0.1974), tensor(0.1172), tensor(0.1110), tensor(0.0302), tensor(0.0866), tensor(0.0330)]
[0, 4, 52858.5859375, 6544.54052734375, 55855.6484375, 2428.67578125, 21409.18359375, 1062.97607421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2108), tensor(0.1247), tensor(0.1855), tensor(0.0408), tensor(0.0769), tensor(0.0489)]
sparse:
[tensor(0.2110), tensor(0.0792), tensor(0.1802), tensor(0.0539), tensor(0.0769), tensor(0.0489)]
[0, 4, 16472.896484375, 8206.935546875, 93895.6875, 2147.349609375, 14753.748046875, 1086.1732177734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2248), tensor(0.1549), tensor(0.0817), tensor(0.0434), tensor(0.0153), tensor(0.0108)]
sparse:
[tensor(0.2347), tensor(0.1545), tensor(0.0820), tensor(0.0663), tensor(0.0153), tensor(0.0108)]
[0, 4, 36753.41015625, 7559.53564453125, 51597.2890625, 3203.0, 4869.630859375, 312.42498779296875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2268), tensor(0.2102), tensor(0.1449), tensor(0.1653), tensor(0.0310), tensor(0.0287)]
sparse:
[tensor(0.2237), tensor(0.1170), tensor(0.1371), tensor(0.1222), tensor(0.0310), tensor(0.0287)]
[0, 4, 25054.55859375, 6579.44482421875, 40990.60546875, 2447.81005859375, 4408.75, 353.555908203125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3988), tensor(0.1872), tensor(0.2438), tensor(0.0520), tensor(0.0883), tensor(0.0307)]
sparse:
[tensor(0.3998), tensor(0.0881), tensor(0.2171), tensor(0.0618), tensor(0.0883), tensor(0.0307)]
[0, 4, 173128.75, 8696.376953125, 91743.65625, 2858.399169921875, 15748.609375, 745.3004150390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1858), tensor(0.2669), tensor(0.0943), tensor(0.0556), tensor(0.0268), tensor(0.0216)]
sparse:
[tensor(0.1878), tensor(0.1236), tensor(0.0886), tensor(0.0558), tensor(0.0268), tensor(0.0216)]
[0, 4, 57269.8515625, 10967.7607421875, 82220.9140625, 2677.58837890625, 6066.90869140625, 437.82568359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2522), tensor(0.1444), tensor(0.1717), tensor(0.0260), tensor(0.0567), tensor(0.0249)]
sparse:
[tensor(0.2565), tensor(0.0680), tensor(0.1649), tensor(0.0428), tensor(0.0567), tensor(0.0249)]
[0, 4, 73052.125, 10394.54296875, 67909.171875, 1398.8990478515625, 8655.3720703125, 674.416259765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2155), tensor(0.1551), tensor(0.1425), tensor(0.1169), tensor(0.0396), tensor(0.0369)]
sparse:
[tensor(0.2095), tensor(0.0865), tensor(0.1341), tensor(0.1005), tensor(0.0396), tensor(0.0369)]
[0, 4, 49724.75, 7893.53515625, 59469.109375, 2545.240234375, 14526.6474609375, 694.1265869140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2576), tensor(0.1185), tensor(0.2086), tensor(0.0274), tensor(0.0703), tensor(0.0250)]
sparse:
[tensor(0.2582), tensor(0.1388), tensor(0.1940), tensor(0.0357), tensor(0.0703), tensor(0.0250)]
[0, 4, 66210.125, 8788.390625, 75097.984375, 1850.109375, 6115.2294921875, 578.4349975585938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1623), tensor(0.1187), tensor(0.0380), tensor(0.0482), tensor(0.0037), tensor(0.0109)]
sparse:
[tensor(0.1749), tensor(0.1020), tensor(0.0394), tensor(0.0506), tensor(0.0037), tensor(0.0109)]
[0, 4, 65969.828125, 8231.4443359375, 80292.453125, 3246.28173828125, 2693.4130859375, 119.25648498535156]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2978), tensor(0.1705), tensor(0.2177), tensor(0.0171), tensor(0.0740), tensor(0.0432)]
sparse:
[tensor(0.2890), tensor(0.1295), tensor(0.2040), tensor(0.0488), tensor(0.0740), tensor(0.0432)]
[0, 4, 49384.6953125, 10670.10546875, 62488.0703125, 1948.590087890625, 10597.3818359375, 730.401123046875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1420), tensor(0.1188), tensor(0.1354), tensor(0.0517), tensor(0.1329), tensor(0.0526)]
sparse:
[tensor(0.1418), tensor(0.0826), tensor(0.1390), tensor(0.0735), tensor(0.1329), tensor(0.0526)]
[0, 4, 69931.71875, 12652.376953125, 154174.015625, 3319.943359375, 35206.4375, 1225.1474609375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2808), tensor(0.1299), tensor(0.2408), tensor(0.0375), tensor(0.0849), tensor(0.0321)]
sparse:
[tensor(0.2843), tensor(0.1291), tensor(0.2234), tensor(0.0473), tensor(0.0849), tensor(0.0321)]
[0, 4, 43552.33984375, 9420.3759765625, 70792.5859375, 2149.04248046875, 7553.95556640625, 689.1845703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1722), tensor(0.1248), tensor(0.1226), tensor(0.0660), tensor(0.0529), tensor(0.0231)]
sparse:
[tensor(0.1852), tensor(0.1134), tensor(0.1158), tensor(0.0635), tensor(0.0529), tensor(0.0231)]
[0, 4, 71273.21875, 10387.07421875, 109111.734375, 2501.75, 8281.240234375, 474.588134765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2173), tensor(0.1048), tensor(0.1567), tensor(0.0451), tensor(0.0486), tensor(0.0277)]
sparse:
[tensor(0.2259), tensor(0.1125), tensor(0.1486), tensor(0.0538), tensor(0.0486), tensor(0.0277)]
[0, 4, 32708.87890625, 8364.013671875, 79312.28125, 2778.455078125, 6435.50146484375, 473.29071044921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1369), tensor(0.1572), tensor(0.0249), tensor(0.0235), tensor(0.0072), tensor(0.0114)]
sparse:
[tensor(0.1537), tensor(0.0959), tensor(0.0236), tensor(0.0217), tensor(0.0072), tensor(0.0114)]
[0, 4, 56068.6875, 9036.76953125, 146920.3125, 2617.060546875, 1962.9200439453125, 125.84406280517578]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1928), tensor(0.1666), tensor(0.1668), tensor(0.0259), tensor(0.0407), tensor(0.0389)]
sparse:
[tensor(0.1955), tensor(0.0957), tensor(0.1565), tensor(0.0321), tensor(0.0407), tensor(0.0389)]
[0, 4, 46222.0234375, 8993.423828125, 94757.8515625, 1270.949951171875, 8554.140625, 730.6158447265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2450), tensor(0.2271), tensor(0.0539), tensor(0.0646), tensor(0.0204), tensor(0.0074)]
sparse:
[tensor(0.2593), tensor(0.1470), tensor(0.0533), tensor(0.0538), tensor(0.0204), tensor(0.0074)]
[0, 4, 37641.20703125, 8769.5537109375, 86879.5234375, 3091.35888671875, 3408.23388671875, 200.76174926757812]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2929), tensor(0.1282), tensor(0.2958), tensor(0.0771), tensor(0.1416), tensor(0.0745)]
sparse:
[tensor(0.2937), tensor(0.1219), tensor(0.2855), tensor(0.0757), tensor(0.1416), tensor(0.0745)]
[0, 4, 143271.46875, 14316.4541015625, 118040.53125, 5022.90380859375, 29263.935546875, 1378.3232421875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3533), tensor(0.3574), tensor(0.1408), tensor(0.0495), tensor(0.0302), tensor(0.0161)]
sparse:
[tensor(0.3287), tensor(0.1306), tensor(0.1291), tensor(0.0750), tensor(0.0302), tensor(0.0161)]
[0, 4, 63824.44140625, 10749.4521484375, 99354.34375, 3242.487548828125, 13825.66015625, 543.183837890625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.0770), tensor(0.1250), tensor(0.0192), tensor(0.0226), tensor(0.0012), tensor(0.0017)]
sparse:
[tensor(0.0948), tensor(0.0838), tensor(0.0190), tensor(0.0293), tensor(0.0012), tensor(0.0017)]
[0, 4, 58703.3984375, 14474.103515625, 264629.125, 724.582763671875, 1340.803466796875, 38.618133544921875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2280), tensor(0.1094), tensor(0.1334), tensor(0.0276), tensor(0.0402), tensor(0.0262)]
sparse:
[tensor(0.2387), tensor(0.1077), tensor(0.1304), tensor(0.0445), tensor(0.0402), tensor(0.0262)]
[0, 4, 62872.76171875, 8556.6875, 76231.046875, 2660.47705078125, 5997.240234375, 464.6002197265625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2329), tensor(0.1266), tensor(0.1974), tensor(0.0404), tensor(0.0650), tensor(0.0305)]
sparse:
[tensor(0.2348), tensor(0.1011), tensor(0.1841), tensor(0.0511), tensor(0.0650), tensor(0.0305)]
[0, 4, 38542.953125, 7447.6201171875, 62380.0234375, 2016.8360595703125, 5532.8369140625, 536.3697509765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2396), tensor(0.1448), tensor(0.1649), tensor(0.0283), tensor(0.0627), tensor(0.0668)]
sparse:
[tensor(0.2372), tensor(0.1079), tensor(0.1569), tensor(0.0490), tensor(0.0627), tensor(0.0668)]
[0, 4, 49786.2578125, 7722.830078125, 67964.6484375, 2691.96337890625, 15011.3935546875, 1055.019775390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2064), tensor(0.1023), tensor(0.2109), tensor(0.0360), tensor(0.0392), tensor(0.0267)]
sparse:
[tensor(0.2107), tensor(0.0954), tensor(0.1964), tensor(0.0440), tensor(0.0392), tensor(0.0267)]
[0, 4, 94008.5625, 8722.822265625, 75928.0390625, 2808.4541015625, 6472.75927734375, 619.66552734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2030), tensor(0.1115), tensor(0.1926), tensor(0.0189), tensor(0.1076), tensor(0.0497)]
sparse:
[tensor(0.2114), tensor(0.1329), tensor(0.1837), tensor(0.0479), tensor(0.1076), tensor(0.0497)]
[0, 4, 39191.5625, 9024.67578125, 56783.15625, 1947.42431640625, 12050.615234375, 909.595458984375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2750), tensor(0.1568), tensor(0.1703), tensor(0.0465), tensor(0.0538), tensor(0.0269)]
sparse:
[tensor(0.2637), tensor(0.0978), tensor(0.1636), tensor(0.0600), tensor(0.0538), tensor(0.0269)]
[0, 4, 41836.390625, 7451.28515625, 67468.6953125, 2678.431640625, 10504.658203125, 544.2891845703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2316), tensor(0.0994), tensor(0.0753), tensor(0.0267), tensor(0.0144), tensor(0.0151)]
sparse:
[tensor(0.2365), tensor(0.1566), tensor(0.0713), tensor(0.0396), tensor(0.0144), tensor(0.0151)]
[0, 4, 58708.41796875, 7191.8857421875, 47528.0078125, 2598.6259765625, 5923.0341796875, 282.39453125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2534), tensor(0.1572), tensor(0.2098), tensor(0.0624), tensor(0.0483), tensor(0.0245)]
sparse:
[tensor(0.2511), tensor(0.1206), tensor(0.2015), tensor(0.0664), tensor(0.0483), tensor(0.0245)]
[0, 4, 48625.1015625, 9171.35546875, 66744.03125, 2535.945068359375, 8727.9306640625, 665.1326293945312]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1913), tensor(0.1056), tensor(0.0999), tensor(0.0731), tensor(0.0305), tensor(0.0234)]
sparse:
[tensor(0.1953), tensor(0.1132), tensor(0.0967), tensor(0.0786), tensor(0.0305), tensor(0.0234)]
[0, 4, 37811.46484375, 11254.732421875, 85681.65625, 1892.500244140625, 7623.8896484375, 467.8924560546875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2618), tensor(0.1121), tensor(0.2047), tensor(0.0263), tensor(0.1214), tensor(0.0419)]
sparse:
[tensor(0.2614), tensor(0.1098), tensor(0.2048), tensor(0.0441), tensor(0.1214), tensor(0.0419)]
[0, 4, 43046.1953125, 7404.296875, 57041.53125, 1802.119140625, 17793.9609375, 786.263427734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1978), tensor(0.1147), tensor(0.1110), tensor(0.0502), tensor(0.0278), tensor(0.0212)]
sparse:
[tensor(0.1953), tensor(0.0680), tensor(0.1093), tensor(0.0630), tensor(0.0278), tensor(0.0212)]
[0, 4, 37829.6484375, 8213.69921875, 55139.59765625, 2215.84130859375, 9412.953125, 435.5818786621094]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2133), tensor(0.1771), tensor(0.1632), tensor(0.0242), tensor(0.0649), tensor(0.0444)]
sparse:
[tensor(0.2140), tensor(0.1036), tensor(0.1555), tensor(0.0540), tensor(0.0649), tensor(0.0444)]
[0, 4, 40011.71875, 6854.841796875, 27397.1796875, 1296.67626953125, 11100.166015625, 769.9312744140625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1994), tensor(0.2034), tensor(0.1743), tensor(0.0421), tensor(0.0660), tensor(0.0497)]
sparse:
[tensor(0.1972), tensor(0.0995), tensor(0.1628), tensor(0.0952), tensor(0.0660), tensor(0.0497)]
[0, 4, 39480.0859375, 10432.3818359375, 47926.30859375, 2057.346923828125, 9354.17578125, 723.6425170898438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2350), tensor(0.1124), tensor(0.2018), tensor(0.0252), tensor(0.0898), tensor(0.0532)]
sparse:
[tensor(0.2323), tensor(0.1191), tensor(0.1959), tensor(0.0401), tensor(0.0898), tensor(0.0532)]
[0, 4, 46471.0234375, 8753.763671875, 36735.25, 1655.0625, 18660.53125, 856.8485717773438]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1997), tensor(0.2654), tensor(0.1019), tensor(0.0235), tensor(0.0275), tensor(0.0241)]
sparse:
[tensor(0.2032), tensor(0.1177), tensor(0.0974), tensor(0.0476), tensor(0.0275), tensor(0.0241)]
[0, 4, 34452.640625, 7151.513671875, 57195.32421875, 2085.94189453125, 7684.0244140625, 749.19384765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2394), tensor(0.1180), tensor(0.1582), tensor(0.0622), tensor(0.0531), tensor(0.0198)]
sparse:
[tensor(0.2310), tensor(0.0922), tensor(0.1450), tensor(0.0634), tensor(0.0531), tensor(0.0198)]
[0, 4, 84356.6640625, 7125.7822265625, 35206.25, 1864.895751953125, 7602.99072265625, 521.6124267578125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2361), tensor(0.1048), tensor(0.2193), tensor(0.0438), tensor(0.0904), tensor(0.0362)]
sparse:
[tensor(0.2373), tensor(0.1105), tensor(0.2058), tensor(0.0833), tensor(0.0904), tensor(0.0362)]
[0, 4, 59692.984375, 9108.298828125, 63087.890625, 3475.6044921875, 11675.599609375, 972.38330078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2835), tensor(0.1236), tensor(0.1834), tensor(0.0291), tensor(0.0755), tensor(0.0341)]
sparse:
[tensor(0.2700), tensor(0.1239), tensor(0.1737), tensor(0.0570), tensor(0.0755), tensor(0.0341)]
[0, 4, 43619.26953125, 7531.033203125, 57066.0625, 2731.783447265625, 12373.458984375, 601.6685791015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2069), tensor(0.1791), tensor(0.2222), tensor(0.0590), tensor(0.0654), tensor(0.0402)]
sparse:
[tensor(0.2003), tensor(0.1044), tensor(0.2091), tensor(0.0644), tensor(0.0654), tensor(0.0402)]
[0, 4, 26188.73828125, 8090.0517578125, 42874.8359375, 2758.42578125, 12786.529296875, 1266.8759765625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2131), tensor(0.0946), tensor(0.0395), tensor(0.0753), tensor(0.0067), tensor(0.0065)]
sparse:
[tensor(0.2173), tensor(0.0952), tensor(0.0420), tensor(0.0692), tensor(0.0067), tensor(0.0065)]
[0, 4, 52577.984375, 11895.099609375, 93150.265625, 2194.915771484375, 3706.158203125, 146.8411865234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2082), tensor(0.1986), tensor(0.1710), tensor(0.0494), tensor(0.0699), tensor(0.0299)]
sparse:
[tensor(0.2020), tensor(0.0672), tensor(0.1579), tensor(0.0491), tensor(0.0699), tensor(0.0299)]
[0, 4, 25816.04296875, 7227.880859375, 38127.14453125, 1738.40478515625, 6568.5546875, 665.9505615234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2204), tensor(0.1536), tensor(0.1902), tensor(0.0704), tensor(0.0360), tensor(0.0241)]
sparse:
[tensor(0.2145), tensor(0.1313), tensor(0.1798), tensor(0.0766), tensor(0.0360), tensor(0.0241)]
[0, 4, 49779.17578125, 8335.1845703125, 54039.1171875, 1985.7249755859375, 9422.4912109375, 582.5269775390625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2445), tensor(0.1787), tensor(0.1568), tensor(0.0470), tensor(0.0517), tensor(0.0272)]
sparse:
[tensor(0.2419), tensor(0.1348), tensor(0.1478), tensor(0.0487), tensor(0.0517), tensor(0.0272)]
[0, 4, 28720.7578125, 7726.4111328125, 90566.015625, 2066.85986328125, 5280.6982421875, 668.6406860351562]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1713), tensor(0.1182), tensor(0.1004), tensor(0.0110), tensor(0.0436), tensor(0.0194)]
sparse:
[tensor(0.1759), tensor(0.0820), tensor(0.0967), tensor(0.0235), tensor(0.0436), tensor(0.0194)]
[0, 4, 91564.125, 8793.8828125, 94608.21875, 2275.10888671875, 9931.1015625, 512.210693359375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1942), tensor(0.1329), tensor(0.0859), tensor(0.0158), tensor(0.0560), tensor(0.0150)]
sparse:
[tensor(0.2074), tensor(0.1267), tensor(0.0849), tensor(0.0321), tensor(0.0560), tensor(0.0150)]
[0, 4, 51616.6953125, 9183.0234375, 100942.0390625, 2093.49951171875, 11470.84765625, 445.330078125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1829), tensor(0.1710), tensor(0.1856), tensor(0.0363), tensor(0.0870), tensor(0.0375)]
sparse:
[tensor(0.1812), tensor(0.0862), tensor(0.1741), tensor(0.0425), tensor(0.0870), tensor(0.0375)]
[0, 4, 54490.375, 8230.529296875, 86484.234375, 3478.4794921875, 14570.64453125, 813.93115234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1739), tensor(0.1476), tensor(0.0715), tensor(0.0394), tensor(0.0222), tensor(0.0125)]
sparse:
[tensor(0.1778), tensor(0.1425), tensor(0.0705), tensor(0.0664), tensor(0.0222), tensor(0.0125)]
[0, 4, 49399.6171875, 8337.279296875, 122229.40625, 2032.26708984375, 5422.025390625, 365.427490234375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2045), tensor(0.1319), tensor(0.1386), tensor(0.0358), tensor(0.0679), tensor(0.0216)]
sparse:
[tensor(0.2154), tensor(0.1185), tensor(0.1310), tensor(0.0315), tensor(0.0679), tensor(0.0216)]
[0, 4, 44428.890625, 7151.76171875, 82170.140625, 2137.40234375, 10481.4140625, 664.6707763671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2233), tensor(0.0956), tensor(0.1683), tensor(0.0140), tensor(0.0259), tensor(0.0242)]
sparse:
[tensor(0.2276), tensor(0.1020), tensor(0.1609), tensor(0.0481), tensor(0.0259), tensor(0.0242)]
[0, 4, 56375.55859375, 7233.609375, 55660.625, 1991.34375, 9012.8515625, 545.7435302734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2068), tensor(0.1107), tensor(0.1560), tensor(0.0143), tensor(0.0825), tensor(0.0445)]
sparse:
[tensor(0.2087), tensor(0.1157), tensor(0.1498), tensor(0.0279), tensor(0.0825), tensor(0.0445)]
[0, 4, 52318.984375, 8487.759765625, 55515.3203125, 1847.8525390625, 15992.39453125, 743.4848022460938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2733), tensor(0.1138), tensor(0.1547), tensor(0.0549), tensor(0.0471), tensor(0.0296)]
sparse:
[tensor(0.2798), tensor(0.1023), tensor(0.1497), tensor(0.0545), tensor(0.0471), tensor(0.0296)]
[0, 4, 61333.28515625, 9642.6748046875, 88241.8203125, 2759.13720703125, 11120.13671875, 582.60791015625]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1228), tensor(0.1367), tensor(0.0850), tensor(0.0608), tensor(0.0092), tensor(0.0175)]
sparse:
[tensor(0.1335), tensor(0.0735), tensor(0.0880), tensor(0.0562), tensor(0.0092), tensor(0.0175)]
[0, 4, 38314.80078125, 11423.7041015625, 203802.09375, 2588.16259765625, 8148.244140625, 364.58282470703125]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.2907), tensor(0.1299), tensor(0.1658), tensor(0.0148), tensor(0.0525), tensor(0.0289)]
sparse:
[tensor(0.2933), tensor(0.1106), tensor(0.1542), tensor(0.0363), tensor(0.0525), tensor(0.0289)]
[0, 4, 45147.6640625, 6575.37109375, 58039.0625, 2285.71533203125, 10810.611328125, 690.4935913085938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1627), tensor(0.1118), tensor(0.0995), tensor(0.0779), tensor(0.0116), tensor(0.0221)]
sparse:
[tensor(0.1643), tensor(0.1142), tensor(0.0978), tensor(0.0780), tensor(0.0116), tensor(0.0221)]
[0, 4, 55441.3125, 9351.794921875, 95581.28125, 3126.287109375, 8427.7548828125, 251.57797241210938]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3273), tensor(0.1134), tensor(0.2416), tensor(0.0314), tensor(0.0887), tensor(0.0366)]
sparse:
[tensor(0.3188), tensor(0.1175), tensor(0.2219), tensor(0.0383), tensor(0.0887), tensor(0.0366)]
[0, 4, 53039.015625, 6678.150390625, 35155.609375, 1582.2159423828125, 10609.529296875, 675.8450927734375]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.1786), tensor(0.1623), tensor(0.1791), tensor(0.0362), tensor(0.0688), tensor(0.0513)]
sparse:
[tensor(0.1764), tensor(0.1067), tensor(0.1673), tensor(0.0840), tensor(0.0688), tensor(0.0513)]
[0, 4, 53084.6875, 7834.75390625, 47294.7421875, 2783.697998046875, 19192.490234375, 722.879638671875]
torch.Size([16, 3, 224, 224])
sparse:
[tensor(0.3768), tensor(0.1988), tensor(0.2279), tensor(0.0575), tensor(0.0813), tensor(0.0344)]
